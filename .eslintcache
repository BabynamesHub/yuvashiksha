[{"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\index.js":"1","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\App.js":"2","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\store\\store.js":"3","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\Admin.js":"4","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\LoginRoute.js":"5","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\teacher\\Teacher.js":"6","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\student\\Student.js":"7","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\store\\reducers\\login.js":"8","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\store\\reducers\\adminReducer.js":"9","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Institutionstructure\\Institutionstructure.js":"10","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\UserManagment\\UserMangamenet.js":"11","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Message\\Messagelist.js":"12","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\Login.js":"13","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\ui-elements\\navBar\\NavBar.js":"14","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\ui-elements\\ListItem\\ListItem.js":"15","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\ui-elements\\TabView\\TabView.js":"16","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\teacher\\newExam\\NewExam.js":"17","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Message\\Messagecontent.js":"18","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\student\\components\\examguidelines\\ExamGuidlines.js":"19","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\student\\components\\startexam\\StartExam.js":"20","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\UserManagment\\Teachers.js":"21","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\UserManagment\\Students.js":"22","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Institutionstructure\\Subjects.js":"23","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Institutionstructure\\ClassBatch.js":"24","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Institutionstructure\\Department.js":"25","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\setPassword\\SetPassword.js":"26","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\sigup\\googleSignup\\GoogleSignup.js":"27","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\sigup\\signup.js":"28","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\verifyOtp\\verifyOtp.js":"29","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\shared\\http.js":"30","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\signin\\signin.js":"31","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Message\\Message.js":"32","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\sigup\\teacher\\teacher.js":"33","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\config.js":"34","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\shared\\parseCookie.js":"35","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\sigup\\student\\student.js":"36","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\shared\\dailogBox.js":"37","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Report\\Report.js":"38","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\VerifyAccounts\\VerifyAccounts.js":"39","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Home\\Home.js":"40","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\AdminMain.js":"41","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\AdminLogin\\AdminLogin.js":"42"},{"size":266,"mtime":1610632664329,"results":"43","hashOfConfig":"44"},{"size":1500,"mtime":1614177730086,"results":"45","hashOfConfig":"44"},{"size":273,"mtime":1612448229756,"results":"46","hashOfConfig":"44"},{"size":5092,"mtime":1614235572822,"results":"47","hashOfConfig":"44"},{"size":959,"mtime":1613790149271,"results":"48","hashOfConfig":"44"},{"size":4893,"mtime":1614076163302,"results":"49","hashOfConfig":"44"},{"size":3461,"mtime":1614236738994,"results":"50","hashOfConfig":"44"},{"size":322,"mtime":1611639830870,"results":"51","hashOfConfig":"44"},{"size":232,"mtime":1612448229756,"results":"52","hashOfConfig":"44"},{"size":919,"mtime":1614343039153,"results":"53","hashOfConfig":"44"},{"size":538,"mtime":1613789705877,"results":"54","hashOfConfig":"44"},{"size":1354,"mtime":1614352598519,"results":"55","hashOfConfig":"44"},{"size":4373,"mtime":1613791309150,"results":"56","hashOfConfig":"44"},{"size":577,"mtime":1612015027856,"results":"57","hashOfConfig":"44"},{"size":501,"mtime":1612192173882,"results":"58","hashOfConfig":"44"},{"size":1504,"mtime":1612447802311,"results":"59","hashOfConfig":"44"},{"size":12383,"mtime":1614183111776,"results":"60","hashOfConfig":"44"},{"size":2058,"mtime":1614351846488,"results":"61","hashOfConfig":"44"},{"size":1983,"mtime":1614236738996,"results":"62","hashOfConfig":"44"},{"size":3143,"mtime":1614075758357,"results":"63","hashOfConfig":"44"},{"size":3775,"mtime":1613789705877,"results":"64","hashOfConfig":"44"},{"size":3722,"mtime":1613789705877,"results":"65","hashOfConfig":"44"},{"size":3056,"mtime":1613789705876,"results":"66","hashOfConfig":"44"},{"size":8887,"mtime":1614343728473,"results":"67","hashOfConfig":"44"},{"size":7954,"mtime":1614349320637,"results":"68","hashOfConfig":"44"},{"size":3111,"mtime":1613904510978,"results":"69","hashOfConfig":"44"},{"size":3204,"mtime":1613920796999,"results":"70","hashOfConfig":"44"},{"size":2549,"mtime":1614093842315,"results":"71","hashOfConfig":"44"},{"size":3888,"mtime":1614077492285,"results":"72","hashOfConfig":"44"},{"size":949,"mtime":1614237223427,"results":"73","hashOfConfig":"44"},{"size":6493,"mtime":1614160522290,"results":"74","hashOfConfig":"44"},{"size":1081,"mtime":1614351124974,"results":"75","hashOfConfig":"44"},{"size":4013,"mtime":1614264201482,"results":"76","hashOfConfig":"44"},{"size":51,"mtime":1611625884505,"results":"77","hashOfConfig":"44"},{"size":456,"mtime":1611716955802,"results":"78","hashOfConfig":"44"},{"size":5864,"mtime":1614348130920,"results":"79","hashOfConfig":"44"},{"size":2129,"mtime":1614145912425,"results":"80","hashOfConfig":"44"},{"size":2443,"mtime":1614175936437,"results":"81","hashOfConfig":"44"},{"size":3202,"mtime":1614165779019,"results":"82","hashOfConfig":"44"},{"size":2493,"mtime":1614221024241,"results":"83","hashOfConfig":"44"},{"size":941,"mtime":1614178929128,"results":"84","hashOfConfig":"44"},{"size":2160,"mtime":1614217103412,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"wxwlk0",{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"88"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"88"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"88"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"88"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"88"},"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\index.js",[],["194","195"],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\App.js",["196"],"import { Provider } from \"react-redux\";\nimport { BrowserRouter, Redirect, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport LoginRoute from \"./components/login/LoginRoute\";\nimport Student from \"./components/student/Student\";\nimport Teacher from \"./components/teacher/Teacher\";\nimport AdminMain from \"./components/admin/AdminMain\";\n\nimport { store } from \"./store/store\";\nimport React from \"react\";\n\nimport $ from \"jquery\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    window.alert = (text) => {\n      $(\"body\").append(\n        `<div class=\"alert alert-info alert-dismissible\" role=\"alert\" id=\"systemAlert\">\n          <button\n            type=\"button\"\n            class=\"close\"\n            data-dismiss=\"alert\"\n            aria-label=\"Close\"\n          >\n            <span aria-hidden=\"true\">&times;</span>\n          </button>${text}\n        </div>`\n      );\n    };\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Provider store={store}>\n          <div id=\"root\">\n            {/* Routes of the app */}\n            <Route path=\"/\" component={LoginRoute} />\n            <Route path=\"/student\" component={Student} />\n            <Route path=\"/teacher\" component={Teacher} />\n            <Route path=\"/admin\" component={AdminMain} />\n\n            {/* //Test route for development purposes */}\n            <Route path=\"/test\">\n              <></>\n            </Route>\n          </div>\n        </Provider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\store\\store.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\Admin.js",["197","198","199","200","201","202","203","204"],"import { Component } from \"react\";\nimport $ from \"jquery\";\nimport \"./Admin.css\";\n\nimport NavBar from \"../ui-elements/navBar/NavBar\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\n\nimport Home from \"./pages/Home/Home\";\nimport Institutionstructure from \"./pages/Institutionstructure/Institutionstructure\";\nimport Messagelist from \"./pages/Message/Messagelist\";\nimport Report from \"./pages/Report/Report\";\nimport UserMangamenet from \"./pages/UserManagment/UserMangamenet\";\nimport VerifyAccount from \"./pages/VerifyAccounts/VerifyAccounts\";\nimport Messagecontent from \"./pages/Message/Messagecontent\";\n\nimport http from \"../../shared/http\";\n\nimport { Button } from \"react-bootstrap\";\nimport { FaPlus } from \"react-icons/fa\";\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeItem: $(\"#adminSidebar .active\").attr(\"name\"),\n    };\n  }\n\n  changePage = (event) => {\n    //Get active item\n    let activeItem = $(\"#adminSidebar .active\");\n    //Clicked tab\n    let clickedItem = $(event.target);\n\n    //Remove \"active\" class from the active item\n    activeItem.removeClass(\"active\");\n\n    //Add active class to the clicked item\n    clickedItem.addClass(\"active\");\n\n    //Changing the browser Route\n    this.props.history.push(\"/admin/\" + clickedItem.attr(\"name\"));\n\n    //Setting the states correctly\n    this.setState({ activeItem: clickedItem.attr(\"name\") });\n  };\n\n  logout = () => {\n    http(\"GET\", \"/login/logout\", {}, (res) => {\n      alert(res.data);\n      if (res.status == 200) {\n        window.location.href = \"http://localhost:3000/\";\n      }\n    });\n  };\n\n  componentDidMount() {\n    $(\n      \".list-group-item[name=\" +\n        this.props.history.location.pathname.split(\"/\")[2] +\n        \"]\"\n    ).addClass(\"active\");\n\n    this.setState({ activeItem: $(\"#adminSidebar .active\").attr(\"name\") });\n  }\n\n  render() {\n    //Target modal to open when InstitutionStructure + button clicked\n    let targetModal = \"#adddept\";\n\n    //Check if the path is in the /class inside /Institutionstructure\n    let path = this.props.history.location.pathname.split(\"/\")[3];\n\n    if (path == \"class\") {\n      targetModal = \"#addclass\";\n    }\n\n    //The content of the right side of the navBar\n    let navBarRight = {\n      home: (\n        <Button variant=\"danger\" className=\"mr-4\" onClick={this.logout}>\n          Logout\n        </Button>\n      ),\n      institutionStructure: (\n        <Button className=\"mr-4\" data-toggle=\"modal\" data-target={targetModal}>\n          <FaPlus />\n        </Button>\n      ),\n      message: null,\n      report: null,\n      verifyAccount: null,\n      userManagement: null,\n    };\n\n    return (\n      <div className=\"root\">\n        <NavBar>\n          {{\n            left: <h3>ADMIN</h3>,\n            right: navBarRight[this.state.activeItem],\n          }}\n        </NavBar>\n        <div id=\"adminBody\">\n          <div id=\"adminSidebar\">\n            <div class=\"list-group\">\n              <a class=\"list-group-item\" onClick={this.changePage} name=\"home\">\n                Home\n              </a>\n              <a\n                class=\"list-group-item\"\n                onClick={this.changePage}\n                name=\"institutionStructure\"\n              >\n                Institution Structure\n              </a>\n              <a\n                class=\"list-group-item\"\n                onClick={this.changePage}\n                name=\"message\"\n              >\n                Messages\n              </a>\n              <a\n                class=\"list-group-item\"\n                onClick={this.changePage}\n                name=\"report\"\n              >\n                Report\n              </a>\n              <a\n                class=\"list-group-item\"\n                onClick={this.changePage}\n                name=\"verifyAccount\"\n              >\n                Verify Accoint\n              </a>\n              <a\n                class=\"list-group-item\"\n                onClick={this.changePage}\n                name=\"userManagement\"\n              >\n                User Management\n              </a>\n            </div>\n          </div>\n          <div id=\"adminContent\">\n            <Switch>\n              <Route\n                path=\"/admin/message/messagecontent\"\n                exact\n                component={Messagecontent}\n              />\n              <Route path=\"/admin/home\" exact>\n                <Home />\n              </Route>\n\n              <Route path=\"/admin/institutionstructure\">\n                <Institutionstructure />\n              </Route>\n\n              <Route path=\"/admin/message\" exact>\n                <Messagelist />\n              </Route>\n\n              <Route path=\"/admin/report\" exact>\n                <Report />\n              </Route>\n\n              <Route path=\"/admin/usermangamenet\" exact>\n                <UserMangamenet />\n              </Route>\n\n              <Route path=\"/admin/verifyaccounts\" exact>\n                <VerifyAccount />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Admin);\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\LoginRoute.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\teacher\\Teacher.js",["205"],"import { Component } from \"react\";\nimport \"./Teacher.css\";\n\nimport NavBar from \"../ui-elements/navBar/NavBar\";\nimport TabView from \"../ui-elements/TabView/TabView\";\nimport ListItem from \"../ui-elements/ListItem/ListItem\";\nimport NewExam from \"./newExam/NewExam\";\n\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nlet examData = [\n  {\n    name: \"Name of Exam\",\n    subject: \"Subject\",\n    from: \"9:00:00\",\n    to: \"12:00:00\",\n    marks: 80,\n    date: \"12-01-2021\", //mm-dd-yyyy\n  },\n  {\n    name: \"Name of Exam\",\n    subject: \"Subject\",\n    from: \"9:00:00\",\n    to: \"12:00:00\",\n    marks: 80,\n    date: \"08-01-2021\", //mm-dd-yyyy\n  },\n  {\n    name: \"Name of Exam\",\n    subject: \"Subject\",\n    from: \"9:00:00\",\n    to: \"12:00:00\",\n    marks: 80,\n    date: \"01-01-2021\", //mm-dd-yyyy\n  },\n];\n\nclass Teacher extends Component {\n  examList = [];\n  previousExamList = [];\n\n  setExamData = () => {\n    console.log(\"CAlled\");\n    let currentTime = new Date();\n\n    examData.map((item) => {\n      let examDate = new Date(`${item.date},${item.to}`);\n\n      if (currentTime.getTime() > examDate.getTime()) {\n        this.previousExamList.push(\n          <ListItem height=\"100px\">\n            {{\n              left: (\n                <div id=\"leftListItem\">\n                  <p>{item.name}</p>\n                  <p>{item.subject}</p>\n                  <p>{item.date}</p>\n                </div>\n              ),\n              right: (\n                <div id=\"rightListItem\">\n                  <p>\n                    {item.from} - {item.to}\n                  </p>\n                  <p>{item.marks} Marks</p>\n                </div>\n              ),\n            }}\n          </ListItem>\n        );\n        console.log(\"pushed to prev\");\n      } else {\n        this.examList.push(\n          <ListItem height=\"100px\">\n            {{\n              left: (\n                <div id=\"leftListItem\">\n                  <p>{item.name}</p>\n                  <p>{item.subject}</p>\n                  <p>{item.date}</p>\n                </div>\n              ),\n              right: (\n                <div id=\"rightListItem\">\n                  <p>\n                    {item.from} - {item.to}\n                  </p>\n                  <p>{item.marks} Marks</p>\n                </div>\n              ),\n            }}\n          </ListItem>\n        );\n        console.log(\"Pushed to scheduled\");\n      }\n    });\n  };\n\n  newExam = () => {\n    document.location.href = \"http://localhost:3000/teacher/newexam\";\n  };\n\n  componentDidMount() {\n    this.setExamData();\n    this.forceUpdate();\n  }\n\n  render() {\n    return (\n      <div>\n        <BrowserRouter>\n          <Route path=\"/teacher\" exact>\n            <NavBar>\n              {{\n                left: <h5>HOME</h5>,\n                right: (\n                  <div className=\"container\" id=\"NavBarRight\">\n                    <div className=\"row\">\n                      <div\n                        className=\"col-sm-4 align-self-center\"\n                        id=\"NavBarInfoText\"\n                      >\n                        <p>Select Class and Batch : </p>\n                      </div>\n                      <div className=\"col-sm-4\">\n                        <select\n                          className=\"form-select mt-3\"\n                          name=\"class\"\n                          id=\"class\"\n                        >\n                          <option value=\"\">Class</option>\n                          <option value=\"CS\">CS</option>\n                          <option value=\"Commerce\">Commerce</option>\n                        </select>\n                      </div>\n                      <div className=\"col-sm-4\">\n                        <select\n                          className=\"form-select mt-3\"\n                          name=\"batch\"\n                          id=\"batch\"\n                        >\n                          <option value=\"\">Batch</option>\n                          <option value=\"2018-21\">2018-21</option>\n                          <option value=\"2019-22\">2019-22</option>\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                ),\n              }}\n            </NavBar>\n            <TabView>\n              {{\n                leftTab: <span>SCHEDULED EXAMS</span>,\n                rightTab: <span>PREVIOUS EXAMS</span>,\n                leftTabBody: <div id=\"leftTabBody\">{this.examList}</div>,\n                rightTabBody: (\n                  <div id=\"rightTabBody\">{this.previousExamList}</div>\n                ),\n              }}\n            </TabView>\n            <div id=\"new-exam\" onClick={this.newExam}>\n              <div id=\"floatButtonText\">+</div>\n            </div>\n          </Route>\n          <Route path=\"/teacher/newexam\">\n            <NewExam />\n          </Route>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default Teacher;\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\student\\Student.js",["206","207","208","209"],"import React, { Component } from \"react\";\r\nimport NavBar from \"../ui-elements/navBar/NavBar\";\r\nimport TabView from \"../ui-elements/TabView/TabView\";\r\nimport ExamGuidlines from \"./components/examguidelines/ExamGuidlines\";\r\nimport ListItem from \"../ui-elements/ListItem/ListItem\";\r\nimport StartExam from \"./components/startexam/StartExam\";\r\nimport { Link, BrowserRouter, Route } from \"react-router-dom\";\r\nimport \"./Student.css\";\r\nlet examData = [\r\n  {\r\n    name: \"Name of Exam\",\r\n    subject: \"Subject\",\r\n    from: \"9:00:00\",\r\n    to: \"12:00:00\",\r\n    marks: 80,\r\n    date: \"12-01-2021\", //mm-dd-yyyy\r\n  },\r\n  {\r\n    name: \"Name of Exam\",\r\n    subject: \"Subject\",\r\n    from: \"9:00:00\",\r\n    to: \"12:00:00\",\r\n    marks: 80,\r\n    date: \"08-01-2021\", //mm-dd-yyyy\r\n  },\r\n  {\r\n    name: \"Name of Exam\",\r\n    subject: \"Subject\",\r\n    from: \"9:00:00\",\r\n    to: \"12:00:00\",\r\n    marks: 80,\r\n    date: \"01-01-2021\", //mm-dd-yyyy\r\n  },\r\n];\r\n\r\nexport default class Student extends Component {\r\n  examList = [];\r\n  previousExamList = [];\r\n\r\n  setExamData = () => {\r\n    console.log(\"CAlled\");\r\n    let currentTime = new Date();\r\n\r\n    examData.map((item) => {\r\n      let examDate = new Date(`${item.date},${item.to}`);\r\n\r\n      if (currentTime.getTime() > examDate.getTime()) {\r\n        this.previousExamList.push(\r\n          <ListItem height=\"100px\">\r\n            {{\r\n              left: (\r\n                <div id=\"leftListItem\">\r\n                  <p>{item.name}</p>\r\n                  <p>{item.subject}</p>\r\n                  <p>{item.date}</p>\r\n                </div>\r\n              ),\r\n              right: (\r\n                <div id=\"rightListItem\">\r\n                  <p>\r\n                    {item.from} - {item.to}\r\n                  </p>\r\n                  <p>{item.marks} Marks</p>\r\n                </div>\r\n              ),\r\n            }}\r\n          </ListItem>\r\n        );\r\n        console.log(\"pushed to prev\");\r\n      } else {\r\n        this.examList.push(\r\n          <ListItem height=\"100px\">\r\n            {{\r\n              left: (\r\n                <div id=\"leftListItem\">\r\n                  <p>{item.name}</p>\r\n                  <p>{item.subject}</p>\r\n                  <p>{item.date}</p>\r\n                </div>\r\n              ),\r\n              right: (\r\n                <div id=\"rightListItem\">\r\n                  <p>\r\n                    {item.from} - {item.to}\r\n                  </p>\r\n                  <p>{item.marks} Marks</p>\r\n                </div>\r\n              ),\r\n            }}\r\n          </ListItem>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setExamData();\r\n    this.forceUpdate();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"root\">\r\n        <div>\r\n          <BrowserRouter>\r\n            <Route path=\"/student\" exact>\r\n              <NavBar>\r\n                {{\r\n                  left: <h5>HOME</h5>,\r\n                }}\r\n              </NavBar>\r\n              <TabView>\r\n                {{\r\n                  leftTab: <span>SCHEDULED EXAMS</span>,\r\n                  rightTab: <span>PREVIOUS EXAMS</span>,\r\n                  leftTabBody: <div id=\"leftTabBody\">{this.examList}</div>,\r\n                  rightTabBody: (\r\n                    <div id=\"rightTabBody\">{this.previousExamList}</div>\r\n                  ),\r\n                }}\r\n              </TabView>\r\n              {/* <ExamGuidlines/> */}\r\n            </Route>\r\n          </BrowserRouter>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\store\\reducers\\login.js",["210"],"export const loginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"updateSignupData\":\n      return {\n        ...state,\n        signupData: { ...action.payload },\n        validSignupData: true,\n      };\n      break;\n    case \"clearSignupData\":\n      return {};\n    default:\n      return state;\n  }\n};\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\store\\reducers\\adminReducer.js",["211"],"export const adminReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"storeMessage\":\n      return {\n        ...state,\n        message: action.payload,\n      };\n      break;\n    default:\n      return state;\n  }\n};\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Institutionstructure\\Institutionstructure.js",["212"],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\UserManagment\\UserMangamenet.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Message\\Messagelist.js",["213","214"],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\Login.js",["215","216","217"],"/**\n * MAIN SIGNIN/SIGNUP COMPONENT\n */\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./login.css\";\n\nimport Signin from \"./signin/signin\";\nimport Signup from \"./sigup/signup\";\nimport VerifyOtp from \"./verifyOtp/verifyOtp\";\nimport SetPassword from \"./setPassword/SetPassword\";\nimport { BrowserRouter, Route, withRouter } from \"react-router-dom\";\nimport GoogleSignup from \"./sigup/googleSignup/GoogleSignup\";\n\n//DISPATH ACTIONS TO CHANGE REDUX STORE DATA (USED FOR SIGNUP PROCEDURE)\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateData: (payload) => dispatch({ type: \"updateSignupData\", payload }),\n    clearData: () => dispatch({ type: \"clearSignupData\" }),\n  };\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signin: true, //IF SIGNIN TAB ACTIVE\n      signup: false, //IF SIGNUP TAB ACTIVE\n\n      googleSignup: false, //IF GOOGLE SIGNUP WINDOW VISIBLE\n      showVerifyOtp: false, //IF OTP VERIFICATION SCREEN IS VISIBLE (DURING SIGNUP)\n      showSetPassword: false, //IF PASSWORD ENTRY SCREEN IS VISIBLE (DURING SIGNUP)\n    };\n  }\n\n  changeTabToSignup = () => {\n    this.setState({\n      signin: false,\n      signup: true,\n\n      googleSignup: false,\n      showVerifyOtp: false,\n      showSetPassword: false,\n    });\n\n    this.props.history.push(\"/signup\");\n  };\n\n  changeTabToSignin = () => {\n    this.setState({\n      signin: true,\n      signup: false,\n\n      googleSignup: false,\n      showVerifyOtp: false,\n      showSetPassword: false,\n    });\n    this.props.history.push(\"/signin\");\n  };\n\n  showVerifyOtp = () => {\n    this.setState({ showVerifyOtp: true, signin: false, signup: false });\n  };\n\n  otpVerified = () => {\n    this.setState({\n      showVerifyOtp: false,\n      signin: false,\n      signup: false,\n      googleSignup: false,\n      showSetPassword: true,\n    });\n  };\n\n  /**\n   * INITIALLY SETTING THE VIEW OF THE COMPONENT BASED ON THE RECIEVED PROPS\n   * PROPS CAN BE EITHER: signin, signup or googleSignup\n   */\n  setView = () => {\n    if (this.props.signin) {\n      this.changeTabToSignin();\n    } else if (this.props.signup) {\n      this.changeTabToSignup();\n    } else if (this.props.googleSignup) {\n      this.setState({\n        signin: false,\n        signup: false,\n        showSetPassword: false,\n        showVerifyOtp: false,\n        googleSignup: true,\n      });\n    }\n  };\n\n  componentDidMount() {\n    //Setting initial view of the component base on the props\n    this.setView();\n  }\n\n  render() {\n    //CSS Style to apply for the active tab SIGNIN or SIGNUP\n    let style = {\n      \"background-color\": \"rgb(37, 35, 34)\",\n      color: \"white\",\n    };\n\n    return (\n      <BrowserRouter>\n        <div className=\"container\">\n          <div\n            className=\"d-flex align-items-center justify-content-center\"\n            style={{ height: \"100vh\" }}\n          >\n            <div className=\"card\" id=\"login-card\" style={{ width: \"25rem\" }}>\n              <div className=\"card-body\">\n                <nav class=\"nav nav-pills nav-fill\">\n                  <a\n                    className=\"nav-item nav-link active\"\n                    href=\"#\"\n                    id=\"signin-tab\"\n                    onClick={this.changeTabToSignin}\n                    style={this.state.signin ? style : null}\n                  >\n                    SIGN IN\n                  </a>\n                  <a\n                    className=\"nav-item nav-link\"\n                    href=\"#\"\n                    id=\"signup-tab\"\n                    onClick={this.changeTabToSignup}\n                    style={this.state.signin ? null : style}\n                  >\n                    SIGN UP\n                  </a>\n                </nav>\n                {this.state.signin ? <Signin /> : null}\n                {this.state.signup ? (\n                  <Signup otpSent={this.showVerifyOtp} />\n                ) : null}\n                {this.state.showVerifyOtp ? (\n                  <VerifyOtp otpVerified={this.otpVerified} />\n                ) : null}\n                {this.state.showSetPassword ? <SetPassword /> : null}\n                {this.state.googleSignup ? <GoogleSignup /> : null}\n              </div>\n            </div>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(Login));\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\ui-elements\\navBar\\NavBar.js",["218","219","220"],"import { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"./NavBar.css\";\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <div id=\"navBar\">\n        <div\n          className=\"d-flex flex-row justify-content-between align-items-center\"\n          id=\"navBarContainer\"\n        >\n          <div id=\"left\">{this.props.children.left}</div>\n          <div id=\"center\">{this.props.children.center}</div>\n          <div id=\"right\">{this.props.children.right}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NavBar;\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\ui-elements\\ListItem\\ListItem.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\ui-elements\\TabView\\TabView.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\teacher\\newExam\\NewExam.js",["221","222","223","224","225","226"],"import React, { Component } from \"react\";\r\nimport NavBar from \"../../ui-elements/navBar/NavBar\";\r\nimport \"./NewExam.css\";\r\nimport {\r\n  BsFillCaretDownFill,\r\n  BsFillCaretUpFill,\r\n  BsPencil,\r\n  BsDash,\r\n  BsCheck,\r\n  BsPlus,\r\n} from \"react-icons/bs\";\r\nimport { Button, Modal, Form, Row, Col, Dropdown } from \"react-bootstrap\";\r\nimport configureDialogBox from \"../../../shared/dailogBox\";\r\nclass NewExam extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* Configuring The scheduleexam */}\r\n        {configureDialogBox(\r\n          \"scheduleexam\",\r\n          \"SCHEDULE EXAM\",\r\n          <>\r\n            <Row>\r\n              <Col>\r\n                <Form.Label className=\"text-dark\">Exam name</Form.Label>\r\n              </Col>\r\n              <Col>\r\n                <Form.Control size=\"lg\" type=\"text\" placeholder=\"Exam name\" />\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mt-2\">\r\n              <Col>\r\n                <Form.Label className=\"text-dark\">Subject</Form.Label>\r\n              </Col>\r\n              <Col>\r\n                <Form.Control size=\"lg\" type=\"text\" placeholder=\"Subject\" />\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mt-2\">\r\n              <Col>\r\n                <Form.Label className=\"text-dark\">Time</Form.Label>\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label className=\"text-dark\">FROM</Form.Label>\r\n              </Col>\r\n              <Col>\r\n                <Form.Control size=\"lg\" type=\"text\" placeholder=\"FROM\" />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label className=\"text-dark\">TO</Form.Label>\r\n              </Col>\r\n              <Col>\r\n                <Form.Control size=\"lg\" type=\"text\" placeholder=\"TO\" />\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mt-2\">\r\n              <Col>\r\n                <Form.Label className=\"text-dark\">Date</Form.Label>\r\n              </Col>\r\n              <Col>\r\n                <Form.Control size=\"lg\" type=\"text\" placeholder=\"Date\" />\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mt-2\">\r\n              <Col>\r\n                <Form.Label className=\"text-dark\">Mark</Form.Label>\r\n              </Col>\r\n              <Col>\r\n                <Form.Control size=\"lg\" type=\"text\" placeholder=\"Mark\" />\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mt-2\">\r\n              <Col>\r\n                <Form.Label className=\"text-dark\">Class</Form.Label>\r\n              </Col>\r\n              <Col>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  className=\"my-1 mr-sm-2\"\r\n                  id=\"inlineFormCustomSelectPref\"\r\n                  custom\r\n                >\r\n                  <option value=\"0\">Choose...</option>\r\n                  <option value=\"1\">One</option>\r\n                  <option value=\"2\">Two</option>\r\n                  <option value=\"3\">Three</option>\r\n                </Form.Control>\r\n              </Col>\r\n              <Col>\r\n                <Form.Label className=\"text-dark\">Batch</Form.Label>\r\n              </Col>\r\n              <Col>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  className=\"my-1 mr-sm-2\"\r\n                  id=\"inlineFormCustomSelectPref\"\r\n                  custom\r\n                >\r\n                  <option value=\"0\">Choose...</option>\r\n                  <option value=\"1\">One</option>\r\n                  <option value=\"2\">Two</option>\r\n                  <option value=\"3\">Three</option>\r\n                </Form.Control>\r\n              </Col>\r\n            </Row>\r\n          </>,\r\n          <>\r\n            {\" \"}\r\n            <button variant=\"light\" className=\"btn btn-primary\">\r\n              Cancel\r\n            </button>\r\n            <button variant=\"light\" className=\"btn btn-primary\">\r\n              Ok\r\n            </button>\r\n          </>\r\n        )}\r\n        {/* Configuring The add text */}\r\n        {configureDialogBox(\r\n          \"text\",\r\n          \"ADD TEXT\",\r\n          <>\r\n            <form>\r\n              <label className=\"black\" for=\"text\">\r\n                Enter text:{\" \"}\r\n              </label>\r\n              <textarea\r\n                rows=\"10\"\r\n                name=\"text\"\r\n                id=\"text\"\r\n                className=\"m-3\"\r\n              ></textarea>\r\n            </form>\r\n          </>,\r\n          <>\r\n            <button className=\"btn btn-primary\">Cancel</button>\r\n            <button className=\"btn btn-primary\">Add</button>\r\n          </>\r\n        )}\r\n        {/* Configuring The add mcq */}\r\n        {configureDialogBox(\r\n          \"mcq\",\r\n          \"ADD MULTIPLE CHOICE QUESTION\",\r\n          <>\r\n            <form>\r\n              <label className=\"black\" for=\"mcq\">\r\n                Enter Question:{\" \"}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"mcq\"\r\n                id=\"mcq\"\r\n                className=\"  mr-3 form-control from-control-lg\"\r\n              ></input>\r\n              <br />\r\n              <label className=\"black\" for=\"mcq\">\r\n                Mark:{\" \"}\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"mark\"\r\n                id=\"mark\"\r\n                className=\"ml-3 \"\r\n              ></input>\r\n              <br />\r\n              <input\r\n                className=\"form-check-input ml-3\"\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                id=\"defaultCheck1\"\r\n              ></input>\r\n              <label\r\n                className=\"black form-check-label ml-5\"\r\n                for=\"defaultCheck1\"\r\n              >\r\n                Allow Multiple Selctions\r\n              </label>\r\n              <br />\r\n            </form>\r\n          </>,\r\n          <>\r\n            <button className=\"btn btn-primary\">Add option</button>\r\n            <button className=\"btn btn-primary\">Canvas </button>\r\n            <button className=\"btn btn-primary\">Upload</button>\r\n            <button className=\"btn btn-primary\">Cancel</button>\r\n            <button className=\"btn btn-primary\">Add</button>\r\n          </>\r\n        )}\r\n        {/* Configuring The add SHORT */}\r\n        {configureDialogBox(\r\n          \"short\",\r\n          \"ADD SHORT ANSWER QUESTION\",\r\n          <>\r\n            <form>\r\n              <label className=\"black mr-3\" for=\"mcq\">\r\n                Enter Question:{\" \"}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"short\"\r\n                id=\"short\"\r\n                className=\"mr-3 form-control from-control-lg\"\r\n              ></input>\r\n              <br />\r\n              <label className=\"black\" for=\"mcq\">\r\n                Mark:{\" \"}\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"mark\"\r\n                id=\"mark\"\r\n                className=\"ml-3 \"\r\n              ></input>\r\n              <br />\r\n            </form>\r\n          </>,\r\n          <>\r\n            <button className=\"btn btn-primary\">Canvas </button>\r\n            <button className=\"btn btn-primary\">Upload</button>\r\n            <button className=\"btn btn-primary\">Cancel</button>\r\n            <button className=\"btn btn-primary\">Add</button>\r\n          </>\r\n        )}\r\n        {/* Configuring The add SHORT */}\r\n        {configureDialogBox(\r\n          \"essay\",\r\n          \"ADD ESSAY QUESTION\",\r\n          <>\r\n            <form>\r\n              <label className=\"black mr-3\" for=\"mcq\">\r\n                Enter Question:{\" \"}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"short\"\r\n                id=\"short\"\r\n                className=\"mr-3 form-control from-control-lg\"\r\n              ></input>\r\n              <br />\r\n              <label className=\"black\" for=\"mcq\">\r\n                Mark:{\" \"}\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"mark\"\r\n                id=\"mark\"\r\n                className=\"ml-3 \"\r\n              ></input>\r\n              <br />\r\n            </form>\r\n          </>,\r\n          <>\r\n            <button className=\"btn btn-primary\">Canvas </button>\r\n            <button className=\"btn btn-primary\">Upload</button>\r\n            <button className=\"btn btn-primary\">Cancel</button>\r\n            <button className=\"btn btn-primary\">Add</button>\r\n          </>\r\n        )}\r\n        <NavBar>\r\n          {{\r\n            left: (\r\n              <div>\r\n                <span id=\"navBarBackButton\">{\"<\"}</span>\r\n                <h3>CREATE QUESTION PAPER</h3>\r\n              </div>\r\n            ),\r\n            right: (\r\n              <div>\r\n                <Row>\r\n                  <Col>\r\n                    {\" \"}\r\n                    <Button className=\"btn btn-light \">\r\n                      <BsFillCaretDownFill />\r\n                    </Button>\r\n                  </Col>\r\n                  <Col>\r\n                    <Button className=\"btn btn-light ml-3 \">\r\n                      <BsFillCaretUpFill />\r\n                    </Button>\r\n                  </Col>\r\n                  <Col>\r\n                    <Button className=\"btn btn-light ml-3 \">\r\n                      <BsPencil />\r\n                    </Button>\r\n                  </Col>\r\n                  <Col>\r\n                    <Button className=\"btn btn-light ml-3 \">\r\n                      <BsDash />\r\n                    </Button>\r\n                  </Col>\r\n                  <Col>\r\n                    <Dropdown>\r\n                      <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\">\r\n                        <BsPlus />\r\n                      </Dropdown.Toggle>\r\n\r\n                      <Dropdown.Menu>\r\n                        <Dropdown.Item href=\"#/action-1\">\r\n                          <a\r\n                            className=\"text-decoration-none\"\r\n                            href=\"#\"\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#text\"\r\n                            style={{ color: \"black\" }}\r\n                          >\r\n                            Text\r\n                          </a>\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item href=\"#/action-2\">\r\n                          <a\r\n                            className=\"text-decoration-none\"\r\n                            href=\"#\"\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#mcq\"\r\n                            style={{ color: \"black\" }}\r\n                          >\r\n                            Multiple Choice question{\" \"}\r\n                          </a>\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item href=\"#/action-3\">\r\n                          <a\r\n                            className=\"text-decoration-none\"\r\n                            href=\"#\"\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#short\"\r\n                            style={{ color: \"black\" }}\r\n                          >\r\n                            Short answer{\" \"}\r\n                          </a>\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item href=\"#/action-4 \">\r\n                          <a\r\n                            className=\"text-decoration-none\"\r\n                            href=\"#\"\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#essay\"\r\n                            style={{ color: \"black\" }}\r\n                          >\r\n                            Essay Question\r\n                          </a>\r\n                        </Dropdown.Item>\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                  </Col>\r\n                  <a\r\n                    href=\"#\"\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#scheduleexam\"\r\n                    style={{ color: \"white\" }}\r\n                  >\r\n                    <Button className=\"btn btn-success ml-3\">\r\n                      <BsCheck />\r\n                    </Button>\r\n                  </a>\r\n                </Row>\r\n              </div>\r\n            ),\r\n          }}\r\n        </NavBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewExam;\r\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Message\\Messagecontent.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\student\\components\\examguidelines\\ExamGuidlines.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\student\\components\\startexam\\StartExam.js",["227"],"import React, { Component } from \"react\";\r\nimport NavBar from \"../../../ui-elements/navBar/NavBar\";\r\nimport ListItem from \"../../../ui-elements/ListItem/ListItem\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { AiOutlineCheck } from \"react-icons/ai\";\r\nimport $ from \"jquery\";\r\nexport class StartExam extends Component {\r\n  render() {\r\n    $(document).ready(function () {\r\n      // Disables ctrl+v, ctrl+x, ctrl+c.\r\n      $(\"textarea\").on(\"cut\", function (e) {\r\n        $(\"#d2\").text(\"cut. not allowed!\");\r\n        e.preventDefault();\r\n      });\r\n      $(\"textarea\").on(\"copy\", function (e) {\r\n        $(\"#d2\").text(\"copy. not allowed!\");\r\n        e.preventDefault();\r\n      });\r\n      $(\"textarea\").on(\"paste\", function (e) {\r\n        $(\"#d2\").text(\"paste. not allowed!\");\r\n        e.preventDefault();\r\n      });\r\n\r\n      // Above all three can be combined into one, above is\r\n      // executed separately for understanding purposes.\r\n      /* $('textarea').on(\"cut copy paste\", function(e) { \r\n        $(\"#d2\").text('right-click is disabled!'); \r\n        e.preventDefault(); \r\n        }); */\r\n\r\n      // Disables right-click.\r\n      $(\"textarea\").mousedown(function (e) {\r\n        if (e.button == 2) {\r\n          e.preventDefault();\r\n          alert(\"right-click is disabled!\");\r\n        }\r\n      });\r\n    });\r\n    return (\r\n      <div className=\"root\">\r\n        <NavBar>\r\n          {{\r\n            left: (\r\n              <div>\r\n                <h5>TIME LEFT:HH:MM:SS</h5>\r\n              </div>\r\n            ),\r\n            right: (\r\n              <div>\r\n                <Button className=\"btn btn-success\">\r\n                  <AiOutlineCheck />\r\n                </Button>\r\n              </div>\r\n            ),\r\n          }}\r\n        </NavBar>\r\n        <ListItem height=\"100px\">\r\n          {{\r\n            left: (\r\n              <div id=\"leftListItem\">\r\n                <p>DATE:DD-MM-YYYY</p>\r\n                <p>TIME:HH:MM:SS</p>\r\n                <p>Name of Examination:</p>\r\n              </div>\r\n            ),\r\n            right: (\r\n              <div id=\"rightListItem\">\r\n                <p>Subject:</p>\r\n                <p>MARK:80</p>\r\n              </div>\r\n            ),\r\n          }}\r\n        </ListItem>\r\n        <ListItem height=\"150px\">\r\n          {{\r\n            left: (\r\n              <div id=\"leftListItem\">\r\n                <p>What is computer</p>\r\n                <p>\r\n                  <textarea\r\n                    cols=\"150\"\r\n                    rows=\"5\"\r\n                    type=\"textbox\"\r\n                    id=\"ans\"\r\n                    oncut=\"return false\"\r\n                    oncopy=\"return false\"\r\n                    onpaste=\"return false\"\r\n                  ></textarea>{\" \"}\r\n                  <p id=\"d1\"></p>\r\n                  <p id=\"d2\"></p>\r\n                  <Button className=\"btn btn-secondary ml-3\">canavs</Button>\r\n                </p>\r\n              </div>\r\n            ),\r\n            right: (\r\n              <div id=\"rightListItem\">\r\n                <p></p>\r\n              </div>\r\n            ),\r\n          }}\r\n        </ListItem>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StartExam;\r\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\UserManagment\\Teachers.js",["228","229","230","231"],"import React, { Component } from \"react\";\nimport ListItem from \"../../../ui-elements/ListItem/ListItem\";\nimport { Button } from \"react-bootstrap\";\nimport http from \"../../../../shared/http\";\nexport default class Teachers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userData: [],\n    };\n  }\n\n  deleteClickListener = (item) => {\n    let confirmation = window.confirm(\"Are you sure to want to delete?\");\n\n    if (confirmation) {\n      http(\n        \"POST\",\n        \"/admin/usermanagement/teacher/delete\",\n        { teacher: item },\n        (res) => {\n          if (res.status == 200) {\n            alert(\"Teacher account deleted successfully\");\n\n            document.getElementById(item._id).style.display = \"none\";\n          } else {\n            alert(\"Error deleting teacher account\");\n          }\n        }\n      );\n    }\n  };\n\n  disableClickListener = (event, item) => {\n    if (event.target.value == \"Disable\") {\n      let confirmation = window.confirm(\"Are sure to Disable account?\");\n\n      if (confirmation) {\n        http(\n          \"POST\",\n          \"/admin/usermanagement/teacher/disable\",\n          { teacher: item },\n          (res) => {\n            if (res.status == 200) {\n              alert(\"Teacher Account disabled Successfully\");\n              this.changeToEnable(event);\n            } else {\n              alert(\"Error disabling teacher account\");\n            }\n          }\n        );\n      }\n    } else {\n      let confirmation = window.confirm(\"Are you sure to Enable account?\");\n\n      if (confirmation) {\n        this.changeToDisable(event);\n      }\n    }\n  };\n\n  changeToDisable = (event) => {\n    event.target.setAttribute(\"value\", \"Disable\");\n    event.target.classList.remove(\"btn-success\");\n    event.target.classList.add(\"btn-warning\");\n  };\n\n  changeToEnable = (event) => {\n    event.target.setAttribute(\"value\", \"Enable\");\n    event.target.classList.remove(\"btn-warning\");\n    event.target.classList.add(\"btn-success\");\n  };\n\n  getTeacherList = () => {\n    let teachers = this.state.userData.map((item) => {\n      console.log(item);\n      return (\n        <div className=\"container  col-md-10 mt-1 \" id={item._id}>\n          <ListItem height=\"180px\">\n            {{\n              left: (\n                <div>\n                  <span>\n                    <p class=\"text-left\">{item.name}d</p>\n\n                    <p class=\"text-left\">{item.email}</p>\n                    <p class=\"text-left\">{item.department}</p>\n                  </span>{\" \"}\n                  <Button\n                    type=\"submit\"\n                    className=\" mr-3 btn btn-danger\"\n                    onClick={() => this.deleteClickListener(item)}\n                  >\n                    Delete\n                  </Button>\n                </div>\n              ),\n              right: (\n                <div>\n                  <p class=\"text-right\">{item.idNumber}</p>\n                  <br />\n                  <br />\n                  <br />\n                  <input\n                    type=\"button\"\n                    className=\" mr-3 btn btn-warning\"\n                    onClick={(event) => this.disableClickListener(event, item)}\n                    value=\"Disable\"\n                  ></input>\n                </div>\n              ),\n            }}\n          </ListItem>\n        </div>\n      );\n    });\n\n    return teachers;\n  };\n\n  getUserData = () => {\n    http(\"GET\", \"/admin/usermanagement/teacher\", null, (res) => {\n      if (res.status == 200) {\n        this.setState({ userData: res.data.data });\n      } else {\n        alert(\"Error during fetching teacher data from server\");\n      }\n    });\n  };\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  render() {\n    return <>{this.getTeacherList()}</>;\n  }\n}\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\UserManagment\\Students.js",["232","233","234","235","236"],"import React, { Component } from \"react\";\nimport ListItem from \"../../../ui-elements/ListItem/ListItem\";\nimport { Button } from \"react-bootstrap\";\nimport { event } from \"jquery\";\nimport http from \"../../../../shared/http\";\nexport default class Students extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userData: [],\n    };\n  }\n\n  deleteClickListener = (item) => {\n    let confirmation = window.confirm(\"Are you sure to want to delete?\");\n\n    if (confirmation) {\n      http(\n        \"POST\",\n        \"/admin/usermanagement/student/delete\",\n        { student: item },\n        (res) => {\n          if (res.status == 200) {\n            alert(\"Student account deleted successfully\");\n\n            document.getElementById(item._id).style.display = \"none\";\n          } else {\n            alert(\"Error deleting Student account\");\n          }\n        }\n      );\n    }\n  };\n\n  disableClickListener = (event, item) => {\n    if (event.target.value == \"Disable\") {\n      let confirmation = window.confirm(\"Are sure to Disable account?\");\n\n      if (confirmation) {\n        http(\n          \"POST\",\n          \"/admin/usermanagement/student/disable\",\n          { student: item },\n          (res) => {\n            if (res.status == 200) {\n              alert(\"Student Account disabled Successfully\");\n              this.changeToEnable(event);\n            } else {\n              alert(\"Error disabling student account\");\n            }\n          }\n        );\n      }\n    } else {\n      let confirmation = window.confirm(\"Are you sure to Enable account?\");\n\n      if (confirmation) {\n        this.changeToDisable(event);\n      }\n    }\n  };\n\n  changeToDisable = (event) => {\n    event.target.setAttribute(\"value\", \"Disable\");\n    event.target.classList.remove(\"btn-success\");\n    event.target.classList.add(\"btn-warning\");\n  };\n\n  changeToEnable = (event) => {\n    event.target.setAttribute(\"value\", \"Enable\");\n    event.target.classList.remove(\"btn-warning\");\n    event.target.classList.add(\"btn-success\");\n  };\n\n  getStudentList = () => {\n    let students = this.state.userData.map((item) => {\n      console.log(item);\n      return (\n        <div className=\"container  col-md-10 mt-1 \" id={item._id}>\n          <ListItem height=\"180px\">\n            {{\n              left: (\n                <div>\n                  <p>{item.name}</p>\n\n                  <p>{item.email}</p>\n                  <p>{item.parentEmail}</p>\n                  <p>{item.admissionNumber}</p>\n\n                  <Button\n                    type=\"submit\"\n                    className=\" mr-3 btn btn-danger\"\n                    onClick={() => this.deleteClickListener(item)}\n                  >\n                    Delete\n                  </Button>\n                </div>\n              ),\n              right: (\n                <div>\n                  <p>{item.class}</p>\n                  <p>{item.batch}</p>\n                  <br />\n                  <br />\n                  <input\n                    type=\"button\"\n                    className=\" btn btn-warning\"\n                    onClick={(event) => this.disableClickListener(event, item)}\n                    value=\"Disable\"\n                  ></input>\n                </div>\n              ),\n            }}\n          </ListItem>\n        </div>\n      );\n    });\n    return students;\n  };\n  getUserData = () => {\n    http(\"GET\", \"/admin/usermanagement/student\", null, (res) => {\n      if (res.status == 200) {\n        this.setState({ userData: res.data.data });\n      } else {\n        alert(\"Error during fetching student data from server\");\n      }\n    });\n  };\n  componentDidMount() {\n    this.getUserData();\n  }\n  render() {\n    return <>{this.getStudentList()}</>;\n  }\n}\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Institutionstructure\\Subjects.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Institutionstructure\\ClassBatch.js",["237","238","239","240","241","242","243","244"],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Institutionstructure\\Department.js",["245","246","247","248","249","250"],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\setPassword\\SetPassword.js",["251","252"],"import { Component } from \"react\";\nimport \"./SetPassword.css\";\n\nimport http from \"../../../shared/http\";\nclass SetPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: \"\",\n      confirm: \"\",\n      errorMessage: null,\n    };\n  }\n\n  validatePassword = () => {\n    if (this.state.password.length > 0 && this.state.confirm.length > 0) {\n      if (this.state.password === this.state.confirm) {\n        console.log(\"Password Validation Success\");\n        this.setState({ errorMessage: null });\n\n        http(\n          \"POST\",\n          \"/register/finish\",\n          { password: this.state.password },\n          (res) => {\n            if (res.status === 200) {\n              alert(\"Signup Completed\");\n              window.location.href = \"http://localhost:3000/signin\";\n            } else {\n              alert(\"Error: \" + res.data);\n            }\n          }\n        );\n      } else {\n        this.setState({ errorMessage: <p>Passwords do not match</p> });\n      }\n    } else {\n      this.setState({ errorMessage: \"No password entered\" });\n    }\n  };\n\n  onValueChange = (event) => {\n    let newSate = {};\n    newSate[event.target.name] = event.target.value;\n    this.setState(newSate);\n  };\n\n  showPassword = () => {\n    let password = document.getElementById(\"password\");\n    let confirm = document.getElementById(\"confirm\");\n\n    if (password.type == \"password\" && confirm.type == \"password\") {\n      password.type = \"text\";\n      confirm.type = \"text\";\n    } else {\n      password.type = \"password\";\n      confirm.type = \"password\";\n    }\n  };\n\n  render() {\n    return (\n      <form>\n        <center>\n          <p id=\"info-text\">Setup a new Password</p>\n        </center>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            value={this.state.password}\n            onChange={this.onValueChange}\n            placeholder=\"Password\"\n            className=\"form-control mt-3\"\n          />\n          <input\n            type=\"password\"\n            name=\"confirm\"\n            id=\"confirm\"\n            value={this.state.confirm}\n            onChange={this.onValueChange}\n            placeholder=\"Confirm Password\"\n            className=\"form-control mt-3\"\n          />\n          {this.state.errorMessage}\n          <br />\n          <div className=\"form-check\">\n            <input\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              id=\"showPassword\"\n              name=\"showPassword\"\n              onClick={this.showPassword}\n            />\n            <label className=\"form-check-label\" for=\"showPassword\">\n              Show Password\n            </label>\n          </div>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-success\"\n            id=\"finish\"\n            onClick={this.validatePassword}\n          >\n            FINISH\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default SetPassword;\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\sigup\\googleSignup\\GoogleSignup.js",["253","254","255","256"],"import { Component } from \"react\";\nimport { withRouter, useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport \"./GoogleSignup.css\";\n\nimport Student from \"../student/student\";\nimport Teacher from \"../teacher/teacher\";\n\nimport http from \"../../../../shared/http\";\n\nconst mapStateToProps = (state) => {\n  return {\n    signupData: state.login.signupData,\n    validSignupData: state.login.validSignupData,\n  };\n};\n\nlet GOOGLE_DATA = {};\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accountType: \"student\",\n      googleData: {},\n    };\n  }\n\n  query = null;\n\n  selectAccountType = (event) => {\n    this.setState({ accountType: event.target.value });\n  };\n\n  finishSignup = () => {\n    console.log(this.props.signupData, GOOGLE_DATA);\n    http(\n      \"POST\",\n      \"/register/googlesignup\",\n      { ...this.props.signupData, ...GOOGLE_DATA },\n      (res) => {\n        if (res.status == 200) {\n          alert(\"Signup Completed\");\n          document.location.href = \"http://localhost:3000/signin\";\n        } else {\n          alert(res.data);\n        }\n      }\n    );\n  };\n\n  useQuery = () => {\n    let query = new URLSearchParams(this.props.location.search);\n    return query;\n  };\n\n  getGoogleData = () => {\n    this.query = this.useQuery();\n\n    if (this.query.get(\"name\")) GOOGLE_DATA.name = this.query.get(\"name\");\n    if (this.query.get(\"email\")) GOOGLE_DATA.email = this.query.get(\"email\");\n    if (this.query.get(\"id\")) GOOGLE_DATA.googleId = this.query.get(\"id\");\n  };\n\n  render() {\n    this.getGoogleData();\n    return (\n      <form>\n        <div className=\"form-group\">\n          <label for=\"account-type\">Select Account Type</label>\n          <br />\n          <select\n            className=\"form-select\"\n            aria-label=\"Default select example\"\n            id=\"account-type\"\n            onChange={this.selectAccountType}\n          >\n            <option value=\"student\" selected>\n              Student\n            </option>\n            <option value=\"teacher\">Teacher</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label>Enter your details</label>\n          {this.state.accountType == \"student\" ? (\n            <Student\n              google\n              data={{\n                name: GOOGLE_DATA.name,\n                email: GOOGLE_DATA.email,\n                id: GOOGLE_DATA.id,\n              }}\n            />\n          ) : null}\n          {this.state.accountType == \"teacher\" ? (\n            <Teacher\n              google\n              data={{\n                name: GOOGLE_DATA.name,\n                email: GOOGLE_DATA.email,\n                id: GOOGLE_DATA.id,\n              }}\n            />\n          ) : null}\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-success\"\n            id=\"login-btn\"\n            onClick={this.finishSignup}\n            disabled={!this.props.validSignupData}\n          >\n            FINISH\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(Signup));\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\sigup\\signup.js",["257","258"],"import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./signup.css\";\n\nimport Student from \"./student/student\";\nimport Teacher from \"./teacher/teacher\";\n\nimport http from \"../../../shared/http\";\n\nconst mapStateToProps = (state) => {\n  return {\n    signupData: state.login.signupData,\n    validSignupData: state.login.validSignupData,\n  };\n};\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accountType: \"student\",\n    };\n  }\n\n  selectAccountType = (event) => {\n    this.setState({ accountType: event.target.value });\n  };\n\n  verifyEmail = () => {\n    if (this.props.validSignupData) {\n      http(\"POST\", \"/register\", this.props.signupData, (res) => {\n        if (res.status === 200) {\n          this.props.otpSent();\n        } else {\n          alert(res.data);\n\n          //TEST DATA\n        }\n      });\n    }\n  };\n\n  googleSignup = () => {\n    document.location.href = \"http://localhost:4000/register/google\";\n  };\n\n  render() {\n    return (\n      <form>\n        <div className=\"form-group\">\n          <label for=\"account-type\">Select Account Type</label>\n          <br />\n          <select\n            className=\"form-select\"\n            aria-label=\"Default select example\"\n            id=\"account-type\"\n            onChange={this.selectAccountType}\n          >\n            <option value=\"student\" selected>\n              Student\n            </option>\n            <option value=\"teacher\">Teacher</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label>Enter your details</label>\n          {this.state.accountType == \"student\" ? <Student /> : null}\n          {this.state.accountType == \"teacher\" ? <Teacher /> : null}\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-success\"\n            id=\"login-btn\"\n            onClick={this.verifyEmail}\n            disabled={!this.props.validSignupData}\n          >\n            VERIFY EMAIL\n          </button>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            id=\"google-login-btn\"\n            onClick={this.googleSignup}\n          >\n            SIGN UP WITH GOOGLE\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(Signup));\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\verifyOtp\\verifyOtp.js",["259","260","261","262"],"import { Component } from \"react\";\nimport \"./verifyOtp.css\";\n\nimport http from \"../../../shared/http\";\nclass VerifyOtp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: {},\n      seconds: 60 * 5,\n      resendEnable: false,\n      otp: \"\",\n      otpError: null,\n    };\n    this.timer = 0;\n    this.startTimer = this.startTimer.bind(this);\n    this.countDown = this.countDown.bind(this);\n  }\n\n  secondsToTime(secs) {\n    let hours = Math.floor(secs / (60 * 60));\n\n    let divisor_for_minutes = secs % (60 * 60);\n    let minutes = Math.floor(divisor_for_minutes / 60);\n\n    let divisor_for_seconds = divisor_for_minutes % 60;\n    let seconds = Math.ceil(divisor_for_seconds);\n\n    let obj = {\n      h: hours,\n      m: minutes,\n      s: seconds,\n    };\n    return obj;\n  }\n\n  componentDidMount() {\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\n    this.setState({ time: timeLeftVar });\n  }\n\n  startTimer() {\n    if (this.timer == 0 && this.state.seconds > 0) {\n      this.timer = setInterval(this.countDown, 1000);\n    }\n  }\n\n  countDown() {\n    // Remove one second, set state so a re-render happens.\n    let seconds = this.state.seconds - 1;\n    this.setState({\n      time: this.secondsToTime(seconds),\n      seconds: seconds,\n    });\n\n    // Check if we're at zero.\n    if (seconds == 0) {\n      clearInterval(this.timer);\n      this.setState({ resendEnable: true });\n    }\n  }\n\n  resendOtp = () => {\n    http(\"POST\", \"/register/resendotp\", {}, (res) => {\n      if (res.status == 200) {\n        console.log(\"OTP resend\");\n      } else {\n        alert(\n          `Error ${res.status} during otp resend\\nError message logged in console.`\n        );\n        console.log(res);\n      }\n    });\n  };\n\n  showAlert = () => {};\n\n  proceed = () => {\n    if (this.state.otp.length > 0) {\n      this.setState({ otpError: null });\n\n      http(\n        \"POST\",\n        \"/register/otp\",\n        {\n          otp: this.state.otp,\n        },\n        (res) => {\n          console.log(\"OTP Sent to server\");\n          if (res.status == 203) {\n            console.log(res.data);\n            alert(\"OTP Not verified: \" + res.data);\n          } else {\n            console.log(\"OTP verification Success\");\n            this.props.otpVerified();\n          }\n        }\n      );\n    } else {\n      this.setState({ otpError: <p>Please enter OTP</p> });\n    }\n  };\n\n  otpChange = (event) => {\n    if (this.state.otp.length > 0) {\n      this.setState({ otpError: null });\n    }\n    this.setState({ otp: event.target.value });\n  };\n\n  render() {\n    this.startTimer();\n\n    return (\n      <form>\n        <center>\n          <p id=\"info-text\">An OTP has been sent to your email</p>\n        </center>\n        <div className=\"form-group\">\n          <label for=\"otp\">Enter OTP</label>\n          <br />\n          <input\n            type=\"text\"\n            name=\"otp\"\n            id=\"otp\"\n            placeholder=\"OTP\"\n            className=\"form-control mt-3\"\n            value={this.state.otp}\n            onChange={this.otpChange}\n          />\n          {this.state.otpError}\n          <p>\n            Resend OTP: {this.state.time.m}:{this.state.time.s}\n          </p>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            id=\"resend-otp\"\n            disabled={!this.state.resendEnable}\n            onClick={this.resendOtp}\n          >\n            RESEND OTP\n          </button>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-success\"\n            id=\"proceed\"\n            onClick={this.proceed}\n          >\n            PROCEED\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default VerifyOtp;\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\shared\\http.js",["263"],"import axios from \"axios\";\nimport { serverDomain } from \"../config\";\nimport parseCookie from \"./parseCookie\";\n\nlet http = (\n  method = \"GET\",\n  url = \"/\",\n  body = null,\n  callback = null,\n  errorCallback = null\n) => {\n  //Variable for storing response from server\n  let responseFromServer;\n\n  if (method == \"POST\") {\n    body = { ...body, cookies: parseCookie() };\n  }\n\n  axios({\n    method: method,\n    url: serverDomain + url,\n    data: body,\n    withCredentials: true,\n  })\n    .then((response) => {\n      console.log(`${method} request send to ${serverDomain + url}`);\n      console.log(\"Response from server: \", response);\n      responseFromServer = response;\n\n      if (callback) callback(response);\n    })\n    .catch((err) => {\n      alert(\"Error occured during http request. \\n Check console for log data\");\n      console.log(err);\n      if (errorCallback) errorCallback(err);\n    });\n\n  return responseFromServer;\n};\n\nexport default http;\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\signin\\signin.js",["264","265","266","267"],"/**\n * CONTENT OF THE SIGNIN TAB\n */\n\nimport { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./signin.css\";\n\nimport http from \"../../../shared/http\";\nimport configureDialogBox from \"../../../shared/dailogBox\";\n\nclass Signin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\", //USERNAME entered in the login form\n      password: \"\", //PASSWORD entered in the login form\n      erroMessage: null, //Error messsage if any (These are displayed bottom side of the login form)\n      reportEmail: \"\", //Email id of the user (REPORT form)\n      reportContent: \"\", //Content of the report (REPORT from)\n      reportError: null,\n    };\n  }\n\n  showPassword = () => {\n    let password = document.getElementById(\"password\");\n\n    if (password.type == \"password\") {\n      password.type = \"text\";\n    } else {\n      password.type = \"password\";\n    }\n  };\n\n  //Setting form data into the component state\n  inputChange = (event) => {\n    let newState = {};\n    newState[event.target.name] = event.target.value;\n\n    this.setState(newState);\n  };\n\n  /**\n   * When LOGIN button clicked\n   */\n\n  login = () => {\n    if (this.state.username.length > 0 && this.state.password.length > 0) {\n      this.setState({ erroMessage: null });\n      http(\n        \"POST\",\n        \"/login\",\n        { username: this.state.username, password: this.state.password },\n        (res) => {\n          if (res.status == 200) {\n            alert(\"Login Successful\");\n          } else {\n            this.setState({\n              erroMessage: <p>{res.data}</p>,\n            });\n          }\n        }\n      );\n    } else {\n      this.setState({ erroMessage: <p>Please fill all fields</p> });\n    }\n  };\n\n  // When googleSignin button clicked\n  googleSignin = () => {\n    document.location.href = \"http://localhost:4000/register/google\";\n  };\n\n  //Validate Email ID\n  validateEmail = (email) => {\n    if (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  reportFormChange = (e) => {\n    let newState = {};\n\n    newState[e.target.name] = e.target.value;\n    this.setState(newState);\n\n    this.validateReportForm();\n  };\n\n  validateReportForm = () => {\n    if (this.validateEmail(this.state.reportEmail)) {\n      if (this.state.reportContent === \"\") {\n        this.setState({ reportError: \"Content is empty\" });\n        return false;\n      } else {\n        this.setState({ reportError: null });\n        return true;\n      }\n    } else {\n      this.setState({ reportError: \"Email not valid\" });\n      return false;\n    }\n  };\n\n  //When clicking Send in report form\n  sendReport = (e) => {\n    e.preventDefault();\n    if (this.validateReportForm()) {\n      http(\n        \"POST\",\n        \"/login/report\",\n        {\n          email: this.state.reportEmail,\n          message: this.state.reportContent,\n        },\n        (res) => {\n          if (res.status == 200) {\n            alert(\"Report sent successfully\");\n          } else {\n            alert(res.data);\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    return (\n      <form>\n        {/* Configuring The reportModal */}\n        {configureDialogBox(\n          \"reportModal\",\n          \"Report an Issue\",\n          <>\n            <form>\n              <label className=\"black\" for=\"email\">\n                Enter your email:{\" \"}\n              </label>\n              <input\n                onChange={this.reportFormChange}\n                type=\"email\"\n                name=\"reportEmail\"\n                id=\"email\"\n                className=\"m-3\"\n                value={this.state.reportEmail}\n              ></input>\n              <br />\n\n              <label className=\"black\" for=\"content\">\n                Enter content:{\" \"}\n              </label>\n              <textarea\n                onChange={this.reportFormChange}\n                rows=\"10\"\n                name=\"reportContent\"\n                id=\"content\"\n                className=\"m-3\"\n              ></textarea>\n            </form>\n            {this.state.reportError ? <p>{this.state.reportError}</p> : null}\n          </>,\n          <>\n            <button className=\"btn btn-primary\" onClick={this.sendReport}>\n              Send\n            </button>\n          </>\n        )}\n\n        <div className=\"form-group\">\n          <label for=\"username\">Username</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"username\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.inputChange}\n            placeholder=\"Username\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label for=\"password\">Password</label>\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            id=\"password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.inputChange}\n            placeholder=\"Password\"\n          />\n        </div>\n        {this.state.erroMessage}\n        <div className=\"form-check\">\n          <input\n            type=\"checkbox\"\n            className=\"form-check-input\"\n            id=\"showPassword\"\n            name=\"showPassword\"\n            onClick={this.showPassword}\n          />\n          <label className=\"form-check-label\" for=\"showPassword\">\n            Show Password\n          </label>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-success\"\n            id=\"login-btn\"\n            onClick={this.login}\n          >\n            LOGIN\n          </button>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            id=\"google-login-btn\"\n            onClick={this.googleSignin}\n          >\n            SIGN IN WITH GOOGLE\n          </button>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <p style={{ \"margin-top\": \"8px\", color: \"white\" }}>\n            Need help?{\" \"}\n            <a\n              href=\"#\"\n              data-toggle=\"modal\"\n              data-target=\"#reportModal\"\n              style={{ color: \"white\" }}\n            >\n              Report\n            </a>\n          </p>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(Signin);\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Message\\Message.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\sigup\\teacher\\teacher.js",["268"],"import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport http from \"../../../../shared/http\";\n\nimport \"./teacher.css\";\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateData: (payload) => dispatch({ type: \"updateSignupData\", payload }),\n    clearData: () => dispatch({ type: \"clearSignupData\" }),\n  };\n};\nclass Teacher extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      emailValidation: null,\n      departmentList: null,\n      departments: null,\n    };\n  }\n\n  inputValues = {};\n\n  validateForm = () => {\n    if (\n      this.inputValues.name &&\n      this.inputValues.registerNumber &&\n      this.inputValues.department &&\n      this.inputValues.email\n    ) {\n      this.setState({ error: null });\n      if (\n        /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(this.inputValues.email)\n      ) {\n        this.setState({ emailValidation: null });\n\n        //Successful validation\n        return true;\n      } else {\n        this.setState({ emailValidation: <p>Enter a valid email address</p> });\n        return false;\n      }\n    } else {\n      this.setState({\n        error: <p style={{ color: \"black\" }}>PLEASE FILL ALL DATA</p>,\n      });\n      return false;\n    }\n  };\n\n  onValueChange = (event) => {\n    this.inputValues[event.target.name] = event.target.value;\n    let valid = this.validateForm();\n\n    if (valid) {\n      this.props.updateData({ accountType: \"teacher\", ...this.inputValues });\n    } else {\n      this.props.clearData();\n    }\n  };\n\n  setView = () => {\n    if (this.props.google) {\n      document\n        .getElementById(\"email\")\n        .setAttribute(\"value\", this.props.data.email);\n      document\n        .getElementById(\"name\")\n        .setAttribute(\"value\", this.props.data.name);\n\n      document.getElementById(\"email\").setAttribute(\"disabled\", \"true\");\n      document.getElementById(\"name\").setAttribute(\"disabled\", \"true\");\n    }\n  };\n\n  //Get department details from db\n  getDepartmentList = () => {\n    http(\"GET\", \"/login/departments\", null, (res) => {\n      if (res.status == 200) {\n        this.setState({ departments: res.data });\n        this.setupDepartmentList();\n      } else {\n        alert(\"Error returning department list\");\n      }\n    });\n  };\n\n  //Setup JSX element to show the department list using <option> tag\n  setupDepartmentList = () => {\n    let departmentList = this.state.departments.map(\n      (department, index, array) => {\n        return <option value={department._id}>{department.name}</option>;\n      }\n    );\n\n    this.setState({ departmentList });\n  };\n\n  componentDidMount() {\n    this.props.clearData();\n    this.setView();\n    this.getDepartmentList();\n  }\n\n  render() {\n    if (this.props.google) {\n      this.inputValues.name = this.props.data.name;\n      this.inputValues.email = this.props.data.email;\n    }\n\n    return (\n      <div>\n        {this.state.error}\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"name\"\n          placeholder=\"Name\"\n          name=\"name\"\n          onChange={this.onValueChange}\n        />\n        <input\n          type=\"text\"\n          className=\"form-control mt-3\"\n          id=\"id-number\"\n          name=\"registerNumber\"\n          onChange={this.onValueChange}\n          placeholder=\"ID Number\"\n        />\n        <select\n          className=\"form-select mt-3\"\n          aria-label=\"Default select example\"\n          name=\"department\"\n          onChange={this.onValueChange}\n          id=\"department\"\n        >\n          <option selected value=\"\">\n            --SELECT DEPARTMENT--\n          </option>\n          {this.state.departmentList}\n        </select>\n        <input\n          type=\"email\"\n          className=\"form-control mt-3\"\n          id=\"email\"\n          name=\"email\"\n          onChange={this.onValueChange}\n          placeholder=\"Email\"\n        />\n        {this.state.emailValidation}\n      </div>\n    );\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Teacher);\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\config.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\shared\\parseCookie.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\sigup\\student\\student.js",["269","270"],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\shared\\dailogBox.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Report\\Report.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\VerifyAccounts\\VerifyAccounts.js",["271","272","273"],"import React, { Component } from \"react\";\nimport ListItem from \"../../../ui-elements/ListItem/ListItem\";\nimport { Button, Row, Col, Form } from \"react-bootstrap\";\n\nimport http from \"../../../../shared/http\";\nexport default class VerifyAccounts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userData: [],\n    };\n  }\n  getUserData = () => {\n    http(\"GET\", \"/admin/verifyaccount\", null, (res) => {\n      this.setState({ userData: res.data.data });\n    });\n  };\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  acceptUser = (item) => {\n    let confirmation = window.confirm(\"Are you sure you want to accept?\");\n\n    if (confirmation) {\n      http(\n        \"POST\",\n        \"/admin/verifyaccount/accept\",\n        { username: item.username },\n        (res) => {\n          if (res.status == 200) {\n            alert(\"Account Verified Successfully\");\n            document.getElementById(item._id).style.display = \"none\";\n          } else {\n            alert(\"Error during account verification\");\n          }\n        }\n      );\n    }\n  };\n\n  rejectUser = (item) => {\n    let confirmation = window.confirm(\"Are you sure you want to reject?\");\n\n    if (confirmation) {\n      http(\n        \"POST\",\n        \"/admin/verifyaccount/reject\",\n        { username: item.username },\n        (res) => {\n          if (res.status == 200) {\n            alert(\"Account Rejected Successfully\");\n            document.getElementById(item._id).style.display = \"none\";\n          } else {\n            alert(\"Error during account rejection\");\n          }\n        }\n      );\n    }\n  };\n\n  getTeacherList = () => {\n    let teachers = this.state.userData.map((item) => {\n      return (\n        <div className=\"container  col-md-10 mt-1 \" id={item._id}>\n          <ListItem height=\"180px\">\n            {{\n              left: (\n                <div>\n                  <span>\n                    <Row>\n                      <Col>\n                        <p class=\"text-left\">{item.name}</p>\n                      </Col>\n                    </Row>\n                    <p class=\"text-left\">{item.email}</p>\n                    <p class=\"text-left\">{item.department}</p>\n                  </span>{\" \"}\n                  <Col className=\"text-left\">\n                    <Button\n                      type=\"submit\"\n                      className=\" mr-3 btn btn-danger\"\n                      onClick={() => this.rejectUser(item)}\n                    >\n                      Reject\n                    </Button>\n                  </Col>\n                </div>\n              ),\n              right: (\n                <div>\n                  <p class=\"text-right\">{item.idNumber}</p>\n                  <br />\n                  <br />\n                  <br />\n                  <Button\n                    type=\"submit\"\n                    className=\" mr-3 btn btn-success\"\n                    onClick={() => this.acceptUser(item)}\n                  >\n                    Accept\n                  </Button>\n                </div>\n              ),\n            }}\n          </ListItem>\n        </div>\n      );\n    });\n\n    return teachers;\n  };\n\n  render() {\n    return <>{this.getTeacherList()}</>;\n  }\n}\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Home\\Home.js",["274","275","276"],"import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Row, Col, Form } from \"react-bootstrap\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nimport http from \"../../../../shared/http\";\n\nimport \"./Home.css\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  //Creating ref to the form input\n  password = React.createRef();\n  confirm = React.createRef();\n\n  changePassword = () => {\n    //Getting the form values\n    let passwordValue = this.password.current.value;\n    let confirmValue = this.confirm.current.value;\n\n    //Validating password\n    if (passwordValue != \"\" && confirmValue != \"\") {\n      if (passwordValue === confirmValue)\n        http(\n          \"POST\",\n          \"/admin/changepassword\",\n          { password: passwordValue },\n          (res) => {\n            if (res.status === 200) {\n              alert(\"Password changed successfully\");\n            } else {\n              alert(res.data);\n            }\n          }\n        );\n      else alert(\"Password does not match\");\n    } else {\n      alert(\"Please fill all data\");\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"container mt-5\">\n          <Jumbotron className=\"bg-secondary\" id=\"changePasswordDiv\">\n            <h1 className=\"text-light\">Change password</h1>\n            <Form>\n              <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                <Form.Label column>New Password</Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    ref={this.password}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                <Form.Label column>Confirm Password</Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Confirm\"\n                    ref={this.confirm}\n                  />\n                </Col>\n              </Form.Group>\n            </Form>\n\n            <p className=\"ml-2 text-right\">\n              <Button\n                className=\"ml-7\"\n                variant=\"primary\"\n                onClick={this.changePassword}\n              >\n                Save\n              </Button>\n            </p>\n          </Jumbotron>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\AdminMain.js",["277"],"import React, { Component } from \"react\";\r\nimport Admin from \"./Admin\";\r\nimport AdminLogin from \"./AdminLogin/AdminLogin\";\r\nimport http from \"../../shared/http\";\r\n\r\nexport default class AdminMain extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { component: null };\r\n  }\r\n\r\n  checkAuthentication = () => {\r\n    http(\r\n      \"POST\",\r\n      \"/login/checkAdmin\",\r\n      null,\r\n      (res) => {\r\n        if (res.status == 200) {\r\n          this.setState({ component: <Admin /> });\r\n        } else {\r\n          alert(res.data);\r\n          this.setState({ component: null });\r\n        }\r\n      },\r\n      (err) => {\r\n        alert(\"Authentication Failed! Please login again\");\r\n        this.setState({ component: null });\r\n      }\r\n    );\r\n  };\r\n  componentDidMount() {\r\n    this.checkAuthentication();\r\n  }\r\n\r\n  render() {\r\n    return <>{this.state.component ? this.state.component : <AdminLogin />}</>;\r\n  }\r\n}\r\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\AdminLogin\\AdminLogin.js",["278","279","280"],"import React, { Component } from \"react\";\r\nimport \"./AdminLogin.css\";\r\nimport http from \"../../../shared/http\";\r\n\r\nclass AdminLogin extends Component {\r\n  //Creating ref for the input fields\r\n  username = React.createRef();\r\n  password = React.createRef();\r\n\r\n  //Login button Click listener\r\n  login = (e) => {\r\n    e.preventDefault();\r\n\r\n    //Getting form values\r\n    let username = this.username.current.value;\r\n    let password = this.password.current.value;\r\n\r\n    if (password != \"\" && username != \"\") {\r\n      http(\r\n        \"POST\",\r\n        \"/login/admin\",\r\n        { username, password, adminLogin: true },\r\n        (res) => {\r\n          if (res.status == 200) {\r\n            alert(\"Login Success\");\r\n            //Refresh the page\r\n            window.location.href = \"http://localhost:3000/admin/home\";\r\n          } else {\r\n            alert(res.data);\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      alert(\"Please fill all data\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"container col-md-3 mt-5 p-3\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            border: \"2px solid grey\",\r\n            borderRadius: \"10px\",\r\n          }}\r\n        >\r\n          <form>\r\n            <div class=\"form-group\">\r\n              <h4>ADMIN LOGIN</h4>\r\n              <label for=\"username\">Username</label>\r\n              <input\r\n                ref={this.username}\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                id=\"username\"\r\n                placeholder=\"Enter username\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"password\">Password</label>\r\n              <input\r\n                ref={this.password}\r\n                type=\"password\"\r\n                class=\"form-control\"\r\n                id=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n            <button type=\"submit\" class=\" btn-success\" onClick={this.login}>\r\n              LOGIN\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminLogin;\r\n",{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","severity":1,"message":"286","line":2,"column":25,"nodeType":"287","messageId":"288","endLine":2,"endColumn":33},{"ruleId":"289","severity":1,"message":"290","line":52,"column":22,"nodeType":"291","messageId":"292","endLine":52,"endColumn":24},{"ruleId":"289","severity":1,"message":"290","line":75,"column":14,"nodeType":"291","messageId":"292","endLine":75,"endColumn":16},{"ruleId":"293","severity":1,"message":"294","line":108,"column":15,"nodeType":"295","endLine":108,"endColumn":80},{"ruleId":"293","severity":1,"message":"294","line":111,"column":15,"nodeType":"295","endLine":115,"endColumn":16},{"ruleId":"293","severity":1,"message":"294","line":118,"column":15,"nodeType":"295","endLine":122,"endColumn":16},{"ruleId":"293","severity":1,"message":"294","line":125,"column":15,"nodeType":"295","endLine":129,"endColumn":16},{"ruleId":"293","severity":1,"message":"294","line":132,"column":15,"nodeType":"295","endLine":136,"endColumn":16},{"ruleId":"293","severity":1,"message":"294","line":139,"column":15,"nodeType":"295","endLine":143,"endColumn":16},{"ruleId":"296","severity":1,"message":"297","line":46,"column":25,"nodeType":"298","messageId":"299","endLine":46,"endColumn":27},{"ruleId":"285","severity":1,"message":"300","line":4,"column":8,"nodeType":"287","messageId":"288","endLine":4,"endColumn":21},{"ruleId":"285","severity":1,"message":"301","line":6,"column":8,"nodeType":"287","messageId":"288","endLine":6,"endColumn":17},{"ruleId":"285","severity":1,"message":"302","line":7,"column":10,"nodeType":"287","messageId":"288","endLine":7,"endColumn":14},{"ruleId":"296","severity":1,"message":"297","line":44,"column":25,"nodeType":"298","messageId":"299","endLine":44,"endColumn":27},{"ruleId":"303","severity":1,"message":"304","line":9,"column":7,"nodeType":"305","messageId":"306","endLine":9,"endColumn":13},{"ruleId":"303","severity":1,"message":"304","line":8,"column":7,"nodeType":"305","messageId":"306","endLine":8,"endColumn":13},{"ruleId":"285","severity":1,"message":"307","line":4,"column":8,"nodeType":"287","messageId":"288","endLine":4,"endColumn":15},{"ruleId":"289","severity":1,"message":"290","line":18,"column":22,"nodeType":"291","messageId":"292","endLine":18,"endColumn":24},{"ruleId":"289","severity":1,"message":"308","line":25,"column":46,"nodeType":"291","messageId":"292","endLine":25,"endColumn":48},{"ruleId":"285","severity":1,"message":"309","line":12,"column":25,"nodeType":"287","messageId":"288","endLine":12,"endColumn":30},{"ruleId":"293","severity":1,"message":"310","line":117,"column":19,"nodeType":"295","endLine":123,"endColumn":20},{"ruleId":"293","severity":1,"message":"310","line":126,"column":19,"nodeType":"295","endLine":132,"endColumn":20},{"ruleId":"285","severity":1,"message":"311","line":2,"column":10,"nodeType":"287","messageId":"288","endLine":2,"endColumn":19},{"ruleId":"285","severity":1,"message":"312","line":2,"column":21,"nodeType":"287","messageId":"288","endLine":2,"endColumn":24},{"ruleId":"285","severity":1,"message":"313","line":2,"column":26,"nodeType":"287","messageId":"288","endLine":2,"endColumn":29},{"ruleId":"285","severity":1,"message":"314","line":12,"column":18,"nodeType":"287","messageId":"288","endLine":12,"endColumn":23},{"ruleId":"293","severity":1,"message":"310","line":304,"column":27,"nodeType":"295","endLine":310,"endColumn":28},{"ruleId":"293","severity":1,"message":"310","line":315,"column":27,"nodeType":"295","endLine":321,"endColumn":28},{"ruleId":"293","severity":1,"message":"310","line":326,"column":27,"nodeType":"295","endLine":332,"endColumn":28},{"ruleId":"293","severity":1,"message":"310","line":337,"column":27,"nodeType":"295","endLine":343,"endColumn":28},{"ruleId":"293","severity":1,"message":"310","line":350,"column":19,"nodeType":"295","endLine":355,"endColumn":20},{"ruleId":"289","severity":1,"message":"290","line":33,"column":22,"nodeType":"291","messageId":"292","endLine":33,"endColumn":24},{"ruleId":"289","severity":1,"message":"290","line":22,"column":26,"nodeType":"291","messageId":"292","endLine":22,"endColumn":28},{"ruleId":"289","severity":1,"message":"290","line":35,"column":28,"nodeType":"291","messageId":"292","endLine":35,"endColumn":30},{"ruleId":"289","severity":1,"message":"290","line":44,"column":28,"nodeType":"291","messageId":"292","endLine":44,"endColumn":30},{"ruleId":"289","severity":1,"message":"290","line":123,"column":22,"nodeType":"291","messageId":"292","endLine":123,"endColumn":24},{"ruleId":"285","severity":1,"message":"315","line":4,"column":10,"nodeType":"287","messageId":"288","endLine":4,"endColumn":15},{"ruleId":"289","severity":1,"message":"290","line":23,"column":26,"nodeType":"291","messageId":"292","endLine":23,"endColumn":28},{"ruleId":"289","severity":1,"message":"290","line":36,"column":28,"nodeType":"291","messageId":"292","endLine":36,"endColumn":30},{"ruleId":"289","severity":1,"message":"290","line":45,"column":28,"nodeType":"291","messageId":"292","endLine":45,"endColumn":30},{"ruleId":"289","severity":1,"message":"290","line":122,"column":22,"nodeType":"291","messageId":"292","endLine":122,"endColumn":24},{"ruleId":"285","severity":1,"message":"314","line":2,"column":34,"nodeType":"287","messageId":"288","endLine":2,"endColumn":39},{"ruleId":"285","severity":1,"message":"316","line":4,"column":32,"nodeType":"287","messageId":"288","endLine":4,"endColumn":38},{"ruleId":"293","severity":1,"message":"310","line":119,"column":21,"nodeType":"295","endLine":124,"endColumn":22},{"ruleId":"289","severity":1,"message":"290","line":150,"column":19,"nodeType":"291","messageId":"292","endLine":150,"endColumn":21},{"ruleId":"289","severity":1,"message":"290","line":150,"column":38,"nodeType":"291","messageId":"292","endLine":150,"endColumn":40},{"ruleId":"289","severity":1,"message":"290","line":162,"column":26,"nodeType":"291","messageId":"292","endLine":162,"endColumn":28},{"ruleId":"289","severity":1,"message":"290","line":181,"column":17,"nodeType":"291","messageId":"292","endLine":181,"endColumn":19},{"ruleId":"289","severity":1,"message":"290","line":181,"column":35,"nodeType":"291","messageId":"292","endLine":181,"endColumn":37},{"ruleId":"285","severity":1,"message":"317","line":8,"column":8,"nodeType":"287","messageId":"288","endLine":8,"endColumn":9},{"ruleId":"289","severity":1,"message":"290","line":61,"column":35,"nodeType":"291","messageId":"292","endLine":61,"endColumn":37},{"ruleId":"293","severity":1,"message":"310","line":109,"column":21,"nodeType":"295","endLine":114,"endColumn":22},{"ruleId":"289","severity":1,"message":"290","line":140,"column":24,"nodeType":"291","messageId":"292","endLine":140,"endColumn":26},{"ruleId":"289","severity":1,"message":"290","line":148,"column":26,"nodeType":"291","messageId":"292","endLine":148,"endColumn":28},{"ruleId":"289","severity":1,"message":"290","line":166,"column":17,"nodeType":"291","messageId":"292","endLine":166,"endColumn":19},{"ruleId":"289","severity":1,"message":"290","line":52,"column":23,"nodeType":"291","messageId":"292","endLine":52,"endColumn":25},{"ruleId":"289","severity":1,"message":"290","line":52,"column":53,"nodeType":"291","messageId":"292","endLine":52,"endColumn":55},{"ruleId":"285","severity":1,"message":"318","line":2,"column":22,"nodeType":"287","messageId":"288","endLine":2,"endColumn":33},{"ruleId":"289","severity":1,"message":"290","line":42,"column":24,"nodeType":"291","messageId":"292","endLine":42,"endColumn":26},{"ruleId":"289","severity":1,"message":"290","line":86,"column":35,"nodeType":"291","messageId":"292","endLine":86,"endColumn":37},{"ruleId":"289","severity":1,"message":"290","line":96,"column":35,"nodeType":"291","messageId":"292","endLine":96,"endColumn":37},{"ruleId":"289","severity":1,"message":"290","line":67,"column":35,"nodeType":"291","messageId":"292","endLine":67,"endColumn":37},{"ruleId":"289","severity":1,"message":"290","line":68,"column":35,"nodeType":"291","messageId":"292","endLine":68,"endColumn":37},{"ruleId":"289","severity":1,"message":"290","line":43,"column":20,"nodeType":"291","messageId":"292","endLine":43,"endColumn":22},{"ruleId":"289","severity":1,"message":"290","line":57,"column":17,"nodeType":"291","messageId":"292","endLine":57,"endColumn":19},{"ruleId":"289","severity":1,"message":"290","line":65,"column":22,"nodeType":"291","messageId":"292","endLine":65,"endColumn":24},{"ruleId":"289","severity":1,"message":"290","line":90,"column":26,"nodeType":"291","messageId":"292","endLine":90,"endColumn":28},{"ruleId":"289","severity":1,"message":"290","line":15,"column":14,"nodeType":"291","messageId":"292","endLine":15,"endColumn":16},{"ruleId":"289","severity":1,"message":"290","line":29,"column":23,"nodeType":"291","messageId":"292","endLine":29,"endColumn":25},{"ruleId":"289","severity":1,"message":"290","line":56,"column":26,"nodeType":"291","messageId":"292","endLine":56,"endColumn":28},{"ruleId":"289","severity":1,"message":"290","line":120,"column":26,"nodeType":"291","messageId":"292","endLine":120,"endColumn":28},{"ruleId":"293","severity":1,"message":"310","line":232,"column":13,"nodeType":"295","endLine":237,"endColumn":14},{"ruleId":"289","severity":1,"message":"290","line":81,"column":22,"nodeType":"291","messageId":"292","endLine":81,"endColumn":24},{"ruleId":"289","severity":1,"message":"290","line":86,"column":27,"nodeType":"291","messageId":"292","endLine":86,"endColumn":29},{"ruleId":"289","severity":1,"message":"290","line":109,"column":22,"nodeType":"291","messageId":"292","endLine":109,"endColumn":24},{"ruleId":"285","severity":1,"message":"319","line":3,"column":28,"nodeType":"287","messageId":"288","endLine":3,"endColumn":32},{"ruleId":"289","severity":1,"message":"290","line":32,"column":26,"nodeType":"291","messageId":"292","endLine":32,"endColumn":28},{"ruleId":"289","severity":1,"message":"290","line":52,"column":26,"nodeType":"291","messageId":"292","endLine":52,"endColumn":28},{"ruleId":"320","severity":1,"message":"321","line":11,"column":3,"nodeType":"322","messageId":"323","endLine":13,"endColumn":4},{"ruleId":"289","severity":1,"message":"308","line":25,"column":23,"nodeType":"291","messageId":"292","endLine":25,"endColumn":25},{"ruleId":"289","severity":1,"message":"308","line":25,"column":45,"nodeType":"291","messageId":"292","endLine":25,"endColumn":47},{"ruleId":"289","severity":1,"message":"290","line":19,"column":24,"nodeType":"291","messageId":"292","endLine":19,"endColumn":26},{"ruleId":"289","severity":1,"message":"308","line":18,"column":18,"nodeType":"291","messageId":"292","endLine":18,"endColumn":20},{"ruleId":"289","severity":1,"message":"308","line":18,"column":36,"nodeType":"291","messageId":"292","endLine":18,"endColumn":38},{"ruleId":"289","severity":1,"message":"290","line":24,"column":26,"nodeType":"291","messageId":"292","endLine":24,"endColumn":28},"no-native-reassign",["324"],"no-negated-in-lhs",["325"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ExamGuidlines' is defined but never used.","'StartExam' is defined but never used.","'Link' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'Subject' is defined but never used.","Expected '!==' and instead saw '!='.","'Route' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Modal' is defined but never used.","'event' is defined but never used.","'FaPlus' is defined but never used.","'$' is defined but never used.","'useLocation' is defined but never used.","'Form' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]