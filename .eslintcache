[{"/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/index.js":"1","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/App.js":"2","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/store/store.js":"3","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/login/LoginRoute.js":"4","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/student/Student.js":"5","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/teacher/TeacherMain.js":"6","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/AdminMain.js":"7","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/ui-elements/Canvas/Canvas.js":"8","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/login/Login.js":"9","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/store/reducers/login.js":"10","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/store/reducers/adminReducer.js":"11","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/teacher/Teacher.js":"12","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/Admin.js":"13","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/ui-elements/TabView/TabView.js":"14","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/ui-elements/navBar/NavBar.js":"15","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/ui-elements/ListItem/ListItem.js":"16","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/shared/http.js":"17","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/AdminLogin/AdminLogin.js":"18","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/student/components/examguidelines/ExamGuidlines.js":"19","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/student/components/startexam/StartExam.js":"20","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/login/sigup/signup.js":"21","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/login/verifyOtp/verifyOtp.js":"22","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/login/setPassword/SetPassword.js":"23","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/login/signin/signin.js":"24","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/login/sigup/googleSignup/GoogleSignup.js":"25","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/config.js":"26","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/teacher/TeacherProfile/TeacherProfile.js":"27","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/teacher/newExam/NewExam.js":"28","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/shared/parseCookie.js":"29","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/Institutionstructure/Institutionstructure.js":"30","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/Message/Messagelist.js":"31","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/UserManagment/UserMangamenet.js":"32","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/Report/Report.js":"33","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/Home/Home.js":"34","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/Message/Messagecontent.js":"35","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/VerifyAccounts/VerifyAccounts.js":"36","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/shared/dailogBox.js":"37","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/login/sigup/student/student.js":"38","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/login/sigup/teacher/teacher.js":"39","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/teacher/Question/Question.js":"40","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/Message/Message.js":"41","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/Institutionstructure/Subjects.js":"42","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/Institutionstructure/ClassBatch.js":"43","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/Institutionstructure/Department.js":"44","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/UserManagment/Students.js":"45","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/UserManagment/Teachers.js":"46","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/teacher/Question/Essay/Essay.js":"47","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/teacher/Question/Short/Short.js":"48","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/teacher/Question/Text/Text.js":"49","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/ui-elements/Search/Search.js":"50","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/teacher/Question/Mcq/Mcq.js":"51"},{"size":266,"mtime":1610632664329,"results":"52","hashOfConfig":"53"},{"size":1605,"mtime":1614575126151,"results":"54","hashOfConfig":"53"},{"size":273,"mtime":1612448229756,"results":"55","hashOfConfig":"53"},{"size":886,"mtime":1614401677977,"results":"56","hashOfConfig":"53"},{"size":3333,"mtime":1617245596173,"results":"57","hashOfConfig":"53"},{"size":1020,"mtime":1617245596478,"results":"58","hashOfConfig":"53"},{"size":902,"mtime":1617245595990,"results":"59","hashOfConfig":"53"},{"size":7508,"mtime":1617245596824,"results":"60","hashOfConfig":"53"},{"size":4241,"mtime":1614401668469,"results":"61","hashOfConfig":"53"},{"size":322,"mtime":1611639830870,"results":"62","hashOfConfig":"53"},{"size":232,"mtime":1612448229756,"results":"63","hashOfConfig":"53"},{"size":8494,"mtime":1617265850816,"results":"64","hashOfConfig":"53"},{"size":5206,"mtime":1614400582980,"results":"65","hashOfConfig":"53"},{"size":1504,"mtime":1612447802311,"results":"66","hashOfConfig":"53"},{"size":577,"mtime":1612015027856,"results":"67","hashOfConfig":"53"},{"size":538,"mtime":1617246164956,"results":"68","hashOfConfig":"53"},{"size":949,"mtime":1614237223427,"results":"69","hashOfConfig":"53"},{"size":2079,"mtime":1617245595955,"results":"70","hashOfConfig":"53"},{"size":1924,"mtime":1617245596257,"results":"71","hashOfConfig":"53"},{"size":3036,"mtime":1617245596283,"results":"72","hashOfConfig":"53"},{"size":2549,"mtime":1614093842315,"results":"73","hashOfConfig":"53"},{"size":3888,"mtime":1614077492285,"results":"74","hashOfConfig":"53"},{"size":3111,"mtime":1613904510978,"results":"75","hashOfConfig":"53"},{"size":6493,"mtime":1614160522290,"results":"76","hashOfConfig":"53"},{"size":3204,"mtime":1613920796999,"results":"77","hashOfConfig":"53"},{"size":51,"mtime":1611625884505,"results":"78","hashOfConfig":"53"},{"size":4663,"mtime":1617265980878,"results":"79","hashOfConfig":"53"},{"size":39718,"mtime":1617266196172,"results":"80","hashOfConfig":"53"},{"size":456,"mtime":1611716955802,"results":"81","hashOfConfig":"53"},{"size":886,"mtime":1617245596097,"results":"82","hashOfConfig":"53"},{"size":1354,"mtime":1614352598519,"results":"83","hashOfConfig":"53"},{"size":539,"mtime":1614388551846,"results":"84","hashOfConfig":"53"},{"size":2443,"mtime":1614175936437,"results":"85","hashOfConfig":"53"},{"size":2493,"mtime":1614221024241,"results":"86","hashOfConfig":"53"},{"size":2058,"mtime":1614351846488,"results":"87","hashOfConfig":"53"},{"size":3380,"mtime":1614355594298,"results":"88","hashOfConfig":"53"},{"size":2057,"mtime":1617245597071,"results":"89","hashOfConfig":"53"},{"size":5864,"mtime":1614348130920,"results":"90","hashOfConfig":"53"},{"size":4013,"mtime":1614264201482,"results":"91","hashOfConfig":"53"},{"size":1379,"mtime":1617245596427,"results":"92","hashOfConfig":"53"},{"size":1081,"mtime":1614351124974,"results":"93","hashOfConfig":"53"},{"size":3056,"mtime":1613789705876,"results":"94","hashOfConfig":"53"},{"size":8586,"mtime":1617245596057,"results":"95","hashOfConfig":"53"},{"size":7685,"mtime":1617245596087,"results":"96","hashOfConfig":"53"},{"size":4908,"mtime":1614399605932,"results":"97","hashOfConfig":"53"},{"size":5116,"mtime":1614399530586,"results":"98","hashOfConfig":"53"},{"size":702,"mtime":1617245596369,"results":"99","hashOfConfig":"53"},{"size":702,"mtime":1617245596444,"results":"100","hashOfConfig":"53"},{"size":158,"mtime":1617245596461,"results":"101","hashOfConfig":"53"},{"size":580,"mtime":1617245596845,"results":"102","hashOfConfig":"53"},{"size":1261,"mtime":1617245596403,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"evpn2v",{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"106"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"106"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"106"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"106"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"106"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"106"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"106"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"106"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"106"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"106"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"106"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"106"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"106"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"106"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"106"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"106"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"106"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"106"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"106"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"106"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"106"},"/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/index.js",[],["240","241"],"/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/App.js",["242"],"import { Provider } from \"react-redux\";\nimport { BrowserRouter, Redirect, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport LoginRoute from \"./components/login/LoginRoute\";\nimport Student from \"./components/student/Student\";\nimport TeacherMain from \"./components/teacher/TeacherMain\";\nimport AdminMain from \"./components/admin/AdminMain\";\n\nimport { store } from \"./store/store\";\nimport React from \"react\";\n\nimport $ from \"jquery\";\nimport Canvas from \"./components/ui-elements/Canvas/Canvas\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    window.alert = (text) => {\n      $(\"body\").append(\n        `<div class=\"alert alert-info alert-dismissible\" role=\"alert\" id=\"systemAlert\">\n          <button\n            type=\"button\"\n            class=\"close\"\n            data-dismiss=\"alert\"\n            aria-label=\"Close\"\n          >\n            <span aria-hidden=\"true\">&times;</span>\n          </button>${text}\n        </div>`\n      );\n    };\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Provider store={store}>\n          <div>\n            {/* Routes of the app */}\n            <Route path=\"/\" component={LoginRoute} />\n            <Route path=\"/student\" component={Student} />\n            <Route path=\"/teacher\" component={TeacherMain} />\n            <Route path=\"/admin\" component={AdminMain} />\n\n            {/* //Test route for development purposes */}\n            <Route path=\"/test\">\n              <>\n                <Canvas />\n              </>\n            </Route>\n          </div>\n        </Provider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/store/store.js",[],"/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/login/LoginRoute.js",["243"],"/**\n * This is the router in the client side to navigate user in the browser without page refresh\n * THIS IS THE ROUTER ONLY FOR THE LOGIN MODULE\n */\nimport { Component } from \"react\";\nimport {\n  BrowserRouter,\n  Route,\n  withRouter,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport Login from \"./Login\";\n\nclass LoginRoute extends Component {\n  render() {\n    return (\n      /**\n       * DISPLAYING CORRESPONDING COMPONENTS IN DIFFERENT ROUTES\n       */\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/signin\" />\n        </Route>\n        <Route path=\"/signin\" exact>\n          <Login signin />\n        </Route>\n        <Route path=\"/signup\" exact>\n          <Login signup />\n        </Route>\n        <Route path=\"/signup/google\" exact>\n          <Login googleSignup />\n        </Route>\n      </Switch>\n    );\n  }\n}\n\nexport default withRouter(LoginRoute);\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/student/Student.js",["244","245","246","247"],"import React, { Component } from \"react\";\nimport NavBar from \"../ui-elements/navBar/NavBar\";\nimport TabView from \"../ui-elements/TabView/TabView\";\nimport ExamGuidlines from \"./components/examguidelines/ExamGuidlines\";\nimport ListItem from \"../ui-elements/ListItem/ListItem\";\nimport StartExam from \"./components/startexam/StartExam\";\nimport { Link, BrowserRouter, Route } from \"react-router-dom\";\nimport \"./Student.css\";\nlet examData = [\n  {\n    name: \"Name of Exam\",\n    subject: \"Subject\",\n    from: \"9:00:00\",\n    to: \"12:00:00\",\n    marks: 80,\n    date: \"12-01-2021\", //mm-dd-yyyy\n  },\n  {\n    name: \"Name of Exam\",\n    subject: \"Subject\",\n    from: \"9:00:00\",\n    to: \"12:00:00\",\n    marks: 80,\n    date: \"08-01-2021\", //mm-dd-yyyy\n  },\n  {\n    name: \"Name of Exam\",\n    subject: \"Subject\",\n    from: \"9:00:00\",\n    to: \"12:00:00\",\n    marks: 80,\n    date: \"01-01-2021\", //mm-dd-yyyy\n  },\n];\n\nexport default class Student extends Component {\n  examList = [];\n  previousExamList = [];\n\n  setExamData = () => {\n    console.log(\"CAlled\");\n    let currentTime = new Date();\n\n    examData.map((item) => {\n      let examDate = new Date(`${item.date},${item.to}`);\n\n      if (currentTime.getTime() > examDate.getTime()) {\n        this.previousExamList.push(\n          <ListItem height=\"100px\">\n            {{\n              left: (\n                <div id=\"leftListItem\">\n                  <p>{item.name}</p>\n                  <p>{item.subject}</p>\n                  <p>{item.date}</p>\n                </div>\n              ),\n              right: (\n                <div id=\"rightListItem\">\n                  <p>\n                    {item.from} - {item.to}\n                  </p>\n                  <p>{item.marks} Marks</p>\n                </div>\n              ),\n            }}\n          </ListItem>\n        );\n        console.log(\"pushed to prev\");\n      } else {\n        this.examList.push(\n          <ListItem height=\"100px\">\n            {{\n              left: (\n                <div id=\"leftListItem\">\n                  <p>{item.name}</p>\n                  <p>{item.subject}</p>\n                  <p>{item.date}</p>\n                </div>\n              ),\n              right: (\n                <div id=\"rightListItem\">\n                  <p>\n                    {item.from} - {item.to}\n                  </p>\n                  <p>{item.marks} Marks</p>\n                </div>\n              ),\n            }}\n          </ListItem>\n        );\n      }\n    });\n  };\n\n  componentDidMount() {\n    this.setExamData();\n    this.forceUpdate();\n  }\n  render() {\n    return (\n      <div className=\"root\">\n        <div>\n          <BrowserRouter>\n            <Route path=\"/student\" exact>\n              <NavBar>\n                {{\n                  left: <h5>HOME</h5>,\n                }}\n              </NavBar>\n              <TabView>\n                {{\n                  leftTab: <span>SCHEDULED EXAMS</span>,\n                  rightTab: <span>PREVIOUS EXAMS</span>,\n                  leftTabBody: <div id=\"leftTabBody\">{this.examList}</div>,\n                  rightTabBody: (\n                    <div id=\"rightTabBody\">{this.previousExamList}</div>\n                  ),\n                }}\n              </TabView>\n              {/* <ExamGuidlines/> */}\n            </Route>\n          </BrowserRouter>\n        </div>\n      </div>\n    );\n  }\n}\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/teacher/TeacherMain.js",["248"],"import React, { Component } from \"react\";\nimport Teacher from \"./Teacher\";\nimport http from \"../../shared/http\";\nimport { withRouter } from \"react-router-dom\";\n\nclass TeacherMain extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { component: null };\n  }\n\n  checkAuthentication = () => {\n    http(\n      \"POST\",\n      \"/login/checkTeacher\",\n      null,\n      (res) => {\n        if (res.status == 200) {\n          this.setState({ component: <Teacher user={res.data} /> });\n        } else {\n          alert(res.data);\n          this.setState({ component: null });\n          this.props.history.push(\"/\");\n        }\n      },\n      (err) => {\n        alert(\"Authentication Failed! Please login again\");\n        this.setState({ component: null });\n        this.props.history.push(\"/\");\n      }\n    );\n  };\n\n  componentDidMount() {\n    this.checkAuthentication();\n  }\n\n  render() {\n    return <>{this.state.component ? this.state.component : null}</>;\n  }\n}\n\nexport default withRouter(TeacherMain);\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/AdminMain.js",["249"],"import React, { Component } from \"react\";\nimport Admin from \"./Admin\";\nimport AdminLogin from \"./AdminLogin/AdminLogin\";\nimport http from \"../../shared/http\";\n\nexport default class AdminMain extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { component: null };\n  }\n\n  checkAuthentication = () => {\n    http(\n      \"POST\",\n      \"/login/checkAdmin\",\n      null,\n      (res) => {\n        if (res.status == 200) {\n          this.setState({ component: <Admin /> });\n        } else {\n          alert(res.data);\n          this.setState({ component: null });\n        }\n      },\n      (err) => {\n        alert(\"Authentication Failed! Please login again\");\n        this.setState({ component: null });\n      }\n    );\n  };\n  componentDidMount() {\n    this.checkAuthentication();\n  }\n\n  render() {\n    return <>{this.state.component ? this.state.component : <AdminLogin />}</>;\n  }\n}\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/ui-elements/Canvas/Canvas.js",["250","251","252","253","254","255"],"import React, { Component } from \"react\";\nimport NavBar from \"../navBar/NavBar\";\nimport \"./Canvas.css\";\n\nexport default class Canvas extends Component {\n  constructor(props) {\n    super(props);\n\n    this.canvas = false;\n    this.ctx = false;\n    this.flag = false;\n\n    this.prevX = 0;\n    this.currX = 0;\n    this.prevY = 0;\n    this.currY = 0;\n    this.dot_flag = false;\n\n    this.x = \"black\";\n    this.y = 2;\n  }\n\n  init = () => {\n    this.canvas = document.getElementById(\"can\");\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.ctx.canvas.width = window.innerWidth;\n    this.ctx.canvas.height = window.innerHeight;\n    this.w = this.canvas.width;\n    this.h = this.canvas.height;\n\n    this.canvas.addEventListener(\n      \"mousemove\",\n      (e) => {\n        this.findxy(\"move\", e);\n      },\n      false\n    );\n\n    this.canvas.addEventListener(\n      \"mousedown\",\n      (e) => {\n        this.findxy(\"down\", e);\n      },\n      false\n    );\n\n    this.canvas.addEventListener(\n      \"mouseup\",\n      (e) => {\n        this.findxy(\"up\", e);\n      },\n      false\n    );\n\n    this.canvas.addEventListener(\n      \"mouseout\",\n      (e) => {\n        this.findxy(\"out\", e);\n      },\n      false\n    );\n  };\n\n  color = (obj) => {\n    switch (obj.id) {\n      case \"green\":\n        this.x = \"green\";\n        break;\n      case \"blue\":\n        this.x = \"blue\";\n        break;\n      case \"red\":\n        this.x = \"red\";\n        break;\n      case \"yellow\":\n        this.x = \"yellow\";\n        break;\n      case \"orange\":\n        this.x = \"orange\";\n        break;\n      case \"black\":\n        this.x = \"black\";\n        break;\n      case \"white\":\n        this.x = \"white\";\n        break;\n    }\n    if (this.x == \"white\") this.y = 14;\n    else this.y = 2;\n  };\n\n  draw = () => {\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.prevX, this.prevY);\n    this.ctx.lineTo(this.currX, this.currY);\n    this.ctx.strokeStyle = this.x;\n    this.ctx.lineWidth = this.y;\n    this.ctx.stroke();\n    this.ctx.closePath();\n  };\n\n  erase = () => {\n    var m = window.confirm(\"Are you sure to clear?\");\n    if (m) {\n      this.ctx.clearRect(0, 0, this.w, this.h);\n    }\n  };\n\n  //Check if acanvas is empty\n  isCanvasBlank = (canvas) => {\n    const context = canvas.getContext(\"2d\");\n\n    const pixelBuffer = new Uint32Array(\n      context.getImageData(0, 0, canvas.width, canvas.height).data.buffer\n    );\n\n    return !pixelBuffer.some((color) => color !== 0);\n  };\n\n  save = () => {\n    var dataURL = this.canvas.toDataURL();\n    if (this.props.save) {\n      if (this.isCanvasBlank(this.canvas)) {\n        this.props.save(\"\");\n      } else this.props.save(dataURL);\n    }\n  };\n\n  findxy = (res, e) => {\n    if (res == \"down\") {\n      this.prevX = this.currX;\n      this.prevY = this.currY;\n      this.currX = e.clientX - this.canvas.getBoundingClientRect().left;\n      this.currY = e.clientY - this.canvas.getBoundingClientRect().top;\n\n      this.flag = true;\n      this.dot_flag = true;\n      if (this.dot_flag) {\n        this.ctx.beginPath();\n        this.ctx.fillStyle = this.x;\n        this.ctx.fillRect(this.currX, this.currY, 2, 2);\n        this.ctx.closePath();\n        this.dot_flag = false;\n      }\n    }\n    if (res == \"up\" || res == \"out\") {\n      this.flag = false;\n    }\n    if (res == \"move\") {\n      if (this.flag) {\n        this.prevX = this.currX;\n        this.prevY = this.currY;\n        this.currX = e.clientX - this.canvas.getBoundingClientRect().left;\n        this.currY = e.clientY - this.canvas.getBoundingClientRect().top;\n        this.draw();\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.init();\n\n    //Load previous image if exist\n    if (this.props.image) {\n      let ctx = this.canvas.getContext(\"2d\");\n\n      var image = new Image();\n      image.onload = function () {\n        ctx.drawImage(image, 0, 0);\n      };\n      image.src = this.props.image;\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div style={{ zIndex: 1000000 }}>\n          <NavBar>\n            {{\n              left: <h4>CANVAS</h4>,\n              center: (\n                <div style={{ display: \"flex\" }}>\n                  <div className=\"mr-3\">\n                    <div>Choose Color</div>\n                    <div style={{ display: \"flex\" }}>\n                      <div\n                        id=\"green\"\n                        className=\"colorBox\"\n                        onClick={(e) => {\n                          this.color(e.target);\n                        }}\n                        style={{ backgroundColor: \"green\" }}\n                      ></div>\n                      <div\n                        style={{ backgroundColor: \"blue\" }}\n                        id=\"blue\"\n                        className=\"colorBox\"\n                        onClick={(e) => {\n                          this.color(e.target);\n                        }}\n                      ></div>\n                      <div\n                        style={{ backgroundColor: \"red\" }}\n                        id=\"red\"\n                        className=\"colorBox\"\n                        onClick={(e) => {\n                          this.color(e.target);\n                        }}\n                      ></div>\n                      <div\n                        id=\"yellow\"\n                        style={{ backgroundColor: \"yellow\" }}\n                        onClick={(e) => {\n                          this.color(e.target);\n                        }}\n                        className=\"colorBox\"\n                      ></div>\n                      <div\n                        id=\"orange\"\n                        style={{ backgroundColor: \"orange\" }}\n                        onClick={(e) => {\n                          this.color(e.target);\n                        }}\n                        className=\"colorBox\"\n                      ></div>\n                      <div\n                        id=\"black\"\n                        style={{ backgroundColor: \"black\" }}\n                        onClick={(e) => {\n                          this.color(e.target);\n                        }}\n                        className=\"colorBox\"\n                      ></div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <div>Eraser</div>\n                    <div\n                      id=\"white\"\n                      style={{ backgroundColor: \"white\" }}\n                      className=\"colorBox\"\n                      onClick={(e) => {\n                        this.color(e.target);\n                      }}\n                    ></div>\n                  </div>\n                  {/* <img\n                  id=\"canvasimg\"\n                /> */}\n                </div>\n              ),\n              right: (\n                <>\n                  <button\n                    className=\"btn btn-danger mr-3\"\n                    onClick={this.props.close}\n                  >\n                    CLOSE\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    id=\"clr\"\n                    className=\"btn btn-secondary mr-3\"\n                    onClick={this.erase}\n                  >\n                    CLEAR\n                  </button>\n                  <button className=\"btn btn-success\" onClick={this.save}>\n                    SAVE\n                  </button>\n                </>\n              ),\n            }}\n          </NavBar>\n          <div id=\"canvasDiv\">\n            <canvas id=\"can\"></canvas>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/login/Login.js",["256","257","258","259"],"/**\n * MAIN SIGNIN/SIGNUP COMPONENT\n */\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./login.css\";\n\nimport Signin from \"./signin/signin\";\nimport Signup from \"./sigup/signup\";\nimport VerifyOtp from \"./verifyOtp/verifyOtp\";\nimport SetPassword from \"./setPassword/SetPassword\";\nimport { BrowserRouter, Route, withRouter } from \"react-router-dom\";\nimport GoogleSignup from \"./sigup/googleSignup/GoogleSignup\";\n\n//DISPATH ACTIONS TO CHANGE REDUX STORE DATA (USED FOR SIGNUP PROCEDURE)\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateData: (payload) => dispatch({ type: \"updateSignupData\", payload }),\n    clearData: () => dispatch({ type: \"clearSignupData\" }),\n  };\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signin: true, //IF SIGNIN TAB ACTIVE\n      signup: false, //IF SIGNUP TAB ACTIVE\n\n      googleSignup: false, //IF GOOGLE SIGNUP WINDOW VISIBLE\n      showVerifyOtp: false, //IF OTP VERIFICATION SCREEN IS VISIBLE (DURING SIGNUP)\n      showSetPassword: false, //IF PASSWORD ENTRY SCREEN IS VISIBLE (DURING SIGNUP)\n    };\n  }\n\n  changeTabToSignup = () => {\n    this.setState({\n      signin: false,\n      signup: true,\n\n      googleSignup: false,\n      showVerifyOtp: false,\n      showSetPassword: false,\n    });\n\n    this.props.history.push(\"/signup\");\n  };\n\n  changeTabToSignin = () => {\n    this.setState({\n      signin: true,\n      signup: false,\n\n      googleSignup: false,\n      showVerifyOtp: false,\n      showSetPassword: false,\n    });\n    this.props.history.push(\"/signin\");\n  };\n\n  showVerifyOtp = () => {\n    this.setState({ showVerifyOtp: true, signin: false, signup: false });\n  };\n\n  otpVerified = () => {\n    this.setState({\n      showVerifyOtp: false,\n      signin: false,\n      signup: false,\n      googleSignup: false,\n      showSetPassword: true,\n    });\n  };\n\n  /**\n   * INITIALLY SETTING THE VIEW OF THE COMPONENT BASED ON THE RECIEVED PROPS\n   * PROPS CAN BE EITHER: signin, signup or googleSignup\n   */\n  setView = () => {\n    if (this.props.signin) {\n      this.changeTabToSignin();\n    } else if (this.props.signup) {\n      this.changeTabToSignup();\n    } else if (this.props.googleSignup) {\n      this.setState({\n        signin: false,\n        signup: false,\n        showSetPassword: false,\n        showVerifyOtp: false,\n        googleSignup: true,\n      });\n    }\n  };\n\n  componentDidMount() {\n    //Setting initial view of the component base on the props\n    this.setView();\n  }\n\n  render() {\n    //CSS Style to apply for the active tab SIGNIN or SIGNUP\n    let style = {\n      \"background-color\": \"rgb(37, 35, 34)\",\n      color: \"white\",\n    };\n\n    return (\n      <div id=\"loginBody\">\n        <div\n          className=\"d-flex align-items-center justify-content-center\"\n          style={{ height: \"100vh\" }}\n        >\n          <div className=\"card\" id=\"login-card\" style={{ width: \"25rem\" }}>\n            <div className=\"card-body\">\n              <nav class=\"nav nav-pills nav-fill\">\n                <a\n                  className=\"nav-item nav-link active\"\n                  href=\"#\"\n                  id=\"signin-tab\"\n                  onClick={this.changeTabToSignin}\n                  style={this.state.signin ? style : null}\n                >\n                  SIGN IN\n                </a>\n                <a\n                  className=\"nav-item nav-link\"\n                  href=\"#\"\n                  id=\"signup-tab\"\n                  onClick={this.changeTabToSignup}\n                  style={this.state.signin ? null : style}\n                >\n                  SIGN UP\n                </a>\n              </nav>\n              {this.state.signin ? <Signin /> : null}\n              {this.state.signup ? (\n                <Signup otpSent={this.showVerifyOtp} />\n              ) : null}\n              {this.state.showVerifyOtp ? (\n                <VerifyOtp otpVerified={this.otpVerified} />\n              ) : null}\n              {this.state.showSetPassword ? <SetPassword /> : null}\n              {this.state.googleSignup ? <GoogleSignup /> : null}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(Login));\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/store/reducers/login.js",["260"],"export const loginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"updateSignupData\":\n      return {\n        ...state,\n        signupData: { ...action.payload },\n        validSignupData: true,\n      };\n      break;\n    case \"clearSignupData\":\n      return {};\n    default:\n      return state;\n  }\n};\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/store/reducers/adminReducer.js",["261"],"export const adminReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"storeMessage\":\n      return {\n        ...state,\n        message: action.payload,\n      };\n      break;\n    default:\n      return state;\n  }\n};\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/teacher/Teacher.js",["262"],"/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/Admin.js",["263","264","265","266","267","268","269","270"],"import { Component } from \"react\";\nimport $ from \"jquery\";\nimport \"./Admin.css\";\n\nimport NavBar from \"../ui-elements/navBar/NavBar\";\nimport { Switch, Route, withRouter, Redirect } from \"react-router-dom\";\n\nimport Home from \"./pages/Home/Home\";\nimport Institutionstructure from \"./pages/Institutionstructure/Institutionstructure\";\nimport Messagelist from \"./pages/Message/Messagelist\";\nimport Report from \"./pages/Report/Report\";\nimport UserMangamenet from \"./pages/UserManagment/UserMangamenet\";\nimport VerifyAccount from \"./pages/VerifyAccounts/VerifyAccounts\";\nimport Messagecontent from \"./pages/Message/Messagecontent\";\n\nimport http from \"../../shared/http\";\n\nimport { Button } from \"react-bootstrap\";\nimport { FaPlus } from \"react-icons/fa\";\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeItem: $(\"#adminSidebar .active\").attr(\"name\"),\n    };\n  }\n\n  changePage = (event) => {\n    //Get active item\n    let activeItem = $(\"#adminSidebar .active\");\n    //Clicked tab\n    let clickedItem = $(event.target);\n\n    //Remove \"active\" class from the active item\n    activeItem.removeClass(\"active\");\n\n    //Add active class to the clicked item\n    clickedItem.addClass(\"active\");\n\n    //Changing the browser Route\n    this.props.history.push(\"/admin/\" + clickedItem.attr(\"name\"));\n\n    //Setting the states correctly\n    this.setState({ activeItem: clickedItem.attr(\"name\") });\n  };\n\n  logout = () => {\n    http(\"GET\", \"/login/logout\", {}, (res) => {\n      alert(res.data);\n      if (res.status == 200) {\n        window.location.href = \"http://localhost:3000/\";\n      }\n    });\n  };\n\n  componentDidMount() {\n    $(\n      \".list-group-item[name=\" +\n        this.props.history.location.pathname.split(\"/\")[2] +\n        \"]\"\n    ).addClass(\"active\");\n\n    this.setState({ activeItem: $(\"#adminSidebar .active\").attr(\"name\") });\n  }\n\n  render() {\n    //Target modal to open when InstitutionStructure + button clicked\n    let targetModal = \"#adddept\";\n\n    //Check if the path is in the /class inside /Institutionstructure\n    let path = this.props.history.location.pathname.split(\"/\")[3];\n\n    if (path == \"class\") {\n      targetModal = \"#addclass\";\n    }\n\n    //The content of the right side of the navBar\n    let navBarRight = {\n      home: (\n        <Button variant=\"danger\" className=\"mr-4\" onClick={this.logout}>\n          Logout\n        </Button>\n      ),\n      institutionStructure: (\n        <Button className=\"mr-4\" data-toggle=\"modal\" data-target={targetModal}>\n          <FaPlus />\n        </Button>\n      ),\n      message: null,\n      report: null,\n      verifyAccount: null,\n      userManagement: null,\n    };\n\n    return (\n      <div className=\"root\">\n        <NavBar>\n          {{\n            left: <h3>ADMIN</h3>,\n            right: navBarRight[this.state.activeItem],\n          }}\n        </NavBar>\n        <div id=\"adminBody\">\n          <div id=\"adminSidebar\">\n            <div class=\"list-group\">\n              <a class=\"list-group-item\" onClick={this.changePage} name=\"home\">\n                Home\n              </a>\n              <a\n                class=\"list-group-item\"\n                onClick={this.changePage}\n                name=\"institutionStructure\"\n              >\n                Institution Structure\n              </a>\n              <a\n                class=\"list-group-item\"\n                onClick={this.changePage}\n                name=\"message\"\n              >\n                Messages\n              </a>\n              <a\n                class=\"list-group-item\"\n                onClick={this.changePage}\n                name=\"report\"\n              >\n                Report\n              </a>\n              <a\n                class=\"list-group-item\"\n                onClick={this.changePage}\n                name=\"verifyAccount\"\n              >\n                Verify Account\n              </a>\n              <a\n                class=\"list-group-item\"\n                onClick={this.changePage}\n                name=\"userManagement\"\n              >\n                User Management\n              </a>\n            </div>\n          </div>\n          <div id=\"adminContent\">\n            <Switch>\n              <Route\n                path=\"/admin/message/messagecontent\"\n                exact\n                component={Messagecontent}\n              />\n              <Route path=\"/admin/home\" exact>\n                <Home />\n              </Route>\n\n              <Route path=\"/admin/institutionstructure\">\n                <Institutionstructure />\n              </Route>\n\n              <Route path=\"/admin/message\" exact>\n                <Messagelist />\n              </Route>\n\n              <Route path=\"/admin/report\" exact>\n                <Report />\n              </Route>\n\n              <Route path=\"/admin/usermanagement\" exact>\n                <UserMangamenet />\n              </Route>\n\n              <Route path=\"/admin/verifyaccount\" exact>\n                <VerifyAccount />\n              </Route>\n              <Route path=\"/admin\">\n                <Redirect to=\"/admin/home\" />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Admin);\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/ui-elements/TabView/TabView.js",[],"/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/ui-elements/navBar/NavBar.js",["271","272","273"],"import { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"./NavBar.css\";\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <div id=\"navBar\">\n        <div\n          className=\"d-flex flex-row justify-content-between align-items-center\"\n          id=\"navBarContainer\"\n        >\n          <div id=\"left\">{this.props.children.left}</div>\n          <div id=\"center\">{this.props.children.center}</div>\n          <div id=\"right\">{this.props.children.right}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NavBar;\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/ui-elements/ListItem/ListItem.js",[],"/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/shared/http.js",["274"],"import axios from \"axios\";\nimport { serverDomain } from \"../config\";\nimport parseCookie from \"./parseCookie\";\n\nlet http = (\n  method = \"GET\",\n  url = \"/\",\n  body = null,\n  callback = null,\n  errorCallback = null\n) => {\n  //Variable for storing response from server\n  let responseFromServer;\n\n  if (method == \"POST\") {\n    body = { ...body, cookies: parseCookie() };\n  }\n\n  axios({\n    method: method,\n    url: serverDomain + url,\n    data: body,\n    withCredentials: true,\n  })\n    .then((response) => {\n      console.log(`${method} request send to ${serverDomain + url}`);\n      console.log(\"Response from server: \", response);\n      responseFromServer = response;\n\n      if (callback) callback(response);\n    })\n    .catch((err) => {\n      alert(\"Error occured during http request. \\n Check console for log data\");\n      console.log(err);\n      if (errorCallback) errorCallback(err);\n    });\n\n  return responseFromServer;\n};\n\nexport default http;\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/AdminLogin/AdminLogin.js",["275","276","277"],"import React, { Component } from \"react\";\nimport \"./AdminLogin.css\";\nimport http from \"../../../shared/http\";\n\nclass AdminLogin extends Component {\n  //Creating ref for the input fields\n  username = React.createRef();\n  password = React.createRef();\n\n  //Login button Click listener\n  login = (e) => {\n    e.preventDefault();\n\n    //Getting form values\n    let username = this.username.current.value;\n    let password = this.password.current.value;\n\n    if (password != \"\" && username != \"\") {\n      http(\n        \"POST\",\n        \"/login/admin\",\n        { username, password, adminLogin: true },\n        (res) => {\n          if (res.status == 200) {\n            alert(\"Login Success\");\n            //Refresh the page\n            window.location.href = \"http://localhost:3000/admin/home\";\n          } else {\n            alert(res.data);\n          }\n        }\n      );\n    } else {\n      alert(\"Please fill all data\");\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <div\n          className=\"container col-md-3 mt-5 p-3\"\n          style={{\n            backgroundColor: \"white\",\n            border: \"2px solid grey\",\n            borderRadius: \"10px\",\n          }}\n        >\n          <form>\n            <div class=\"form-group\">\n              <h4>ADMIN LOGIN</h4>\n              <label for=\"username\">Username</label>\n              <input\n                ref={this.username}\n                type=\"email\"\n                class=\"form-control\"\n                id=\"username\"\n                placeholder=\"Enter username\"\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"password\">Password</label>\n              <input\n                ref={this.password}\n                type=\"password\"\n                class=\"form-control\"\n                id=\"password\"\n                placeholder=\"Password\"\n              />\n            </div>\n            <button type=\"submit\" class=\" btn-success\" onClick={this.login}>\n              LOGIN\n            </button>\n          </form>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default AdminLogin;\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/student/components/examguidelines/ExamGuidlines.js",[],"/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/student/components/startexam/StartExam.js",["278"],"import React, { Component } from \"react\";\nimport NavBar from \"../../../ui-elements/navBar/NavBar\";\nimport ListItem from \"../../../ui-elements/ListItem/ListItem\";\nimport { Button } from \"react-bootstrap\";\nimport { AiOutlineCheck } from \"react-icons/ai\";\nimport $ from \"jquery\";\nexport class StartExam extends Component {\n  render() {\n    $(document).ready(function () {\n      // Disables ctrl+v, ctrl+x, ctrl+c.\n      $(\"textarea\").on(\"cut\", function (e) {\n        $(\"#d2\").text(\"cut. not allowed!\");\n        e.preventDefault();\n      });\n      $(\"textarea\").on(\"copy\", function (e) {\n        $(\"#d2\").text(\"copy. not allowed!\");\n        e.preventDefault();\n      });\n      $(\"textarea\").on(\"paste\", function (e) {\n        $(\"#d2\").text(\"paste. not allowed!\");\n        e.preventDefault();\n      });\n\n      // Above all three can be combined into one, above is\n      // executed separately for understanding purposes.\n      /* $('textarea').on(\"cut copy paste\", function(e) { \n        $(\"#d2\").text('right-click is disabled!'); \n        e.preventDefault(); \n        }); */\n\n      // Disables right-click.\n      $(\"textarea\").mousedown(function (e) {\n        if (e.button == 2) {\n          e.preventDefault();\n          alert(\"right-click is disabled!\");\n        }\n      });\n    });\n    return (\n      <div className=\"root\">\n        <NavBar>\n          {{\n            left: (\n              <div>\n                <h5>TIME LEFT:HH:MM:SS</h5>\n              </div>\n            ),\n            right: (\n              <div>\n                <Button className=\"btn btn-success\">\n                  <AiOutlineCheck />\n                </Button>\n              </div>\n            ),\n          }}\n        </NavBar>\n        <ListItem height=\"100px\">\n          {{\n            left: (\n              <div id=\"leftListItem\">\n                <p>DATE:DD-MM-YYYY</p>\n                <p>TIME:HH:MM:SS</p>\n                <p>Name of Examination:</p>\n              </div>\n            ),\n            right: (\n              <div id=\"rightListItem\">\n                <p>Subject:</p>\n                <p>MARK:80</p>\n              </div>\n            ),\n          }}\n        </ListItem>\n        <ListItem height=\"150px\">\n          {{\n            left: (\n              <div id=\"leftListItem\">\n                <p>What is computer</p>\n                <p>\n                  <textarea\n                    cols=\"150\"\n                    rows=\"5\"\n                    type=\"textbox\"\n                    id=\"ans\"\n                    oncut=\"return false\"\n                    oncopy=\"return false\"\n                    onpaste=\"return false\"\n                  ></textarea>{\" \"}\n                  <p id=\"d1\"></p>\n                  <p id=\"d2\"></p>\n                  <Button className=\"btn btn-secondary ml-3\">canavs</Button>\n                </p>\n              </div>\n            ),\n            right: (\n              <div id=\"rightListItem\">\n                <p></p>\n              </div>\n            ),\n          }}\n        </ListItem>\n      </div>\n    );\n  }\n}\n\nexport default StartExam;\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/login/sigup/signup.js",["279","280"],"import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./signup.css\";\n\nimport Student from \"./student/student\";\nimport Teacher from \"./teacher/teacher\";\n\nimport http from \"../../../shared/http\";\n\nconst mapStateToProps = (state) => {\n  return {\n    signupData: state.login.signupData,\n    validSignupData: state.login.validSignupData,\n  };\n};\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accountType: \"student\",\n    };\n  }\n\n  selectAccountType = (event) => {\n    this.setState({ accountType: event.target.value });\n  };\n\n  verifyEmail = () => {\n    if (this.props.validSignupData) {\n      http(\"POST\", \"/register\", this.props.signupData, (res) => {\n        if (res.status === 200) {\n          this.props.otpSent();\n        } else {\n          alert(res.data);\n\n          //TEST DATA\n        }\n      });\n    }\n  };\n\n  googleSignup = () => {\n    document.location.href = \"http://localhost:4000/register/google\";\n  };\n\n  render() {\n    return (\n      <form>\n        <div className=\"form-group\">\n          <label for=\"account-type\">Select Account Type</label>\n          <br />\n          <select\n            className=\"form-select\"\n            aria-label=\"Default select example\"\n            id=\"account-type\"\n            onChange={this.selectAccountType}\n          >\n            <option value=\"student\" selected>\n              Student\n            </option>\n            <option value=\"teacher\">Teacher</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label>Enter your details</label>\n          {this.state.accountType == \"student\" ? <Student /> : null}\n          {this.state.accountType == \"teacher\" ? <Teacher /> : null}\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-success\"\n            id=\"login-btn\"\n            onClick={this.verifyEmail}\n            disabled={!this.props.validSignupData}\n          >\n            VERIFY EMAIL\n          </button>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            id=\"google-login-btn\"\n            onClick={this.googleSignup}\n          >\n            SIGN UP WITH GOOGLE\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(Signup));\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/login/verifyOtp/verifyOtp.js",["281","282","283","284"],"import { Component } from \"react\";\nimport \"./verifyOtp.css\";\n\nimport http from \"../../../shared/http\";\nclass VerifyOtp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: {},\n      seconds: 60 * 5,\n      resendEnable: false,\n      otp: \"\",\n      otpError: null,\n    };\n    this.timer = 0;\n    this.startTimer = this.startTimer.bind(this);\n    this.countDown = this.countDown.bind(this);\n  }\n\n  secondsToTime(secs) {\n    let hours = Math.floor(secs / (60 * 60));\n\n    let divisor_for_minutes = secs % (60 * 60);\n    let minutes = Math.floor(divisor_for_minutes / 60);\n\n    let divisor_for_seconds = divisor_for_minutes % 60;\n    let seconds = Math.ceil(divisor_for_seconds);\n\n    let obj = {\n      h: hours,\n      m: minutes,\n      s: seconds,\n    };\n    return obj;\n  }\n\n  componentDidMount() {\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\n    this.setState({ time: timeLeftVar });\n  }\n\n  startTimer() {\n    if (this.timer == 0 && this.state.seconds > 0) {\n      this.timer = setInterval(this.countDown, 1000);\n    }\n  }\n\n  countDown() {\n    // Remove one second, set state so a re-render happens.\n    let seconds = this.state.seconds - 1;\n    this.setState({\n      time: this.secondsToTime(seconds),\n      seconds: seconds,\n    });\n\n    // Check if we're at zero.\n    if (seconds == 0) {\n      clearInterval(this.timer);\n      this.setState({ resendEnable: true });\n    }\n  }\n\n  resendOtp = () => {\n    http(\"POST\", \"/register/resendotp\", {}, (res) => {\n      if (res.status == 200) {\n        console.log(\"OTP resend\");\n      } else {\n        alert(\n          `Error ${res.status} during otp resend\\nError message logged in console.`\n        );\n        console.log(res);\n      }\n    });\n  };\n\n  showAlert = () => {};\n\n  proceed = () => {\n    if (this.state.otp.length > 0) {\n      this.setState({ otpError: null });\n\n      http(\n        \"POST\",\n        \"/register/otp\",\n        {\n          otp: this.state.otp,\n        },\n        (res) => {\n          console.log(\"OTP Sent to server\");\n          if (res.status == 203) {\n            console.log(res.data);\n            alert(\"OTP Not verified: \" + res.data);\n          } else {\n            console.log(\"OTP verification Success\");\n            this.props.otpVerified();\n          }\n        }\n      );\n    } else {\n      this.setState({ otpError: <p>Please enter OTP</p> });\n    }\n  };\n\n  otpChange = (event) => {\n    if (this.state.otp.length > 0) {\n      this.setState({ otpError: null });\n    }\n    this.setState({ otp: event.target.value });\n  };\n\n  render() {\n    this.startTimer();\n\n    return (\n      <form>\n        <center>\n          <p id=\"info-text\">An OTP has been sent to your email</p>\n        </center>\n        <div className=\"form-group\">\n          <label for=\"otp\">Enter OTP</label>\n          <br />\n          <input\n            type=\"text\"\n            name=\"otp\"\n            id=\"otp\"\n            placeholder=\"OTP\"\n            className=\"form-control mt-3\"\n            value={this.state.otp}\n            onChange={this.otpChange}\n          />\n          {this.state.otpError}\n          <p>\n            Resend OTP: {this.state.time.m}:{this.state.time.s}\n          </p>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            id=\"resend-otp\"\n            disabled={!this.state.resendEnable}\n            onClick={this.resendOtp}\n          >\n            RESEND OTP\n          </button>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-success\"\n            id=\"proceed\"\n            onClick={this.proceed}\n          >\n            PROCEED\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default VerifyOtp;\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/login/setPassword/SetPassword.js",["285","286"],"import { Component } from \"react\";\nimport \"./SetPassword.css\";\n\nimport http from \"../../../shared/http\";\nclass SetPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: \"\",\n      confirm: \"\",\n      errorMessage: null,\n    };\n  }\n\n  validatePassword = () => {\n    if (this.state.password.length > 0 && this.state.confirm.length > 0) {\n      if (this.state.password === this.state.confirm) {\n        console.log(\"Password Validation Success\");\n        this.setState({ errorMessage: null });\n\n        http(\n          \"POST\",\n          \"/register/finish\",\n          { password: this.state.password },\n          (res) => {\n            if (res.status === 200) {\n              alert(\"Signup Completed\");\n              window.location.href = \"http://localhost:3000/signin\";\n            } else {\n              alert(\"Error: \" + res.data);\n            }\n          }\n        );\n      } else {\n        this.setState({ errorMessage: <p>Passwords do not match</p> });\n      }\n    } else {\n      this.setState({ errorMessage: \"No password entered\" });\n    }\n  };\n\n  onValueChange = (event) => {\n    let newSate = {};\n    newSate[event.target.name] = event.target.value;\n    this.setState(newSate);\n  };\n\n  showPassword = () => {\n    let password = document.getElementById(\"password\");\n    let confirm = document.getElementById(\"confirm\");\n\n    if (password.type == \"password\" && confirm.type == \"password\") {\n      password.type = \"text\";\n      confirm.type = \"text\";\n    } else {\n      password.type = \"password\";\n      confirm.type = \"password\";\n    }\n  };\n\n  render() {\n    return (\n      <form>\n        <center>\n          <p id=\"info-text\">Setup a new Password</p>\n        </center>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            value={this.state.password}\n            onChange={this.onValueChange}\n            placeholder=\"Password\"\n            className=\"form-control mt-3\"\n          />\n          <input\n            type=\"password\"\n            name=\"confirm\"\n            id=\"confirm\"\n            value={this.state.confirm}\n            onChange={this.onValueChange}\n            placeholder=\"Confirm Password\"\n            className=\"form-control mt-3\"\n          />\n          {this.state.errorMessage}\n          <br />\n          <div className=\"form-check\">\n            <input\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              id=\"showPassword\"\n              name=\"showPassword\"\n              onClick={this.showPassword}\n            />\n            <label className=\"form-check-label\" for=\"showPassword\">\n              Show Password\n            </label>\n          </div>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-success\"\n            id=\"finish\"\n            onClick={this.validatePassword}\n          >\n            FINISH\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default SetPassword;\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/login/signin/signin.js",["287","288","289","290"],"/**\n * CONTENT OF THE SIGNIN TAB\n */\n\nimport { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./signin.css\";\n\nimport http from \"../../../shared/http\";\nimport configureDialogBox from \"../../../shared/dailogBox\";\n\nclass Signin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\", //USERNAME entered in the login form\n      password: \"\", //PASSWORD entered in the login form\n      erroMessage: null, //Error messsage if any (These are displayed bottom side of the login form)\n      reportEmail: \"\", //Email id of the user (REPORT form)\n      reportContent: \"\", //Content of the report (REPORT from)\n      reportError: null,\n    };\n  }\n\n  showPassword = () => {\n    let password = document.getElementById(\"password\");\n\n    if (password.type == \"password\") {\n      password.type = \"text\";\n    } else {\n      password.type = \"password\";\n    }\n  };\n\n  //Setting form data into the component state\n  inputChange = (event) => {\n    let newState = {};\n    newState[event.target.name] = event.target.value;\n\n    this.setState(newState);\n  };\n\n  /**\n   * When LOGIN button clicked\n   */\n\n  login = () => {\n    if (this.state.username.length > 0 && this.state.password.length > 0) {\n      this.setState({ erroMessage: null });\n      http(\n        \"POST\",\n        \"/login\",\n        { username: this.state.username, password: this.state.password },\n        (res) => {\n          if (res.status == 200) {\n            alert(\"Login Successful\");\n          } else {\n            this.setState({\n              erroMessage: <p>{res.data}</p>,\n            });\n          }\n        }\n      );\n    } else {\n      this.setState({ erroMessage: <p>Please fill all fields</p> });\n    }\n  };\n\n  // When googleSignin button clicked\n  googleSignin = () => {\n    document.location.href = \"http://localhost:4000/register/google\";\n  };\n\n  //Validate Email ID\n  validateEmail = (email) => {\n    if (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  reportFormChange = (e) => {\n    let newState = {};\n\n    newState[e.target.name] = e.target.value;\n    this.setState(newState);\n\n    this.validateReportForm();\n  };\n\n  validateReportForm = () => {\n    if (this.validateEmail(this.state.reportEmail)) {\n      if (this.state.reportContent === \"\") {\n        this.setState({ reportError: \"Content is empty\" });\n        return false;\n      } else {\n        this.setState({ reportError: null });\n        return true;\n      }\n    } else {\n      this.setState({ reportError: \"Email not valid\" });\n      return false;\n    }\n  };\n\n  //When clicking Send in report form\n  sendReport = (e) => {\n    e.preventDefault();\n    if (this.validateReportForm()) {\n      http(\n        \"POST\",\n        \"/login/report\",\n        {\n          email: this.state.reportEmail,\n          message: this.state.reportContent,\n        },\n        (res) => {\n          if (res.status == 200) {\n            alert(\"Report sent successfully\");\n          } else {\n            alert(res.data);\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    return (\n      <form>\n        {/* Configuring The reportModal */}\n        {configureDialogBox(\n          \"reportModal\",\n          \"Report an Issue\",\n          <>\n            <form>\n              <label className=\"black\" for=\"email\">\n                Enter your email:{\" \"}\n              </label>\n              <input\n                onChange={this.reportFormChange}\n                type=\"email\"\n                name=\"reportEmail\"\n                id=\"email\"\n                className=\"m-3\"\n                value={this.state.reportEmail}\n              ></input>\n              <br />\n\n              <label className=\"black\" for=\"content\">\n                Enter content:{\" \"}\n              </label>\n              <textarea\n                onChange={this.reportFormChange}\n                rows=\"10\"\n                name=\"reportContent\"\n                id=\"content\"\n                className=\"m-3\"\n              ></textarea>\n            </form>\n            {this.state.reportError ? <p>{this.state.reportError}</p> : null}\n          </>,\n          <>\n            <button className=\"btn btn-primary\" onClick={this.sendReport}>\n              Send\n            </button>\n          </>\n        )}\n\n        <div className=\"form-group\">\n          <label for=\"username\">Username</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"username\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.inputChange}\n            placeholder=\"Username\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label for=\"password\">Password</label>\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            id=\"password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.inputChange}\n            placeholder=\"Password\"\n          />\n        </div>\n        {this.state.erroMessage}\n        <div className=\"form-check\">\n          <input\n            type=\"checkbox\"\n            className=\"form-check-input\"\n            id=\"showPassword\"\n            name=\"showPassword\"\n            onClick={this.showPassword}\n          />\n          <label className=\"form-check-label\" for=\"showPassword\">\n            Show Password\n          </label>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-success\"\n            id=\"login-btn\"\n            onClick={this.login}\n          >\n            LOGIN\n          </button>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            id=\"google-login-btn\"\n            onClick={this.googleSignin}\n          >\n            SIGN IN WITH GOOGLE\n          </button>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <p style={{ \"margin-top\": \"8px\", color: \"white\" }}>\n            Need help?{\" \"}\n            <a\n              href=\"#\"\n              data-toggle=\"modal\"\n              data-target=\"#reportModal\"\n              style={{ color: \"white\" }}\n            >\n              Report\n            </a>\n          </p>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(Signin);\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/login/sigup/googleSignup/GoogleSignup.js",["291","292","293","294"],"import { Component } from \"react\";\nimport { withRouter, useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport \"./GoogleSignup.css\";\n\nimport Student from \"../student/student\";\nimport Teacher from \"../teacher/teacher\";\n\nimport http from \"../../../../shared/http\";\n\nconst mapStateToProps = (state) => {\n  return {\n    signupData: state.login.signupData,\n    validSignupData: state.login.validSignupData,\n  };\n};\n\nlet GOOGLE_DATA = {};\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accountType: \"student\",\n      googleData: {},\n    };\n  }\n\n  query = null;\n\n  selectAccountType = (event) => {\n    this.setState({ accountType: event.target.value });\n  };\n\n  finishSignup = () => {\n    console.log(this.props.signupData, GOOGLE_DATA);\n    http(\n      \"POST\",\n      \"/register/googlesignup\",\n      { ...this.props.signupData, ...GOOGLE_DATA },\n      (res) => {\n        if (res.status == 200) {\n          alert(\"Signup Completed\");\n          document.location.href = \"http://localhost:3000/signin\";\n        } else {\n          alert(res.data);\n        }\n      }\n    );\n  };\n\n  useQuery = () => {\n    let query = new URLSearchParams(this.props.location.search);\n    return query;\n  };\n\n  getGoogleData = () => {\n    this.query = this.useQuery();\n\n    if (this.query.get(\"name\")) GOOGLE_DATA.name = this.query.get(\"name\");\n    if (this.query.get(\"email\")) GOOGLE_DATA.email = this.query.get(\"email\");\n    if (this.query.get(\"id\")) GOOGLE_DATA.googleId = this.query.get(\"id\");\n  };\n\n  render() {\n    this.getGoogleData();\n    return (\n      <form>\n        <div className=\"form-group\">\n          <label for=\"account-type\">Select Account Type</label>\n          <br />\n          <select\n            className=\"form-select\"\n            aria-label=\"Default select example\"\n            id=\"account-type\"\n            onChange={this.selectAccountType}\n          >\n            <option value=\"student\" selected>\n              Student\n            </option>\n            <option value=\"teacher\">Teacher</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label>Enter your details</label>\n          {this.state.accountType == \"student\" ? (\n            <Student\n              google\n              data={{\n                name: GOOGLE_DATA.name,\n                email: GOOGLE_DATA.email,\n                id: GOOGLE_DATA.id,\n              }}\n            />\n          ) : null}\n          {this.state.accountType == \"teacher\" ? (\n            <Teacher\n              google\n              data={{\n                name: GOOGLE_DATA.name,\n                email: GOOGLE_DATA.email,\n                id: GOOGLE_DATA.id,\n              }}\n            />\n          ) : null}\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-success\"\n            id=\"login-btn\"\n            onClick={this.finishSignup}\n            disabled={!this.props.validSignupData}\n          >\n            FINISH\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(Signup));\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/config.js",[],"/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/teacher/TeacherProfile/TeacherProfile.js",["295","296"],"/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/teacher/newExam/NewExam.js",["297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317"],"/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/shared/parseCookie.js",[],"/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/Institutionstructure/Institutionstructure.js",["318"],"import React, { Component } from \"react\";\nimport Department from \"./Department\";\nimport ClassBatch from \"./ClassBatch\";\nimport Subject from \"./Subjects\";\n\nimport { Route, Switch, withRouter } from \"react-router-dom\";\n\nclass Institutionstructure extends Component {\n  //Change route to class\n  departmentSelected = (departmentId) => {\n    this.props.history.push(\n      \"/admin/institutionStructure/class/\" + departmentId\n    );\n  };\n\n  render() {\n    return (\n      <div style={{ width: \"100%\" }}>\n        <Switch>\n          <Route path=\"/admin/institutionstructure/\" exact>\n            <Department departmentSelected={this.departmentSelected} />\n          </Route>\n\n          <Route path=\"/admin/institutionstructure/class/:departmentId\" exact>\n            <ClassBatch />\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Institutionstructure);\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/Message/Messagelist.js",["319","320"],"import React from \"react\";\nimport Message from \"./Message\";\n\nimport http from \"../../../../shared/http\";\n\nclass Messagelist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      replayedMessages: [],\n    };\n  }\n\n  //Get messages form server\n  getMessages = () => {\n    http(\"GET\", \"/admin/messages\", {}, (res) => {\n      if (res.status == 200) {\n        let replayedMessages = [];\n        let messages = [];\n\n        //Setting replayed messages\n        for (let message of res.data) {\n          console.log(message);\n          if (message.reply && message.reply != \"\") {\n            //Replayed message\n            replayedMessages.push(message);\n          } else {\n            //message not replayed\n            messages.push(message);\n          }\n        }\n        this.setState({ messages, replayedMessages });\n      } else alert(res.data);\n    });\n  };\n\n  componentDidMount() {\n    this.getMessages();\n  }\n\n  render() {\n    let messages = this.state.messages.map((message) => {\n      return <Message message={message} />;\n    });\n\n    let replayed = this.state.replayedMessages.map((message) => {\n      return <Message message={message} replayed />;\n    });\n\n    return (\n      <>\n        <div>{messages}</div>\n        <div>{replayed}</div>\n      </>\n    );\n  }\n}\n\nexport default Messagelist;\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/UserManagment/UserMangamenet.js",[],"/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/Report/Report.js",[],"/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/Home/Home.js",["321","322","323"],"import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Row, Col, Form } from \"react-bootstrap\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nimport http from \"../../../../shared/http\";\n\nimport \"./Home.css\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  //Creating ref to the form input\n  password = React.createRef();\n  confirm = React.createRef();\n\n  changePassword = () => {\n    //Getting the form values\n    let passwordValue = this.password.current.value;\n    let confirmValue = this.confirm.current.value;\n\n    //Validating password\n    if (passwordValue != \"\" && confirmValue != \"\") {\n      if (passwordValue === confirmValue)\n        http(\n          \"POST\",\n          \"/admin/changepassword\",\n          { password: passwordValue },\n          (res) => {\n            if (res.status === 200) {\n              alert(\"Password changed successfully\");\n            } else {\n              alert(res.data);\n            }\n          }\n        );\n      else alert(\"Password does not match\");\n    } else {\n      alert(\"Please fill all data\");\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"container mt-5\">\n          <Jumbotron className=\"bg-secondary\" id=\"changePasswordDiv\">\n            <h1 className=\"text-light\">Change password</h1>\n            <Form>\n              <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                <Form.Label column>New Password</Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    ref={this.password}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                <Form.Label column>Confirm Password</Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Confirm\"\n                    ref={this.confirm}\n                  />\n                </Col>\n              </Form.Group>\n            </Form>\n\n            <p className=\"ml-2 text-right\">\n              <Button\n                className=\"ml-7\"\n                variant=\"primary\"\n                onClick={this.changePassword}\n              >\n                Save\n              </Button>\n            </p>\n          </Jumbotron>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/Message/Messagecontent.js",[],"/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/VerifyAccounts/VerifyAccounts.js",["324","325","326","327"],"import React, { Component } from \"react\";\nimport ListItem from \"../../../ui-elements/ListItem/ListItem\";\nimport { Button, Row, Col, Form } from \"react-bootstrap\";\n\nimport http from \"../../../../shared/http\";\nexport default class VerifyAccounts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userData: [],\n    };\n  }\n\n  //Get users data from the server\n  getUserData = () => {\n    http(\"GET\", \"/admin/verifyaccount\", null, (res) => {\n      if (res.status == 200) {\n        this.setState({ userData: res.data });\n      } else {\n        alert(\"Users data return failed\");\n      }\n    });\n  };\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  acceptUser = (item) => {\n    let confirmation = window.confirm(\"Are you sure you want to accept?\");\n\n    if (confirmation) {\n      http(\n        \"POST\",\n        \"/admin/verifyaccount/accept\",\n        { userId: item.id },\n        (res) => {\n          if (res.status == 200) {\n            alert(\"Account Verified Successfully\");\n            document.getElementById(item.id).style.display = \"none\";\n          } else {\n            alert(\"Error during account verification\");\n          }\n        }\n      );\n    }\n  };\n\n  rejectUser = (item) => {\n    let confirmation = window.confirm(\"Are you sure you want to reject?\");\n\n    if (confirmation) {\n      http(\n        \"POST\",\n        \"/admin/verifyaccount/reject\",\n        { userId: item.id },\n        (res) => {\n          if (res.status == 200) {\n            alert(\"Account Rejected Successfully\");\n            document.getElementById(item.id).style.display = \"none\";\n          } else {\n            alert(\"Error during account rejection\");\n          }\n        }\n      );\n    }\n  };\n\n  getTeacherList = () => {\n    let teachers = this.state.userData.map((item) => {\n      return (\n        <div className=\" mt-1 \" id={item.id}>\n          <ListItem height=\"180px\">\n            {{\n              left: (\n                <div>\n                  <span>\n                    <Row>\n                      <Col>\n                        <p class=\"text-left\">Name: {item.name}</p>\n                      </Col>\n                    </Row>\n                    <p class=\"text-left\">Email: {item.email}</p>\n                    <p class=\"text-left\">Department: {item.department}</p>\n                  </span>{\" \"}\n                  <Col className=\"text-left\">\n                    <Button\n                      type=\"submit\"\n                      className=\" mr-3 btn btn-danger\"\n                      onClick={() => this.rejectUser(item)}\n                    >\n                      Reject\n                    </Button>\n                  </Col>\n                </div>\n              ),\n              right: (\n                <div>\n                  <p class=\"text-right\">\n                    RegisterNumber: {item.registerNumber}\n                  </p>\n                  <br />\n                  <br />\n                  <br />\n                  <Button\n                    type=\"submit\"\n                    className=\" mr-3 btn btn-success\"\n                    onClick={() => this.acceptUser(item)}\n                  >\n                    Accept\n                  </Button>\n                </div>\n              ),\n            }}\n          </ListItem>\n        </div>\n      );\n    });\n\n    return teachers;\n  };\n\n  render() {\n    return <>{this.getTeacherList()}</>;\n  }\n}\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/shared/dailogBox.js",[],"/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/login/sigup/student/student.js",["328","329"],"import { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport http from \"../../../../shared/http\";\n\nimport \"./student.css\";\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateData: (payload) => dispatch({ type: \"updateSignupData\", payload }),\n    clearData: () => dispatch({ type: \"clearSignupData\" }),\n  };\n};\nclass Student extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      parentEmailError: null,\n      emailError: null,\n      classList: null,\n      classOptions: null,\n      batchOptions: null,\n    };\n  }\n\n  inputValues = {};\n\n  validateEmail = (email) => {\n    if (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  validateForm = () => {\n    if (\n      this.inputValues.name &&\n      this.inputValues.registerNumber &&\n      this.inputValues.class &&\n      this.inputValues.batch &&\n      this.inputValues.email &&\n      this.inputValues.parentEmail\n    ) {\n      this.setState({ error: null });\n      if (this.validateEmail(this.inputValues.email)) {\n        this.setState({ emailError: null });\n      } else {\n        this.setState({ emailError: <p>Enter a valid email address</p> });\n      }\n\n      if (this.validateEmail(this.inputValues.parentEmail)) {\n        this.setState({ parentEmailError: null });\n      } else {\n        this.setState({ parentEmailError: <p>Enter a valid email address</p> });\n      }\n\n      if (\n        this.validateEmail(this.inputValues.email) &&\n        this.validateEmail(this.inputValues.parentEmail)\n      ) {\n        //Successful validation\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      this.setState({\n        error: <p style={{ color: \"black\" }}>PLEASE FILL ALL DATA</p>,\n      });\n      return false;\n    }\n  };\n\n  onValueChange = (event) => {\n    this.inputValues[event.target.name] = event.target.value;\n    let valid = this.validateForm();\n\n    if (valid) {\n      this.props.updateData({ accountType: \"student\", ...this.inputValues });\n    } else {\n      this.props.clearData();\n    }\n\n    if (event.target.name == \"class\") {\n      //Setup batch details based on the selected class\n      this.setupBatchOptions();\n    }\n  };\n\n  setView = () => {\n    if (this.props.google) {\n      document\n        .getElementById(\"email\")\n        .setAttribute(\"value\", this.props.data.email);\n      document\n        .getElementById(\"name\")\n        .setAttribute(\"value\", this.props.data.name);\n\n      document.getElementById(\"email\").setAttribute(\"disabled\", \"true\");\n      document.getElementById(\"name\").setAttribute(\"disabled\", \"true\");\n    }\n  };\n\n  //Get Class data from the database\n  getClasses = () => {\n    http(\"GET\", \"/login/getclasses\", {}, (res) => {\n      if (res.status == 200) {\n        this.setState({ classList: res.data });\n        this.setupClassOptions();\n      }\n    });\n  };\n\n  //Setup the options for the <select> for classes\n  setupClassOptions = () => {\n    //Options JSX\n    let options = [];\n\n    options = Object.keys(this.state.classList).map((key, array) => {\n      return (\n        <>\n          <option value={key}>{key}</option>\n        </>\n      );\n    });\n\n    //Setting class list options to display\n    this.setState({ classOptions: options });\n  };\n\n  //Setup the options for the <select> for batches based on the selected Class\n  setupBatchOptions = () => {\n    //Currently selected class\n    let Class = this.inputValues.class;\n\n    //Getting batches of the selected class\n    let batches = this.state.classList[Class].batches;\n\n    let options = batches.map((batch, index, array) => {\n      return (\n        <>\n          <option value={batch}>{batch}</option>\n        </>\n      );\n    });\n\n    //Setting options as state to diaplay it in screen\n    this.setState({ batchOptions: options });\n  };\n\n  componentDidMount() {\n    this.props.clearData();\n    this.setView();\n\n    //Get class info\n    this.getClasses();\n  }\n\n  render() {\n    if (this.props.google) {\n      this.inputValues.name = this.props.data.name;\n      this.inputValues.email = this.props.data.email;\n    }\n\n    return (\n      <div>\n        {this.state.error}\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"name\"\n          name=\"name\"\n          placeholder=\"Name\"\n          onChange={this.onValueChange}\n        />\n        <input\n          type=\"text\"\n          className=\"form-control mt-3\"\n          id=\"admission-number\"\n          name=\"registerNumber\"\n          placeholder=\"Admission Number\"\n          onChange={this.onValueChange}\n        />\n        <select\n          className=\"form-select mt-3\"\n          aria-label=\"Default select example\"\n          id=\"class\"\n          name=\"class\"\n          onChange={this.onValueChange}\n        >\n          <option value=\"\" selected>\n            --CLASS--\n          </option>\n          {this.state.classOptions}\n        </select>\n        <select\n          className=\"form-select mt-3\"\n          aria-label=\"Default select example\"\n          id=\"batch\"\n          onChange={this.onValueChange}\n          name=\"batch\"\n        >\n          <option value=\"\" selected>\n            --BATCH--\n          </option>\n          {this.state.batchOptions}\n        </select>\n        <input\n          type=\"email\"\n          className=\"form-control mt-3\"\n          id=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          onChange={this.onValueChange}\n        />\n        {this.state.emailError}\n        <input\n          type=\"email\"\n          className=\"form-control mt-3\"\n          id=\"parent-email\"\n          name=\"parentEmail\"\n          placeholder=\"Parent Email\"\n          onChange={this.onValueChange}\n        />\n        {this.state.parentEmailError}\n      </div>\n    );\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Student);\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/login/sigup/teacher/teacher.js",["330"],"import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport http from \"../../../../shared/http\";\n\nimport \"./teacher.css\";\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateData: (payload) => dispatch({ type: \"updateSignupData\", payload }),\n    clearData: () => dispatch({ type: \"clearSignupData\" }),\n  };\n};\nclass Teacher extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      emailValidation: null,\n      departmentList: null,\n      departments: null,\n    };\n  }\n\n  inputValues = {};\n\n  validateForm = () => {\n    if (\n      this.inputValues.name &&\n      this.inputValues.registerNumber &&\n      this.inputValues.department &&\n      this.inputValues.email\n    ) {\n      this.setState({ error: null });\n      if (\n        /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(this.inputValues.email)\n      ) {\n        this.setState({ emailValidation: null });\n\n        //Successful validation\n        return true;\n      } else {\n        this.setState({ emailValidation: <p>Enter a valid email address</p> });\n        return false;\n      }\n    } else {\n      this.setState({\n        error: <p style={{ color: \"black\" }}>PLEASE FILL ALL DATA</p>,\n      });\n      return false;\n    }\n  };\n\n  onValueChange = (event) => {\n    this.inputValues[event.target.name] = event.target.value;\n    let valid = this.validateForm();\n\n    if (valid) {\n      this.props.updateData({ accountType: \"teacher\", ...this.inputValues });\n    } else {\n      this.props.clearData();\n    }\n  };\n\n  setView = () => {\n    if (this.props.google) {\n      document\n        .getElementById(\"email\")\n        .setAttribute(\"value\", this.props.data.email);\n      document\n        .getElementById(\"name\")\n        .setAttribute(\"value\", this.props.data.name);\n\n      document.getElementById(\"email\").setAttribute(\"disabled\", \"true\");\n      document.getElementById(\"name\").setAttribute(\"disabled\", \"true\");\n    }\n  };\n\n  //Get department details from db\n  getDepartmentList = () => {\n    http(\"GET\", \"/login/departments\", null, (res) => {\n      if (res.status == 200) {\n        this.setState({ departments: res.data });\n        this.setupDepartmentList();\n      } else {\n        alert(\"Error returning department list\");\n      }\n    });\n  };\n\n  //Setup JSX element to show the department list using <option> tag\n  setupDepartmentList = () => {\n    let departmentList = this.state.departments.map(\n      (department, index, array) => {\n        return <option value={department._id}>{department.name}</option>;\n      }\n    );\n\n    this.setState({ departmentList });\n  };\n\n  componentDidMount() {\n    this.props.clearData();\n    this.setView();\n    this.getDepartmentList();\n  }\n\n  render() {\n    if (this.props.google) {\n      this.inputValues.name = this.props.data.name;\n      this.inputValues.email = this.props.data.email;\n    }\n\n    return (\n      <div>\n        {this.state.error}\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"name\"\n          placeholder=\"Name\"\n          name=\"name\"\n          onChange={this.onValueChange}\n        />\n        <input\n          type=\"text\"\n          className=\"form-control mt-3\"\n          id=\"id-number\"\n          name=\"registerNumber\"\n          onChange={this.onValueChange}\n          placeholder=\"ID Number\"\n        />\n        <select\n          className=\"form-select mt-3\"\n          aria-label=\"Default select example\"\n          name=\"department\"\n          onChange={this.onValueChange}\n          id=\"department\"\n        >\n          <option selected value=\"\">\n            --SELECT DEPARTMENT--\n          </option>\n          {this.state.departmentList}\n        </select>\n        <input\n          type=\"email\"\n          className=\"form-control mt-3\"\n          id=\"email\"\n          name=\"email\"\n          onChange={this.onValueChange}\n          placeholder=\"Email\"\n        />\n        {this.state.emailValidation}\n      </div>\n    );\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Teacher);\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/teacher/Question/Question.js",["331","332","333","334"],"import React, { Component } from \"react\";\nimport Mcq from \"./Mcq/Mcq\";\nimport \"./Question.css\";\nimport Text from \"./Text/Text\";\nimport Short from \"./Short/Short\";\nimport Essay from \"./Essay/Essay\";\n\nexport default class Question extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      component: null,\n    };\n  }\n\n  componentDidMount() {\n    //Selecting question type\n    if (this.props.question.type == \"text\") {\n      this.setState({ component: <Text question={this.props.question} /> });\n    } else if (this.props.question.type == \"mcq\") {\n      this.setState({\n        component: (\n          <Mcq question={this.props.question} index={this.props.index} />\n        ),\n      });\n    } else if (this.props.question.type == \"short\") {\n      this.setState({\n        component: (\n          <Short question={this.props.question} index={this.props.index} />\n        ),\n      });\n    } else if (this.props.question.type == \"essay\") {\n      this.setState({\n        component: (\n          <Essay question={this.props.question} index={this.props.index} />\n        ),\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div\n        id={this.props.question.id}\n        onClick={this.props.click}\n        className=\"question list-group-item list-group-item-action\"\n        data-toggle=\"list\"\n      >\n        {this.state.component}\n      </div>\n    );\n  }\n}\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/Message/Message.js",[],"/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/Institutionstructure/Subjects.js",[],"/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/Institutionstructure/ClassBatch.js",["335","336","337","338","339","340","341","342"],"import React, { Component } from \"react\";\nimport { Button, Row, Form, Col, Modal } from \"react-bootstrap\";\n\nimport { FaMinus, FaPencilAlt, FaPlus } from \"react-icons/fa\";\nimport ListItem from \"../../../ui-elements/ListItem/ListItem\";\nimport configureDialogBox from \"../../../../shared/dailogBox\";\nimport { withRouter } from \"react-router-dom\";\n\nimport http from \"../../../../shared/http\";\n\nclass ClassBatch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { classList: null };\n  }\n\n  //Global member variables\n  classToEdit = \"\";\n\n  //Creating necessary ref objects\n  newClassName = React.createRef();\n  newBatchName = React.createRef();\n  classNewName = React.createRef(); //for editing class name\n  batchNewName = React.createRef();\n\n  getClasses = () => {\n    //getting class data from db\n    http(\n      \"POST\",\n      \"/admin/institutionstructure/class\",\n      { department: this.props.match.params.departmentId },\n      async (res) => {\n        let classes = [...res.data];\n\n        //This will return options for the <select> to select HOD for each department\n        let getTeacherOptions = (cls) => {\n          //Get teachers in department options\n          let teacherOptions = [];\n          if (cls.teachers) {\n            teacherOptions = cls.teachers.map((teacher, index, array) => {\n              return <option value={teacher._id}>{teacher.name}</option>;\n            });\n          }\n\n          return (\n            <>\n              {/* //Setting Mentor option */}\n              {cls.assignedMentor ? (\n                <option value={cls.assignedMentor._id} selected>\n                  {cls.assignedMentor.name}\n                </option>\n              ) : (\n                <option selected>NO MENTOR</option>\n              )}\n              {teacherOptions}\n            </>\n          );\n        };\n\n        let classList = classes.map((Class, index) => {\n          // let Class = classes[key];\n\n          return (\n            <ListItem height=\"120px\">\n              {{\n                left: (\n                  <div className=\"p-1 \">\n                    <Form className=\"md-6\">\n                      <Form.Group controlId=\"formBasicCheckbox\">\n                        <Row>\n                          <Col>\n                            <Form.Label className=\"text-dark\">\n                              {Class.name}\n                            </Form.Label>\n                          </Col>\n                        </Row>\n                        <Row>\n                          <Col>\n                            <Form.Label className=\"text-dark\">\n                              {Class.batch}\n                            </Form.Label>\n                          </Col>\n                        </Row>\n                        <Row>\n                          <Col>\n                            <Form.Label className=\"text-dark\">\n                              Mentor:\n                            </Form.Label>\n                          </Col>\n                          <Col>\n                            <Form.Control\n                              as=\"select\"\n                              defaultValue=\"Class Mentor\"\n                              placeholder=\"Class Mentor\"\n                              style={{ width: \"200px\" }}\n                              onChange={(event) => {\n                                this.changeMentor(event, Class.id);\n                              }}\n                            >\n                              {getTeacherOptions(Class)}\n                            </Form.Control>\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                    </Form>\n                  </div>\n                ),\n                right: (\n                  <div>\n                    <Button\n                      className=\"mr-4 btn btn-danger\"\n                      onClick={() => {\n                        this.removeClass(Class.id);\n                      }}\n                    >\n                      <FaMinus />\n                    </Button>\n\n                    <a\n                      href=\"#\"\n                      data-toggle=\"modal\"\n                      data-target=\"#editclass\"\n                      style={{ color: \"white\" }}\n                    >\n                      <Button\n                        className=\"btn btn-secondary\"\n                        onClick={() => {\n                          this.setEditingClass(Class.id);\n                        }}\n                      >\n                        <FaPencilAlt />\n                      </Button>{\" \"}\n                    </a>\n                  </div>\n                ),\n              }}\n            </ListItem>\n          );\n        });\n        this.setState({ classList });\n      }\n    );\n  };\n\n  //To add a new class\n  addClass = () => {\n    let className = this.newClassName.current.value;\n    let batchName = this.newBatchName.current.value;\n\n    if (className == \"\" || batchName == \"\") {\n      alert(\"Please fill all data\");\n    } else {\n      http(\n        \"POST\",\n        \"/admin/institutionstructure/class/add\",\n        {\n          className,\n          batchName,\n          department: this.props.match.params.departmentId,\n        },\n        (res) => {\n          if (res.status == 200) {\n            alert(\"Class addedd successfully\");\n          } else {\n            alert(res.data);\n          }\n        }\n      );\n    }\n  };\n\n  setEditingClass = (classId) => {\n    this.classToEdit = classId;\n  };\n\n  //Edit an existing class\n  editClass = () => {\n    let newName = this.classNewName.current.value; //Getting new name\n    let newBatch = this.batchNewName.current.value;\n\n    if (newName == \"\" || newBatch == \"\") {\n      alert(\"Please enter all data\");\n    } else {\n      http(\n        \"POST\",\n        \"/admin/institutionstructure/class/edit\",\n        { classId: this.classToEdit, newName, newBatch },\n        (res) => {\n          alert(res.data);\n        }\n      );\n    }\n  };\n\n  //Remove a class\n  removeClass = (classId) => {\n    http(\n      \"POST\",\n      \"/admin/institutionstructure/class/remove\",\n      { classId },\n      (res) => {\n        alert(res.data);\n      }\n    );\n  };\n\n  //Change Mentor of a department\n  changeMentor = (event, classId) => {\n    http(\n      \"POST\",\n      \"/admin/institutionstructure/class/changementor\",\n      {\n        classId,\n        mentor: event.target.value,\n      },\n      (res) => {\n        alert(res.data);\n      }\n    );\n  };\n\n  componentDidMount() {\n    this.getClasses();\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          {/* Configuring The add department */}\n          {configureDialogBox(\n            \"addclass\",\n            \"ADD CLASS\",\n            <>\n              <form>\n                <label className=\"black\" for=\"class\">\n                  Class Name:{\" \"}\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"class\"\n                  id=\"class\"\n                  ref={this.newClassName}\n                ></input>\n                <label className=\"black\" for=\"batch\">\n                  Batch:{\" \"}\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"batch\"\n                  id=\"batch\"\n                  ref={this.newBatchName}\n                ></input>\n              </form>\n            </>,\n            <>\n              <button className=\"btn btn-primary\" onClick={this.addClass}>\n                OK\n              </button>\n            </>\n          )}\n          {/* Configuring The edit class */}\n          {configureDialogBox(\n            \"editclass\",\n            \"EDIT CLASS\",\n            <>\n              <form>\n                <label className=\"black\" for=\"className\">\n                  Class Name:{\" \"}\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"className\"\n                  id=\"className\"\n                  ref={this.classNewName}\n                ></input>\n                <label className=\"black\" for=\"batch\">\n                  Batch:{\" \"}\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"batch\"\n                  id=\"batch\"\n                  ref={this.batchNewName}\n                ></input>\n              </form>\n            </>,\n            <>\n              <button className=\"btn btn-primary\" onClick={this.editClass}>\n                EDIT\n              </button>\n            </>\n          )}\n        </div>\n        {this.state.classList}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ClassBatch);\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/Institutionstructure/Department.js",["343","344","345","346","347","348"],"import React from \"react\";\nimport { Button, Form, Col, Row } from \"react-bootstrap\";\nimport { FaMinus, FaPencilAlt } from \"react-icons/fa\";\nimport ListItem from \"../../../ui-elements/ListItem/ListItem\";\nimport configureDialogBox from \"../../../../shared/dailogBox\";\nimport \"./Department.css\";\nimport http from \"../../../../shared/http\";\nimport $ from \"jquery\";\n\nclass Departments extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      departmentList: null,\n    };\n  }\n\n  //Global member variables\n  departmentToEdit = \"\";\n\n  //Creating necessary ref objects\n  newDepartmentName = React.createRef();\n  departmentNewName = React.createRef(); //for editing department name\n\n  getDepartments = () => {\n    //getting department data from db\n    http(\"GET\", \"/admin/institutionstructure/department\", {}, async (res) => {\n      let departments = { ...res.data };\n\n      //This will return options for the <select> to select HOD for each department\n      let getHodOptions = (department) => {\n        //Get teachers in department options\n        let teacherOptions = [];\n        if (department.teachers) {\n          teacherOptions = department.teachers.map((teacher, index, array) => {\n            return <option value={teacher._id}>{teacher.name}</option>;\n          });\n        }\n\n        return (\n          <>\n            {/* //Setting HOD option */}\n            {department.assignedHod ? (\n              <option value={department.assignedHod._id} selected>\n                {department.assignedHod.name}\n              </option>\n            ) : (\n              <option selected>NO HOD</option>\n            )}\n            {teacherOptions}\n          </>\n        );\n      };\n\n      let departmentList = Object.keys(departments).map((key, index) => {\n        let department = departments[key];\n\n        return (\n          <div\n            onClick={(event) => {\n              if (event.target.id == \"list-item-container\")\n                this.props.departmentSelected(department.id);\n            }}\n          >\n            <ListItem height=\"90px\">\n              {{\n                left: (\n                  <Form className=\"md-6\">\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                      <Row>\n                        <Col>\n                          <Form.Label className=\"text-dark\">{key}</Form.Label>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col>\n                          <Form.Label className=\"text-dark\">\n                            Head of the department:\n                          </Form.Label>\n                        </Col>\n                        <Col>\n                          <Form.Control\n                            as=\"select\"\n                            defaultValue=\"Department\"\n                            placeholder=\"Department\"\n                            style={{ width: \"200px\" }}\n                            onChange={(e) => {\n                              this.changeHod(e, department.id);\n                            }}\n                          >\n                            {getHodOptions(department)}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </Form.Group>\n                  </Form>\n                ),\n                right: (\n                  <div>\n                    <Button\n                      className=\"btn btn-danger mr-3\"\n                      data-id={department.id}\n                      onClick={() => {\n                        this.removeDepartment(department.id);\n                      }}\n                    >\n                      <FaMinus />\n                    </Button>\n                    <a\n                      href=\"#\"\n                      data-toggle=\"modal\"\n                      data-target=\"#editdept\"\n                      style={{ color: \"white\" }}\n                    >\n                      <Button\n                        className=\"btn btn-secondary\"\n                        data-id={department.id}\n                        onClick={() => {\n                          this.setEditingDepartment(department.id);\n                        }}\n                      >\n                        <FaPencilAlt />\n                      </Button>\n                    </a>\n                  </div>\n                ),\n              }}\n            </ListItem>\n          </div>\n        );\n      });\n      this.setState({ departmentList });\n    });\n  };\n\n  //To add a new department\n  addDepartment = () => {\n    let departmentName = this.newDepartmentName.current.value;\n\n    if (departmentName == \"\") {\n      alert(\"Please fill department name\");\n    } else {\n      http(\n        \"POST\",\n        \"/admin/institutionstructure/department/add\",\n        { departmentName },\n        (res) => {\n          if (res.status == 200) {\n            alert(\"Department addedd successfully\");\n          } else {\n            alert(res.data);\n          }\n        }\n      );\n    }\n  };\n\n  setEditingDepartment = (departmentID) => {\n    this.departmentToEdit = departmentID;\n  };\n\n  //Edit an existing department\n  editDepartment = () => {\n    let newName = this.departmentNewName.current.value; //Getting new name\n\n    if (newName == \"\") {\n      alert(\"Please enter a new name for the department\");\n    } else {\n      http(\n        \"POST\",\n        \"/admin/institutionstructure/department/edit\",\n        { departmentId: this.departmentToEdit, newName },\n        (res) => {\n          alert(res.data);\n        }\n      );\n    }\n  };\n\n  //Remove a department\n  removeDepartment = (departmentId) => {\n    http(\n      \"POST\",\n      \"/admin/institutionstructure/department/remove\",\n      { departmentId },\n      (res) => {\n        alert(res.data);\n      }\n    );\n  };\n\n  //Change HOD of a department\n  changeHod = (event, departmentId) => {\n    http(\n      \"POST\",\n      \"/admin/institutionstructure/department/changehod\",\n      {\n        departmentId,\n        hod: event.target.value,\n      },\n      (res) => {\n        alert(res.data);\n      }\n    );\n  };\n\n  componentDidMount() {\n    //get department data from server\n    this.getDepartments();\n  }\n\n  render() {\n    return (\n      <div id=\"departmentList\">\n        <div>\n          {/* Configuring The add department */}\n          {configureDialogBox(\n            \"adddept\",\n            \"ADD DEPARTMENT\",\n            <>\n              <label className=\"black\" for=\"dept\">\n                Name of department:{\" \"}\n              </label>\n              <input\n                type=\"text\"\n                name=\"dept\"\n                id=\"dept\"\n                ref={this.newDepartmentName}\n              ></input>\n            </>,\n            <>\n              <button className=\"btn btn-primary\" onClick={this.addDepartment}>\n                ADD\n              </button>\n            </>\n          )}\n          {/* Configuring The edit department */}\n          {configureDialogBox(\n            \"editdept\",\n            \"EDIT DEPARTMENT\",\n            <>\n              <form>\n                <label className=\"black\" for=\"dept\">\n                  Name of department:{\" \"}\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"dept\"\n                  id=\"dept\"\n                  ref={this.departmentNewName}\n                ></input>\n                <br />\n              </form>\n            </>,\n            <>\n              <button className=\"btn btn-primary\" onClick={this.editDepartment}>\n                OK\n              </button>\n            </>\n          )}\n        </div>\n\n        {this.state.departmentList}\n      </div>\n    );\n  }\n}\n\nexport default Departments;\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/UserManagment/Students.js",["349","350","351","352","353","354","355"],"import React, { Component } from \"react\";\nimport ListItem from \"../../../ui-elements/ListItem/ListItem\";\nimport { Button } from \"react-bootstrap\";\nimport http from \"../../../../shared/http\";\nimport $ from \"jquery\";\nimport Search from \"../../../ui-elements/Search/Search\";\n\nexport default class Students extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userData: [],\n    };\n  }\n\n  //Delete a user account\n  deleteClickListener = (item) => {\n    let confirmation = window.confirm(\"Are you sure to want to delete?\");\n\n    if (confirmation) {\n      http(\n        \"POST\",\n        \"/admin/usermanagement/delete\",\n        { userId: item.id },\n        (res) => {\n          if (res.status == 200) {\n            alert(\"Student account deleted successfully\");\n\n            document.getElementById(item.id).style.display = \"none\";\n          } else {\n            alert(res.data);\n          }\n        }\n      );\n    }\n  };\n\n  //Disable / Enable account\n  disableClickListener = (event, item) => {\n    if (event.target.value == \"Disable\") {\n      let confirmation = window.confirm(\"Are sure to Disable account?\");\n\n      if (confirmation) {\n        http(\n          \"POST\",\n          \"/admin/usermanagement/disable\",\n          { userId: item.id },\n          (res) => {\n            if (res.status == 200) {\n              alert(\"Student Account disabled Successfully\");\n              this.changeToEnable(item);\n            } else {\n              alert(res.data);\n            }\n          }\n        );\n      }\n    } else {\n      let confirmation = window.confirm(\"Are you sure to Enable account?\");\n\n      if (confirmation) {\n        http(\n          \"POST\",\n          \"/admin/usermanagement/enable\",\n          { userId: item.id },\n          (res) => {\n            if (res.status == 200) {\n              alert(\"Student Account enabled Successfully\");\n              this.changeToDisable(item);\n            } else {\n              alert(res.data);\n            }\n          }\n        );\n      }\n    }\n  };\n\n  //Change style of button\n  changeToDisable = (student) => {\n    let button = $(\"#\" + student.id + \" input[name='changestatus']\");\n    button.attr(\"value\", \"Disable\");\n    button.removeClass(\"btn-success\");\n    button.addClass(\"btn-warning\");\n  };\n\n  changeToEnable = (student) => {\n    let button = $(\"#\" + student.id + \" input[name='changestatus']\");\n    button.attr(\"value\", \"Enable\");\n    button.removeClass(\"btn-warning\");\n    button.addClass(\"btn-success\");\n  };\n\n  getStudentList = () => {\n    let students = this.state.userData.map((item) => {\n      console.log(item);\n      return (\n        <div className=\"mt-1\" id={item.id}>\n          <ListItem height=\"180px\">\n            {{\n              left: (\n                <div>\n                  <p>Name: {item.name}</p>\n\n                  <p>Email: {item.email}</p>\n                  <p>Parent Email: {item.parentEmail}</p>\n                  <p>Register Number: {item.registerNumber}</p>\n\n                  <Button\n                    type=\"submit\"\n                    className=\" mr-3 btn btn-danger\"\n                    onClick={() => this.deleteClickListener(item)}\n                  >\n                    Delete\n                  </Button>\n                </div>\n              ),\n              right: (\n                <div class=\"text-right\">\n                  <p>Class: {item.class}</p>\n                  <p>Batch: {item.batch}</p>\n                  <br />\n                  <br />\n                  <input\n                    type=\"button\"\n                    className={\n                      item.accountStatus == \"disabled\"\n                        ? \"mr-3 btn btn-success\"\n                        : \"mr-3 btn btn-warning\"\n                    }\n                    onClick={(event) => this.disableClickListener(event, item)}\n                    value={\n                      item.accountStatus == \"disabled\" ? \"Enable\" : \"Disable\"\n                    }\n                  ></input>\n                </div>\n              ),\n            }}\n          </ListItem>\n        </div>\n      );\n    });\n    return students;\n  };\n\n  getUserData = () => {\n    http(\"GET\", \"/admin/usermanagement/student\", null, (res) => {\n      if (res.status == 200) {\n        this.setState({ userData: res.data });\n      } else {\n        alert(\"Error during fetching student data from server\");\n      }\n    });\n  };\n\n  //Search\n  search = (searchText) => {\n    if (searchText) {\n      http(\n        \"POST\",\n        \"/admin/usermanagement/student/search\",\n        { searchString: searchText },\n        (res) => {\n          this.setState({ userData: res.data });\n        }\n      );\n    } else {\n      //Return all users without filtering\n      this.getUserData();\n    }\n  };\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  render() {\n    return (\n      <>\n        <Search click={this.search} />\n        {this.getStudentList()}\n      </>\n    );\n  }\n}\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/admin/pages/UserManagment/Teachers.js",["356","357","358","359","360","361","362"],"import React, { Component } from \"react\";\nimport ListItem from \"../../../ui-elements/ListItem/ListItem\";\nimport { Button } from \"react-bootstrap\";\nimport http from \"../../../../shared/http\";\nimport $ from \"jquery\";\nimport Search from \"../../../ui-elements/Search/Search\";\n\nexport default class Teachers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userData: [],\n    };\n  }\n\n  //Delete a user account\n  deleteClickListener = (item) => {\n    let confirmation = window.confirm(\"Are you sure to want to delete?\");\n\n    if (confirmation) {\n      http(\n        \"POST\",\n        \"/admin/usermanagement/delete\",\n        { userId: item.id },\n        (res) => {\n          if (res.status == 200) {\n            alert(\"Teacher account deleted successfully\");\n\n            document.getElementById(item.id).style.display = \"none\";\n          } else {\n            alert(res.data);\n          }\n        }\n      );\n    }\n  };\n\n  //Disable / Enable account\n  disableClickListener = (event, item) => {\n    if (event.target.value == \"Disable\") {\n      let confirmation = window.confirm(\"Are sure to Disable account?\");\n\n      if (confirmation) {\n        http(\n          \"POST\",\n          \"/admin/usermanagement/disable\",\n          { userId: item.id },\n          (res) => {\n            if (res.status == 200) {\n              alert(\"Teacher Account disabled Successfully\");\n              this.changeToEnable(item);\n            } else {\n              alert(res.data);\n            }\n          }\n        );\n      }\n    } else {\n      let confirmation = window.confirm(\"Are you sure to Enable account?\");\n\n      if (confirmation) {\n        http(\n          \"POST\",\n          \"/admin/usermanagement/enable\",\n          { userId: item.id },\n          (res) => {\n            if (res.status == 200) {\n              alert(\"Teacher Account enabled Successfully\");\n              this.changeToDisable(item);\n            } else {\n              alert(res.data);\n            }\n          }\n        );\n      }\n    }\n  };\n\n  //Change style of button\n  changeToDisable = (teacher) => {\n    let button = $(\"#\" + teacher.id + \" input[name='changestatus']\");\n    button.attr(\"value\", \"Disable\");\n    button.removeClass(\"btn-success\");\n    button.addClass(\"btn-warning\");\n  };\n\n  changeToEnable = (teacher) => {\n    let button = $(\"#\" + teacher.id + \" input[name='changestatus']\");\n    button.attr(\"value\", \"Enable\");\n    button.removeClass(\"btn-warning\");\n    button.addClass(\"btn-success\");\n  };\n\n  //Return jsx to render the list of teachers\n  getTeacherList = () => {\n    let teachers = this.state.userData.map((item) => {\n      return (\n        <div className=\" mt-1 \" id={item.id}>\n          <ListItem height=\"180px\">\n            {{\n              left: (\n                <div>\n                  <span>\n                    <p class=\"text-left\">Name: {item.name}</p>\n\n                    <p class=\"text-left\">Email: {item.email}</p>\n                    <p class=\"text-left\">Department: {item.department}</p>\n                  </span>{\" \"}\n                  <Button\n                    type=\"submit\"\n                    className=\" mr-3 btn btn-danger\"\n                    onClick={() => this.deleteClickListener(item)}\n                  >\n                    Delete\n                  </Button>\n                </div>\n              ),\n              right: (\n                <div class=\"text-right\">\n                  <p class=\"text-right\">\n                    Register Number: {item.registerNumber}\n                  </p>\n                  <br />\n                  <br />\n                  <br />\n                  <input\n                    type=\"button\"\n                    name=\"changestatus\"\n                    className={\n                      item.accountStatus == \"disabled\"\n                        ? \"mr-3 btn btn-success\"\n                        : \"mr-3 btn btn-warning\"\n                    }\n                    onClick={(event) => this.disableClickListener(event, item)}\n                    value={\n                      item.accountStatus == \"disabled\" ? \"Enable\" : \"Disable\"\n                    }\n                  ></input>\n                </div>\n              ),\n            }}\n          </ListItem>\n        </div>\n      );\n    });\n\n    return teachers;\n  };\n\n  //Get teacher user info from server\n  getUserData = () => {\n    http(\"GET\", \"/admin/usermanagement/teacher\", null, (res) => {\n      if (res.status == 200) {\n        this.setState({ userData: res.data });\n      } else {\n        alert(\"Error during fetching teacher data from server\");\n      }\n    });\n  };\n\n  //Search\n  search = (searchText) => {\n    if (searchText) {\n      http(\n        \"POST\",\n        \"/admin/usermanagement/teacher/search\",\n        { searchString: searchText },\n        (res) => {\n          this.setState({ userData: res.data });\n        }\n      );\n    } else {\n      //Return all users without filtering\n      this.getUserData();\n    }\n  };\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  render() {\n    return (\n      <>\n        <Search click={this.search} />\n        {this.getTeacherList()}\n      </>\n    );\n  }\n}\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/teacher/Question/Essay/Essay.js",["363","364"],"import React, { Component } from \"react\";\nimport \"./Essay.css\";\n\nexport default class Essay extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"text-right\">{this.props.question.marks} Mark(s)</div>\n        {this.props.index ? this.props.index + \". \" : null}\n        {this.props.question.question}\n\n        {this.props.question.canvas ? (\n          <div className=\"questionCanvas\">\n            <img src={this.props.question.canvas}></img>\n          </div>\n        ) : null}\n\n        {this.props.question.image ? (\n          <div className=\"questionImage\">\n            <img src={this.props.question.image}></img>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/teacher/Question/Short/Short.js",["365","366"],"import React, { Component } from \"react\";\nimport \"./Short.css\";\n\nexport default class Short extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"text-right\">{this.props.question.marks} Mark(s)</div>\n        {this.props.index ? this.props.index + \". \" : null}\n        {this.props.question.question}\n\n        {this.props.question.canvas ? (\n          <div className=\"questionCanvas\">\n            <img src={this.props.question.canvas}></img>\n          </div>\n        ) : null}\n\n        {this.props.question.image ? (\n          <div className=\"questionImage\">\n            <img src={this.props.question.image}></img>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n","/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/teacher/Question/Text/Text.js",[],"/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/ui-elements/Search/Search.js",[],"/mnt/media/WORKSPACE/PROJECT/yuvashiksha/src/components/teacher/Question/Mcq/Mcq.js",["367","368"],"import React, { Component } from \"react\";\nimport \"./Mcq.css\";\n\nexport default class Mcq extends Component {\n  render() {\n    let optionsList = this.props.question.options.map((option, index) => {\n      return (\n        <div class=\"form-check\" key={this.props.question.id + option.name}>\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"options\"\n            value={option.name}\n            checked={option.correct ? true : undefined}\n            disabled\n          />\n          <label class=\"form-check-label\" for=\"options\">\n            {option.name}\n          </label>\n        </div>\n      );\n    });\n\n    return (\n      <div>\n        <div className=\"text-right\">{this.props.question.marks} Mark(s)</div>\n        {this.props.index ? this.props.index + \". \" : null}\n        {this.props.question.question}\n\n        {this.props.question.canvas ? (\n          <div className=\"questionCanvas\">\n            <img src={this.props.question.canvas}></img>\n          </div>\n        ) : null}\n\n        {this.props.question.image ? (\n          <div className=\"questionImage\">\n            <img src={this.props.question.image}></img>\n          </div>\n        ) : null}\n\n        <div>{optionsList}</div>\n      </div>\n    );\n  }\n}\n",{"ruleId":"369","replacedBy":"370"},{"ruleId":"371","replacedBy":"372"},{"ruleId":"373","severity":1,"message":"374","line":2,"column":25,"nodeType":"375","messageId":"376","endLine":2,"endColumn":33},{"ruleId":"373","severity":1,"message":"377","line":7,"column":3,"nodeType":"375","messageId":"376","endLine":7,"endColumn":16},{"ruleId":"373","severity":1,"message":"378","line":4,"column":8,"nodeType":"375","messageId":"376","endLine":4,"endColumn":21},{"ruleId":"373","severity":1,"message":"379","line":6,"column":8,"nodeType":"375","messageId":"376","endLine":6,"endColumn":17},{"ruleId":"373","severity":1,"message":"380","line":7,"column":10,"nodeType":"375","messageId":"376","endLine":7,"endColumn":14},{"ruleId":"381","severity":1,"message":"382","line":44,"column":25,"nodeType":"383","messageId":"384","endLine":44,"endColumn":27},{"ruleId":"385","severity":1,"message":"386","line":19,"column":24,"nodeType":"387","messageId":"388","endLine":19,"endColumn":26},{"ruleId":"385","severity":1,"message":"386","line":19,"column":24,"nodeType":"387","messageId":"388","endLine":19,"endColumn":26},{"ruleId":"389","severity":1,"message":"390","line":65,"column":5,"nodeType":"391","messageId":"392","endLine":87,"endColumn":6},{"ruleId":"385","severity":1,"message":"386","line":88,"column":16,"nodeType":"387","messageId":"388","endLine":88,"endColumn":18},{"ruleId":"385","severity":1,"message":"386","line":130,"column":13,"nodeType":"387","messageId":"388","endLine":130,"endColumn":15},{"ruleId":"385","severity":1,"message":"386","line":146,"column":13,"nodeType":"387","messageId":"388","endLine":146,"endColumn":15},{"ruleId":"385","severity":1,"message":"386","line":146,"column":28,"nodeType":"387","messageId":"388","endLine":146,"endColumn":30},{"ruleId":"385","severity":1,"message":"386","line":149,"column":13,"nodeType":"387","messageId":"388","endLine":149,"endColumn":15},{"ruleId":"373","severity":1,"message":"377","line":12,"column":10,"nodeType":"375","messageId":"376","endLine":12,"endColumn":23},{"ruleId":"373","severity":1,"message":"393","line":12,"column":25,"nodeType":"375","messageId":"376","endLine":12,"endColumn":30},{"ruleId":"394","severity":1,"message":"395","line":116,"column":17,"nodeType":"396","endLine":122,"endColumn":18},{"ruleId":"394","severity":1,"message":"395","line":125,"column":17,"nodeType":"396","endLine":131,"endColumn":18},{"ruleId":"397","severity":1,"message":"398","line":9,"column":7,"nodeType":"399","messageId":"400","endLine":9,"endColumn":13},{"ruleId":"397","severity":1,"message":"398","line":8,"column":7,"nodeType":"399","messageId":"400","endLine":8,"endColumn":13},{"ruleId":"385","severity":1,"message":"386","line":110,"column":22,"nodeType":"387","messageId":"388","endLine":110,"endColumn":24},{"ruleId":"385","severity":1,"message":"386","line":52,"column":22,"nodeType":"387","messageId":"388","endLine":52,"endColumn":24},{"ruleId":"385","severity":1,"message":"386","line":75,"column":14,"nodeType":"387","messageId":"388","endLine":75,"endColumn":16},{"ruleId":"394","severity":1,"message":"401","line":108,"column":15,"nodeType":"396","endLine":108,"endColumn":80},{"ruleId":"394","severity":1,"message":"401","line":111,"column":15,"nodeType":"396","endLine":115,"endColumn":16},{"ruleId":"394","severity":1,"message":"401","line":118,"column":15,"nodeType":"396","endLine":122,"endColumn":16},{"ruleId":"394","severity":1,"message":"401","line":125,"column":15,"nodeType":"396","endLine":129,"endColumn":16},{"ruleId":"394","severity":1,"message":"401","line":132,"column":15,"nodeType":"396","endLine":136,"endColumn":16},{"ruleId":"394","severity":1,"message":"401","line":139,"column":15,"nodeType":"396","endLine":143,"endColumn":16},{"ruleId":"373","severity":1,"message":"402","line":2,"column":10,"nodeType":"375","messageId":"376","endLine":2,"endColumn":19},{"ruleId":"373","severity":1,"message":"403","line":2,"column":21,"nodeType":"375","messageId":"376","endLine":2,"endColumn":24},{"ruleId":"373","severity":1,"message":"404","line":2,"column":26,"nodeType":"375","messageId":"376","endLine":2,"endColumn":29},{"ruleId":"385","severity":1,"message":"386","line":15,"column":14,"nodeType":"387","messageId":"388","endLine":15,"endColumn":16},{"ruleId":"385","severity":1,"message":"405","line":18,"column":18,"nodeType":"387","messageId":"388","endLine":18,"endColumn":20},{"ruleId":"385","severity":1,"message":"405","line":18,"column":36,"nodeType":"387","messageId":"388","endLine":18,"endColumn":38},{"ruleId":"385","severity":1,"message":"386","line":24,"column":26,"nodeType":"387","messageId":"388","endLine":24,"endColumn":28},{"ruleId":"385","severity":1,"message":"386","line":33,"column":22,"nodeType":"387","messageId":"388","endLine":33,"endColumn":24},{"ruleId":"385","severity":1,"message":"386","line":67,"column":35,"nodeType":"387","messageId":"388","endLine":67,"endColumn":37},{"ruleId":"385","severity":1,"message":"386","line":68,"column":35,"nodeType":"387","messageId":"388","endLine":68,"endColumn":37},{"ruleId":"385","severity":1,"message":"386","line":43,"column":20,"nodeType":"387","messageId":"388","endLine":43,"endColumn":22},{"ruleId":"385","severity":1,"message":"386","line":57,"column":17,"nodeType":"387","messageId":"388","endLine":57,"endColumn":19},{"ruleId":"385","severity":1,"message":"386","line":65,"column":22,"nodeType":"387","messageId":"388","endLine":65,"endColumn":24},{"ruleId":"385","severity":1,"message":"386","line":90,"column":26,"nodeType":"387","messageId":"388","endLine":90,"endColumn":28},{"ruleId":"385","severity":1,"message":"386","line":52,"column":23,"nodeType":"387","messageId":"388","endLine":52,"endColumn":25},{"ruleId":"385","severity":1,"message":"386","line":52,"column":53,"nodeType":"387","messageId":"388","endLine":52,"endColumn":55},{"ruleId":"385","severity":1,"message":"386","line":29,"column":23,"nodeType":"387","messageId":"388","endLine":29,"endColumn":25},{"ruleId":"385","severity":1,"message":"386","line":56,"column":26,"nodeType":"387","messageId":"388","endLine":56,"endColumn":28},{"ruleId":"385","severity":1,"message":"386","line":120,"column":26,"nodeType":"387","messageId":"388","endLine":120,"endColumn":28},{"ruleId":"394","severity":1,"message":"395","line":232,"column":13,"nodeType":"396","endLine":237,"endColumn":14},{"ruleId":"373","severity":1,"message":"406","line":2,"column":22,"nodeType":"375","messageId":"376","endLine":2,"endColumn":33},{"ruleId":"385","severity":1,"message":"386","line":42,"column":24,"nodeType":"387","messageId":"388","endLine":42,"endColumn":26},{"ruleId":"385","severity":1,"message":"386","line":86,"column":35,"nodeType":"387","messageId":"388","endLine":86,"endColumn":37},{"ruleId":"385","severity":1,"message":"386","line":96,"column":35,"nodeType":"387","messageId":"388","endLine":96,"endColumn":37},{"ruleId":"385","severity":1,"message":"386","line":28,"column":22,"nodeType":"387","messageId":"388","endLine":28,"endColumn":24},{"ruleId":"385","severity":1,"message":"386","line":50,"column":20,"nodeType":"387","messageId":"388","endLine":50,"endColumn":22},{"ruleId":"373","severity":1,"message":"407","line":12,"column":18,"nodeType":"375","messageId":"376","endLine":12,"endColumn":23},{"ruleId":"385","severity":1,"message":"386","line":146,"column":29,"nodeType":"387","messageId":"388","endLine":146,"endColumn":31},{"ruleId":"385","severity":1,"message":"386","line":195,"column":27,"nodeType":"387","messageId":"388","endLine":195,"endColumn":29},{"ruleId":"408","severity":1,"message":"409","line":201,"column":5,"nodeType":"410","endLine":201,"endColumn":15},{"ruleId":"385","severity":1,"message":"386","line":211,"column":27,"nodeType":"387","messageId":"388","endLine":211,"endColumn":29},{"ruleId":"385","severity":1,"message":"386","line":230,"column":27,"nodeType":"387","messageId":"388","endLine":230,"endColumn":29},{"ruleId":"385","severity":1,"message":"386","line":252,"column":23,"nodeType":"387","messageId":"388","endLine":252,"endColumn":25},{"ruleId":"385","severity":1,"message":"386","line":260,"column":22,"nodeType":"387","messageId":"388","endLine":260,"endColumn":24},{"ruleId":"385","severity":1,"message":"386","line":262,"column":29,"nodeType":"387","messageId":"388","endLine":262,"endColumn":31},{"ruleId":"385","severity":1,"message":"386","line":270,"column":29,"nodeType":"387","messageId":"388","endLine":270,"endColumn":31},{"ruleId":"385","severity":1,"message":"386","line":277,"column":29,"nodeType":"387","messageId":"388","endLine":277,"endColumn":31},{"ruleId":"385","severity":1,"message":"386","line":354,"column":29,"nodeType":"387","messageId":"388","endLine":354,"endColumn":31},{"ruleId":"385","severity":1,"message":"386","line":416,"column":27,"nodeType":"387","messageId":"388","endLine":416,"endColumn":29},{"ruleId":"385","severity":1,"message":"386","line":444,"column":33,"nodeType":"387","messageId":"388","endLine":444,"endColumn":35},{"ruleId":"385","severity":1,"message":"386","line":598,"column":31,"nodeType":"387","messageId":"388","endLine":598,"endColumn":33},{"ruleId":"385","severity":1,"message":"386","line":688,"column":31,"nodeType":"387","messageId":"388","endLine":688,"endColumn":33},{"ruleId":"385","severity":1,"message":"386","line":751,"column":22,"nodeType":"387","messageId":"388","endLine":751,"endColumn":24},{"ruleId":"385","severity":1,"message":"386","line":831,"column":25,"nodeType":"387","messageId":"388","endLine":831,"endColumn":27},{"ruleId":"385","severity":1,"message":"386","line":878,"column":26,"nodeType":"387","messageId":"388","endLine":878,"endColumn":28},{"ruleId":"385","severity":1,"message":"386","line":904,"column":26,"nodeType":"387","messageId":"388","endLine":904,"endColumn":28},{"ruleId":"385","severity":1,"message":"386","line":1429,"column":40,"nodeType":"387","messageId":"388","endLine":1429,"endColumn":42},{"ruleId":"373","severity":1,"message":"411","line":4,"column":8,"nodeType":"375","messageId":"376","endLine":4,"endColumn":15},{"ruleId":"385","severity":1,"message":"386","line":18,"column":22,"nodeType":"387","messageId":"388","endLine":18,"endColumn":24},{"ruleId":"385","severity":1,"message":"405","line":25,"column":46,"nodeType":"387","messageId":"388","endLine":25,"endColumn":48},{"ruleId":"412","severity":1,"message":"413","line":11,"column":3,"nodeType":"414","messageId":"415","endLine":13,"endColumn":4},{"ruleId":"385","severity":1,"message":"405","line":25,"column":23,"nodeType":"387","messageId":"388","endLine":25,"endColumn":25},{"ruleId":"385","severity":1,"message":"405","line":25,"column":45,"nodeType":"387","messageId":"388","endLine":25,"endColumn":47},{"ruleId":"373","severity":1,"message":"416","line":3,"column":28,"nodeType":"375","messageId":"376","endLine":3,"endColumn":32},{"ruleId":"385","severity":1,"message":"386","line":17,"column":22,"nodeType":"387","messageId":"388","endLine":17,"endColumn":24},{"ruleId":"385","severity":1,"message":"386","line":38,"column":26,"nodeType":"387","messageId":"388","endLine":38,"endColumn":28},{"ruleId":"385","severity":1,"message":"386","line":58,"column":26,"nodeType":"387","messageId":"388","endLine":58,"endColumn":28},{"ruleId":"385","severity":1,"message":"386","line":86,"column":27,"nodeType":"387","messageId":"388","endLine":86,"endColumn":29},{"ruleId":"385","severity":1,"message":"386","line":109,"column":22,"nodeType":"387","messageId":"388","endLine":109,"endColumn":24},{"ruleId":"385","severity":1,"message":"386","line":81,"column":22,"nodeType":"387","messageId":"388","endLine":81,"endColumn":24},{"ruleId":"385","severity":1,"message":"386","line":19,"column":34,"nodeType":"387","messageId":"388","endLine":19,"endColumn":36},{"ruleId":"385","severity":1,"message":"386","line":21,"column":41,"nodeType":"387","messageId":"388","endLine":21,"endColumn":43},{"ruleId":"385","severity":1,"message":"386","line":27,"column":41,"nodeType":"387","messageId":"388","endLine":27,"endColumn":43},{"ruleId":"385","severity":1,"message":"386","line":33,"column":41,"nodeType":"387","messageId":"388","endLine":33,"endColumn":43},{"ruleId":"373","severity":1,"message":"407","line":2,"column":34,"nodeType":"375","messageId":"376","endLine":2,"endColumn":39},{"ruleId":"373","severity":1,"message":"417","line":4,"column":32,"nodeType":"375","messageId":"376","endLine":4,"endColumn":38},{"ruleId":"394","severity":1,"message":"395","line":119,"column":21,"nodeType":"396","endLine":124,"endColumn":22},{"ruleId":"385","severity":1,"message":"386","line":150,"column":19,"nodeType":"387","messageId":"388","endLine":150,"endColumn":21},{"ruleId":"385","severity":1,"message":"386","line":150,"column":38,"nodeType":"387","messageId":"388","endLine":150,"endColumn":40},{"ruleId":"385","severity":1,"message":"386","line":162,"column":26,"nodeType":"387","messageId":"388","endLine":162,"endColumn":28},{"ruleId":"385","severity":1,"message":"386","line":181,"column":17,"nodeType":"387","messageId":"388","endLine":181,"endColumn":19},{"ruleId":"385","severity":1,"message":"386","line":181,"column":35,"nodeType":"387","messageId":"388","endLine":181,"endColumn":37},{"ruleId":"373","severity":1,"message":"418","line":8,"column":8,"nodeType":"375","messageId":"376","endLine":8,"endColumn":9},{"ruleId":"385","severity":1,"message":"386","line":61,"column":35,"nodeType":"387","messageId":"388","endLine":61,"endColumn":37},{"ruleId":"394","severity":1,"message":"395","line":109,"column":21,"nodeType":"396","endLine":114,"endColumn":22},{"ruleId":"385","severity":1,"message":"386","line":140,"column":24,"nodeType":"387","messageId":"388","endLine":140,"endColumn":26},{"ruleId":"385","severity":1,"message":"386","line":148,"column":26,"nodeType":"387","messageId":"388","endLine":148,"endColumn":28},{"ruleId":"385","severity":1,"message":"386","line":166,"column":17,"nodeType":"387","messageId":"388","endLine":166,"endColumn":19},{"ruleId":"385","severity":1,"message":"386","line":26,"column":26,"nodeType":"387","messageId":"388","endLine":26,"endColumn":28},{"ruleId":"385","severity":1,"message":"386","line":40,"column":28,"nodeType":"387","messageId":"388","endLine":40,"endColumn":30},{"ruleId":"385","severity":1,"message":"386","line":49,"column":28,"nodeType":"387","messageId":"388","endLine":49,"endColumn":30},{"ruleId":"385","severity":1,"message":"386","line":67,"column":28,"nodeType":"387","messageId":"388","endLine":67,"endColumn":30},{"ruleId":"385","severity":1,"message":"386","line":127,"column":42,"nodeType":"387","messageId":"388","endLine":127,"endColumn":44},{"ruleId":"385","severity":1,"message":"386","line":133,"column":42,"nodeType":"387","messageId":"388","endLine":133,"endColumn":44},{"ruleId":"385","severity":1,"message":"386","line":148,"column":22,"nodeType":"387","messageId":"388","endLine":148,"endColumn":24},{"ruleId":"385","severity":1,"message":"386","line":26,"column":26,"nodeType":"387","messageId":"388","endLine":26,"endColumn":28},{"ruleId":"385","severity":1,"message":"386","line":40,"column":28,"nodeType":"387","messageId":"388","endLine":40,"endColumn":30},{"ruleId":"385","severity":1,"message":"386","line":49,"column":28,"nodeType":"387","messageId":"388","endLine":49,"endColumn":30},{"ruleId":"385","severity":1,"message":"386","line":67,"column":28,"nodeType":"387","messageId":"388","endLine":67,"endColumn":30},{"ruleId":"385","severity":1,"message":"386","line":130,"column":42,"nodeType":"387","messageId":"388","endLine":130,"endColumn":44},{"ruleId":"385","severity":1,"message":"386","line":136,"column":42,"nodeType":"387","messageId":"388","endLine":136,"endColumn":44},{"ruleId":"385","severity":1,"message":"386","line":153,"column":22,"nodeType":"387","messageId":"388","endLine":153,"endColumn":24},{"ruleId":"419","severity":1,"message":"420","line":14,"column":13,"nodeType":"396","endLine":14,"endColumn":51},{"ruleId":"419","severity":1,"message":"420","line":20,"column":13,"nodeType":"396","endLine":20,"endColumn":50},{"ruleId":"419","severity":1,"message":"420","line":14,"column":13,"nodeType":"396","endLine":14,"endColumn":51},{"ruleId":"419","severity":1,"message":"420","line":20,"column":13,"nodeType":"396","endLine":20,"endColumn":50},{"ruleId":"419","severity":1,"message":"420","line":32,"column":13,"nodeType":"396","endLine":32,"endColumn":51},{"ruleId":"419","severity":1,"message":"420","line":38,"column":13,"nodeType":"396","endLine":38,"endColumn":50},"no-native-reassign",["421"],"no-negated-in-lhs",["422"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'ExamGuidlines' is defined but never used.","'StartExam' is defined but never used.","'Link' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Route' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","Expected '!==' and instead saw '!='.","'useLocation' is defined but never used.","'Modal' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Subject' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Form' is defined but never used.","'FaPlus' is defined but never used.","'$' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]