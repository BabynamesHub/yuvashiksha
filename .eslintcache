[{"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\index.js":"1","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\App.js":"2","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\store\\store.js":"3","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\Admin.js":"4","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\LoginRoute.js":"5","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\teacher\\Teacher.js":"6","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\student\\Student.js":"7","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\store\\reducers\\login.js":"8","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\store\\reducers\\adminReducer.js":"9","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Institutionstructure\\Institutionstructure.js":"10","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\UserManagment\\UserMangamenet.js":"11","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Message\\Messagelist.js":"12","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\Login.js":"13","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\ui-elements\\navBar\\NavBar.js":"14","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\ui-elements\\ListItem\\ListItem.js":"15","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\ui-elements\\TabView\\TabView.js":"16","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\teacher\\newExam\\NewExam.js":"17","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Message\\Messagecontent.js":"18","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\student\\components\\examguidelines\\ExamGuidlines.js":"19","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\student\\components\\startexam\\StartExam.js":"20","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\UserManagment\\Teachers.js":"21","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\UserManagment\\Students.js":"22","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Institutionstructure\\Subjects.js":"23","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Institutionstructure\\ClassBatch.js":"24","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Institutionstructure\\Department.js":"25","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\setPassword\\SetPassword.js":"26","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\sigup\\googleSignup\\GoogleSignup.js":"27","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\sigup\\signup.js":"28","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\verifyOtp\\verifyOtp.js":"29","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\shared\\http.js":"30","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\signin\\signin.js":"31","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Message\\Message.js":"32","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\sigup\\teacher\\teacher.js":"33","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\config.js":"34","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\shared\\parseCookie.js":"35","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\sigup\\student\\student.js":"36","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\shared\\dailogBox.js":"37","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Report\\Report.js":"38","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\VerifyAccounts\\VerifyAccounts.js":"39","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Home\\Home.js":"40","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\AdminMain.js":"41","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\AdminLogin\\AdminLogin.js":"42","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\ui-elements\\Search\\Search.js":"43","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\teacher\\TeacherMain.js":"44","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\teacher\\TeacherProfile\\TeacherProfile.js":"45","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\teacher\\Question\\Question.js":"46","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\teacher\\Question\\Text.js":"47"},{"size":266,"mtime":1610632664329,"results":"48","hashOfConfig":"49"},{"size":1502,"mtime":1614407318959,"results":"50","hashOfConfig":"49"},{"size":273,"mtime":1612448229756,"results":"51","hashOfConfig":"49"},{"size":5206,"mtime":1614400582980,"results":"52","hashOfConfig":"49"},{"size":886,"mtime":1614401677977,"results":"53","hashOfConfig":"49"},{"size":5021,"mtime":1614407448801,"results":"54","hashOfConfig":"49"},{"size":3461,"mtime":1614236738994,"results":"55","hashOfConfig":"49"},{"size":322,"mtime":1611639830870,"results":"56","hashOfConfig":"49"},{"size":232,"mtime":1612448229756,"results":"57","hashOfConfig":"49"},{"size":919,"mtime":1614343039153,"results":"58","hashOfConfig":"49"},{"size":539,"mtime":1614388551846,"results":"59","hashOfConfig":"49"},{"size":1354,"mtime":1614352598519,"results":"60","hashOfConfig":"49"},{"size":4241,"mtime":1614401668469,"results":"61","hashOfConfig":"49"},{"size":577,"mtime":1612015027856,"results":"62","hashOfConfig":"49"},{"size":501,"mtime":1612192173882,"results":"63","hashOfConfig":"49"},{"size":1504,"mtime":1612447802311,"results":"64","hashOfConfig":"49"},{"size":19679,"mtime":1614441137573,"results":"65","hashOfConfig":"49"},{"size":2058,"mtime":1614351846488,"results":"66","hashOfConfig":"49"},{"size":1983,"mtime":1614236738996,"results":"67","hashOfConfig":"49"},{"size":3143,"mtime":1614075758357,"results":"68","hashOfConfig":"49"},{"size":5116,"mtime":1614399530586,"results":"69","hashOfConfig":"49"},{"size":4908,"mtime":1614399605932,"results":"70","hashOfConfig":"49"},{"size":3056,"mtime":1613789705876,"results":"71","hashOfConfig":"49"},{"size":8887,"mtime":1614343728473,"results":"72","hashOfConfig":"49"},{"size":7954,"mtime":1614349320637,"results":"73","hashOfConfig":"49"},{"size":3111,"mtime":1613904510978,"results":"74","hashOfConfig":"49"},{"size":3204,"mtime":1613920796999,"results":"75","hashOfConfig":"49"},{"size":2549,"mtime":1614093842315,"results":"76","hashOfConfig":"49"},{"size":3888,"mtime":1614077492285,"results":"77","hashOfConfig":"49"},{"size":949,"mtime":1614237223427,"results":"78","hashOfConfig":"49"},{"size":6493,"mtime":1614160522290,"results":"79","hashOfConfig":"49"},{"size":1081,"mtime":1614351124974,"results":"80","hashOfConfig":"49"},{"size":4013,"mtime":1614264201482,"results":"81","hashOfConfig":"49"},{"size":51,"mtime":1611625884505,"results":"82","hashOfConfig":"49"},{"size":456,"mtime":1611716955802,"results":"83","hashOfConfig":"49"},{"size":5864,"mtime":1614348130920,"results":"84","hashOfConfig":"49"},{"size":2129,"mtime":1614145912425,"results":"85","hashOfConfig":"49"},{"size":2443,"mtime":1614175936437,"results":"86","hashOfConfig":"49"},{"size":3380,"mtime":1614355594298,"results":"87","hashOfConfig":"49"},{"size":2493,"mtime":1614221024241,"results":"88","hashOfConfig":"49"},{"size":941,"mtime":1614178929128,"results":"89","hashOfConfig":"49"},{"size":2160,"mtime":1614217103412,"results":"90","hashOfConfig":"49"},{"size":605,"mtime":1614399148174,"results":"91","hashOfConfig":"49"},{"size":1064,"mtime":1614402376119,"results":"92","hashOfConfig":"49"},{"size":4833,"mtime":1614410350651,"results":"93","hashOfConfig":"49"},{"size":730,"mtime":1614433882142,"results":"94","hashOfConfig":"49"},{"size":165,"mtime":1614424686946,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"wxwlk0",{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"98"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"98"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"98"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"98"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"98"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"98"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"98"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"98"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"98"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"98"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"98"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"98"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"98"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\index.js",[],["222","223"],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\App.js",["224"],"import { Provider } from \"react-redux\";\nimport { BrowserRouter, Redirect, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport LoginRoute from \"./components/login/LoginRoute\";\nimport Student from \"./components/student/Student\";\nimport TeacherMain from \"./components/teacher/TeacherMain\";\nimport AdminMain from \"./components/admin/AdminMain\";\n\nimport { store } from \"./store/store\";\nimport React from \"react\";\n\nimport $ from \"jquery\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    window.alert = (text) => {\n      $(\"body\").append(\n        `<div class=\"alert alert-info alert-dismissible\" role=\"alert\" id=\"systemAlert\">\n          <button\n            type=\"button\"\n            class=\"close\"\n            data-dismiss=\"alert\"\n            aria-label=\"Close\"\n          >\n            <span aria-hidden=\"true\">&times;</span>\n          </button>${text}\n        </div>`\n      );\n    };\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Provider store={store}>\n          <div>\n            {/* Routes of the app */}\n            <Route path=\"/\" component={LoginRoute} />\n            <Route path=\"/student\" component={Student} />\n            <Route path=\"/teacher\" component={TeacherMain} />\n            <Route path=\"/admin\" component={AdminMain} />\n\n            {/* //Test route for development purposes */}\n            <Route path=\"/test\">\n              <></>\n            </Route>\n          </div>\n        </Provider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\store\\store.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\Admin.js",["225","226","227","228","229","230","231","232"],"import { Component } from \"react\";\nimport $ from \"jquery\";\nimport \"./Admin.css\";\n\nimport NavBar from \"../ui-elements/navBar/NavBar\";\nimport { Switch, Route, withRouter, Redirect } from \"react-router-dom\";\n\nimport Home from \"./pages/Home/Home\";\nimport Institutionstructure from \"./pages/Institutionstructure/Institutionstructure\";\nimport Messagelist from \"./pages/Message/Messagelist\";\nimport Report from \"./pages/Report/Report\";\nimport UserMangamenet from \"./pages/UserManagment/UserMangamenet\";\nimport VerifyAccount from \"./pages/VerifyAccounts/VerifyAccounts\";\nimport Messagecontent from \"./pages/Message/Messagecontent\";\n\nimport http from \"../../shared/http\";\n\nimport { Button } from \"react-bootstrap\";\nimport { FaPlus } from \"react-icons/fa\";\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeItem: $(\"#adminSidebar .active\").attr(\"name\"),\n    };\n  }\n\n  changePage = (event) => {\n    //Get active item\n    let activeItem = $(\"#adminSidebar .active\");\n    //Clicked tab\n    let clickedItem = $(event.target);\n\n    //Remove \"active\" class from the active item\n    activeItem.removeClass(\"active\");\n\n    //Add active class to the clicked item\n    clickedItem.addClass(\"active\");\n\n    //Changing the browser Route\n    this.props.history.push(\"/admin/\" + clickedItem.attr(\"name\"));\n\n    //Setting the states correctly\n    this.setState({ activeItem: clickedItem.attr(\"name\") });\n  };\n\n  logout = () => {\n    http(\"GET\", \"/login/logout\", {}, (res) => {\n      alert(res.data);\n      if (res.status == 200) {\n        window.location.href = \"http://localhost:3000/\";\n      }\n    });\n  };\n\n  componentDidMount() {\n    $(\n      \".list-group-item[name=\" +\n        this.props.history.location.pathname.split(\"/\")[2] +\n        \"]\"\n    ).addClass(\"active\");\n\n    this.setState({ activeItem: $(\"#adminSidebar .active\").attr(\"name\") });\n  }\n\n  render() {\n    //Target modal to open when InstitutionStructure + button clicked\n    let targetModal = \"#adddept\";\n\n    //Check if the path is in the /class inside /Institutionstructure\n    let path = this.props.history.location.pathname.split(\"/\")[3];\n\n    if (path == \"class\") {\n      targetModal = \"#addclass\";\n    }\n\n    //The content of the right side of the navBar\n    let navBarRight = {\n      home: (\n        <Button variant=\"danger\" className=\"mr-4\" onClick={this.logout}>\n          Logout\n        </Button>\n      ),\n      institutionStructure: (\n        <Button className=\"mr-4\" data-toggle=\"modal\" data-target={targetModal}>\n          <FaPlus />\n        </Button>\n      ),\n      message: null,\n      report: null,\n      verifyAccount: null,\n      userManagement: null,\n    };\n\n    return (\n      <div className=\"root\">\n        <NavBar>\n          {{\n            left: <h3>ADMIN</h3>,\n            right: navBarRight[this.state.activeItem],\n          }}\n        </NavBar>\n        <div id=\"adminBody\">\n          <div id=\"adminSidebar\">\n            <div class=\"list-group\">\n              <a class=\"list-group-item\" onClick={this.changePage} name=\"home\">\n                Home\n              </a>\n              <a\n                class=\"list-group-item\"\n                onClick={this.changePage}\n                name=\"institutionStructure\"\n              >\n                Institution Structure\n              </a>\n              <a\n                class=\"list-group-item\"\n                onClick={this.changePage}\n                name=\"message\"\n              >\n                Messages\n              </a>\n              <a\n                class=\"list-group-item\"\n                onClick={this.changePage}\n                name=\"report\"\n              >\n                Report\n              </a>\n              <a\n                class=\"list-group-item\"\n                onClick={this.changePage}\n                name=\"verifyAccount\"\n              >\n                Verify Account\n              </a>\n              <a\n                class=\"list-group-item\"\n                onClick={this.changePage}\n                name=\"userManagement\"\n              >\n                User Management\n              </a>\n            </div>\n          </div>\n          <div id=\"adminContent\">\n            <Switch>\n              <Route\n                path=\"/admin/message/messagecontent\"\n                exact\n                component={Messagecontent}\n              />\n              <Route path=\"/admin/home\" exact>\n                <Home />\n              </Route>\n\n              <Route path=\"/admin/institutionstructure\">\n                <Institutionstructure />\n              </Route>\n\n              <Route path=\"/admin/message\" exact>\n                <Messagelist />\n              </Route>\n\n              <Route path=\"/admin/report\" exact>\n                <Report />\n              </Route>\n\n              <Route path=\"/admin/usermanagement\" exact>\n                <UserMangamenet />\n              </Route>\n\n              <Route path=\"/admin/verifyaccount\" exact>\n                <VerifyAccount />\n              </Route>\n              <Route path=\"/admin\">\n                <Redirect to=\"/admin/home\" />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Admin);\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\LoginRoute.js",["233"],"/**\n * This is the router in the client side to navigate user in the browser without page refresh\n * THIS IS THE ROUTER ONLY FOR THE LOGIN MODULE\n */\nimport { Component } from \"react\";\nimport {\n  BrowserRouter,\n  Route,\n  withRouter,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport Login from \"./Login\";\n\nclass LoginRoute extends Component {\n  render() {\n    return (\n      /**\n       * DISPLAYING CORRESPONDING COMPONENTS IN DIFFERENT ROUTES\n       */\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/signin\" />\n        </Route>\n        <Route path=\"/signin\" exact>\n          <Login signin />\n        </Route>\n        <Route path=\"/signup\" exact>\n          <Login signup />\n        </Route>\n        <Route path=\"/signup/google\" exact>\n          <Login googleSignup />\n        </Route>\n      </Switch>\n    );\n  }\n}\n\nexport default withRouter(LoginRoute);\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\teacher\\Teacher.js",["234"],"import { Component } from \"react\";\nimport \"./Teacher.css\";\n\nimport NavBar from \"../ui-elements/navBar/NavBar\";\nimport TabView from \"../ui-elements/TabView/TabView\";\nimport ListItem from \"../ui-elements/ListItem/ListItem\";\nimport NewExam from \"./newExam/NewExam\";\nimport TeacherProfile from \"./TeacherProfile/TeacherProfile\";\n\nimport { Route, withRouter } from \"react-router-dom\";\n\nlet examData = [\n  {\n    name: \"Name of Exam\",\n    subject: \"Subject\",\n    from: \"9:00:00\",\n    to: \"12:00:00\",\n    marks: 80,\n    date: \"12-01-2021\", //mm-dd-yyyy\n  },\n  {\n    name: \"Name of Exam\",\n    subject: \"Subject\",\n    from: \"9:00:00\",\n    to: \"12:00:00\",\n    marks: 80,\n    date: \"08-01-2021\", //mm-dd-yyyy\n  },\n  {\n    name: \"Name of Exam\",\n    subject: \"Subject\",\n    from: \"9:00:00\",\n    to: \"12:00:00\",\n    marks: 80,\n    date: \"01-01-2021\", //mm-dd-yyyy\n  },\n];\n\nclass Teacher extends Component {\n  examList = [];\n  previousExamList = [];\n\n  setExamData = () => {\n    let currentTime = new Date();\n\n    examData.map((item) => {\n      let examDate = new Date(`${item.date},${item.to}`);\n\n      if (currentTime.getTime() > examDate.getTime()) {\n        this.previousExamList.push(\n          <ListItem height=\"100px\">\n            {{\n              left: (\n                <div id=\"leftListItem\">\n                  <p>{item.name}</p>\n                  <p>{item.subject}</p>\n                  <p>{item.date}</p>\n                </div>\n              ),\n              right: (\n                <div id=\"rightListItem\">\n                  <p>\n                    {item.from} - {item.to}\n                  </p>\n                  <p>{item.marks} Marks</p>\n                </div>\n              ),\n            }}\n          </ListItem>\n        );\n        console.log(\"pushed to prev\");\n      } else {\n        this.examList.push(\n          <ListItem height=\"100px\">\n            {{\n              left: (\n                <div id=\"leftListItem\">\n                  <p>{item.name}</p>\n                  <p>{item.subject}</p>\n                  <p>{item.date}</p>\n                </div>\n              ),\n              right: (\n                <div id=\"rightListItem\">\n                  <p>\n                    {item.from} - {item.to}\n                  </p>\n                  <p>{item.marks} Marks</p>\n                </div>\n              ),\n            }}\n          </ListItem>\n        );\n        console.log(\"Pushed to scheduled\");\n      }\n    });\n  };\n\n  newExam = () => {\n    this.props.history.push(\"/teacher/newexam\");\n  };\n\n  //Opens the teacher profile view\n  openProfile = () => {\n    this.props.history.push(\"/teacher/profile\");\n  };\n\n  componentDidMount() {\n    this.setExamData();\n    this.forceUpdate();\n  }\n\n  render() {\n    return (\n      <div>\n        <Route path=\"/teacher\" exact>\n          <NavBar>\n            {{\n              left: <h5 onClick={this.openProfile}>{this.props.user.name}</h5>,\n              right: (\n                <div className=\"container\" id=\"NavBarRight\">\n                  <div className=\"row\">\n                    <div\n                      className=\"col-sm-4 align-self-center\"\n                      id=\"NavBarInfoText\"\n                    >\n                      <p>Select Class and Batch : </p>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <select\n                        className=\"form-select mt-3\"\n                        name=\"class\"\n                        id=\"class\"\n                      >\n                        <option value=\"\">Class</option>\n                        <option value=\"CS\">CS</option>\n                        <option value=\"Commerce\">Commerce</option>\n                      </select>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <select\n                        className=\"form-select mt-3\"\n                        name=\"batch\"\n                        id=\"batch\"\n                      >\n                        <option value=\"\">Batch</option>\n                        <option value=\"2018-21\">2018-21</option>\n                        <option value=\"2019-22\">2019-22</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              ),\n            }}\n          </NavBar>\n          <TabView>\n            {{\n              leftTab: <span>SCHEDULED EXAMS</span>,\n              rightTab: <span>PREVIOUS EXAMS</span>,\n              leftTabBody: <div id=\"leftTabBody\">{this.examList}</div>,\n              rightTabBody: (\n                <div id=\"rightTabBody\">{this.previousExamList}</div>\n              ),\n            }}\n          </TabView>\n          <div id=\"new-exam\" onClick={this.newExam}>\n            <div id=\"floatButtonText\">+</div>\n          </div>\n        </Route>\n        <Route path=\"/teacher/newexam\">\n          <NewExam />\n        </Route>\n        <Route path=\"/teacher/profile\">\n          <TeacherProfile user={this.props.user} />\n        </Route>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Teacher);\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\student\\Student.js",["235","236","237","238"],"import React, { Component } from \"react\";\r\nimport NavBar from \"../ui-elements/navBar/NavBar\";\r\nimport TabView from \"../ui-elements/TabView/TabView\";\r\nimport ExamGuidlines from \"./components/examguidelines/ExamGuidlines\";\r\nimport ListItem from \"../ui-elements/ListItem/ListItem\";\r\nimport StartExam from \"./components/startexam/StartExam\";\r\nimport { Link, BrowserRouter, Route } from \"react-router-dom\";\r\nimport \"./Student.css\";\r\nlet examData = [\r\n  {\r\n    name: \"Name of Exam\",\r\n    subject: \"Subject\",\r\n    from: \"9:00:00\",\r\n    to: \"12:00:00\",\r\n    marks: 80,\r\n    date: \"12-01-2021\", //mm-dd-yyyy\r\n  },\r\n  {\r\n    name: \"Name of Exam\",\r\n    subject: \"Subject\",\r\n    from: \"9:00:00\",\r\n    to: \"12:00:00\",\r\n    marks: 80,\r\n    date: \"08-01-2021\", //mm-dd-yyyy\r\n  },\r\n  {\r\n    name: \"Name of Exam\",\r\n    subject: \"Subject\",\r\n    from: \"9:00:00\",\r\n    to: \"12:00:00\",\r\n    marks: 80,\r\n    date: \"01-01-2021\", //mm-dd-yyyy\r\n  },\r\n];\r\n\r\nexport default class Student extends Component {\r\n  examList = [];\r\n  previousExamList = [];\r\n\r\n  setExamData = () => {\r\n    console.log(\"CAlled\");\r\n    let currentTime = new Date();\r\n\r\n    examData.map((item) => {\r\n      let examDate = new Date(`${item.date},${item.to}`);\r\n\r\n      if (currentTime.getTime() > examDate.getTime()) {\r\n        this.previousExamList.push(\r\n          <ListItem height=\"100px\">\r\n            {{\r\n              left: (\r\n                <div id=\"leftListItem\">\r\n                  <p>{item.name}</p>\r\n                  <p>{item.subject}</p>\r\n                  <p>{item.date}</p>\r\n                </div>\r\n              ),\r\n              right: (\r\n                <div id=\"rightListItem\">\r\n                  <p>\r\n                    {item.from} - {item.to}\r\n                  </p>\r\n                  <p>{item.marks} Marks</p>\r\n                </div>\r\n              ),\r\n            }}\r\n          </ListItem>\r\n        );\r\n        console.log(\"pushed to prev\");\r\n      } else {\r\n        this.examList.push(\r\n          <ListItem height=\"100px\">\r\n            {{\r\n              left: (\r\n                <div id=\"leftListItem\">\r\n                  <p>{item.name}</p>\r\n                  <p>{item.subject}</p>\r\n                  <p>{item.date}</p>\r\n                </div>\r\n              ),\r\n              right: (\r\n                <div id=\"rightListItem\">\r\n                  <p>\r\n                    {item.from} - {item.to}\r\n                  </p>\r\n                  <p>{item.marks} Marks</p>\r\n                </div>\r\n              ),\r\n            }}\r\n          </ListItem>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setExamData();\r\n    this.forceUpdate();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"root\">\r\n        <div>\r\n          <BrowserRouter>\r\n            <Route path=\"/student\" exact>\r\n              <NavBar>\r\n                {{\r\n                  left: <h5>HOME</h5>,\r\n                }}\r\n              </NavBar>\r\n              <TabView>\r\n                {{\r\n                  leftTab: <span>SCHEDULED EXAMS</span>,\r\n                  rightTab: <span>PREVIOUS EXAMS</span>,\r\n                  leftTabBody: <div id=\"leftTabBody\">{this.examList}</div>,\r\n                  rightTabBody: (\r\n                    <div id=\"rightTabBody\">{this.previousExamList}</div>\r\n                  ),\r\n                }}\r\n              </TabView>\r\n              {/* <ExamGuidlines/> */}\r\n            </Route>\r\n          </BrowserRouter>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\store\\reducers\\login.js",["239"],"export const loginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"updateSignupData\":\n      return {\n        ...state,\n        signupData: { ...action.payload },\n        validSignupData: true,\n      };\n      break;\n    case \"clearSignupData\":\n      return {};\n    default:\n      return state;\n  }\n};\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\store\\reducers\\adminReducer.js",["240"],"export const adminReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"storeMessage\":\n      return {\n        ...state,\n        message: action.payload,\n      };\n      break;\n    default:\n      return state;\n  }\n};\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Institutionstructure\\Institutionstructure.js",["241"],"import React, { Component } from \"react\";\r\nimport Department from \"./Department\";\r\nimport ClassBatch from \"./ClassBatch\";\r\nimport Subject from \"./Subjects\";\r\n\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\n\r\nclass Institutionstructure extends Component {\r\n  //Change route to class\r\n  departmentSelected = (departmentId) => {\r\n    this.props.history.push(\r\n      \"/admin/institutionStructure/class/\" + departmentId\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"100%\" }}>\r\n        <Switch>\r\n          <Route path=\"/admin/institutionstructure/\" exact>\r\n            <Department departmentSelected={this.departmentSelected} />\r\n          </Route>\r\n\r\n          <Route path=\"/admin/institutionstructure/class/:departmentId\" exact>\r\n            <ClassBatch />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Institutionstructure);\r\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\UserManagment\\UserMangamenet.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Message\\Messagelist.js",["242","243"],"import React from \"react\";\nimport Message from \"./Message\";\n\nimport http from \"../../../../shared/http\";\n\nclass Messagelist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      replayedMessages: [],\n    };\n  }\n\n  //Get messages form server\n  getMessages = () => {\n    http(\"GET\", \"/admin/messages\", {}, (res) => {\n      if (res.status == 200) {\n        let replayedMessages = [];\n        let messages = [];\n\n        //Setting replayed messages\n        for (let message of res.data) {\n          console.log(message);\n          if (message.reply && message.reply != \"\") {\n            //Replayed message\n            replayedMessages.push(message);\n          } else {\n            //message not replayed\n            messages.push(message);\n          }\n        }\n        this.setState({ messages, replayedMessages });\n      } else alert(res.data);\n    });\n  };\n\n  componentDidMount() {\n    this.getMessages();\n  }\n\n  render() {\n    let messages = this.state.messages.map((message) => {\n      return <Message message={message} />;\n    });\n\n    let replayed = this.state.replayedMessages.map((message) => {\n      return <Message message={message} replayed />;\n    });\n\n    return (\n      <>\n        <div>{messages}</div>\n        <div>{replayed}</div>\n      </>\n    );\n  }\n}\n\nexport default Messagelist;\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\Login.js",["244","245","246","247"],"/**\n * MAIN SIGNIN/SIGNUP COMPONENT\n */\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./login.css\";\n\nimport Signin from \"./signin/signin\";\nimport Signup from \"./sigup/signup\";\nimport VerifyOtp from \"./verifyOtp/verifyOtp\";\nimport SetPassword from \"./setPassword/SetPassword\";\nimport { BrowserRouter, Route, withRouter } from \"react-router-dom\";\nimport GoogleSignup from \"./sigup/googleSignup/GoogleSignup\";\n\n//DISPATH ACTIONS TO CHANGE REDUX STORE DATA (USED FOR SIGNUP PROCEDURE)\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateData: (payload) => dispatch({ type: \"updateSignupData\", payload }),\n    clearData: () => dispatch({ type: \"clearSignupData\" }),\n  };\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signin: true, //IF SIGNIN TAB ACTIVE\n      signup: false, //IF SIGNUP TAB ACTIVE\n\n      googleSignup: false, //IF GOOGLE SIGNUP WINDOW VISIBLE\n      showVerifyOtp: false, //IF OTP VERIFICATION SCREEN IS VISIBLE (DURING SIGNUP)\n      showSetPassword: false, //IF PASSWORD ENTRY SCREEN IS VISIBLE (DURING SIGNUP)\n    };\n  }\n\n  changeTabToSignup = () => {\n    this.setState({\n      signin: false,\n      signup: true,\n\n      googleSignup: false,\n      showVerifyOtp: false,\n      showSetPassword: false,\n    });\n\n    this.props.history.push(\"/signup\");\n  };\n\n  changeTabToSignin = () => {\n    this.setState({\n      signin: true,\n      signup: false,\n\n      googleSignup: false,\n      showVerifyOtp: false,\n      showSetPassword: false,\n    });\n    this.props.history.push(\"/signin\");\n  };\n\n  showVerifyOtp = () => {\n    this.setState({ showVerifyOtp: true, signin: false, signup: false });\n  };\n\n  otpVerified = () => {\n    this.setState({\n      showVerifyOtp: false,\n      signin: false,\n      signup: false,\n      googleSignup: false,\n      showSetPassword: true,\n    });\n  };\n\n  /**\n   * INITIALLY SETTING THE VIEW OF THE COMPONENT BASED ON THE RECIEVED PROPS\n   * PROPS CAN BE EITHER: signin, signup or googleSignup\n   */\n  setView = () => {\n    if (this.props.signin) {\n      this.changeTabToSignin();\n    } else if (this.props.signup) {\n      this.changeTabToSignup();\n    } else if (this.props.googleSignup) {\n      this.setState({\n        signin: false,\n        signup: false,\n        showSetPassword: false,\n        showVerifyOtp: false,\n        googleSignup: true,\n      });\n    }\n  };\n\n  componentDidMount() {\n    //Setting initial view of the component base on the props\n    this.setView();\n  }\n\n  render() {\n    //CSS Style to apply for the active tab SIGNIN or SIGNUP\n    let style = {\n      \"background-color\": \"rgb(37, 35, 34)\",\n      color: \"white\",\n    };\n\n    return (\n      <div id=\"loginBody\">\n        <div\n          className=\"d-flex align-items-center justify-content-center\"\n          style={{ height: \"100vh\" }}\n        >\n          <div className=\"card\" id=\"login-card\" style={{ width: \"25rem\" }}>\n            <div className=\"card-body\">\n              <nav class=\"nav nav-pills nav-fill\">\n                <a\n                  className=\"nav-item nav-link active\"\n                  href=\"#\"\n                  id=\"signin-tab\"\n                  onClick={this.changeTabToSignin}\n                  style={this.state.signin ? style : null}\n                >\n                  SIGN IN\n                </a>\n                <a\n                  className=\"nav-item nav-link\"\n                  href=\"#\"\n                  id=\"signup-tab\"\n                  onClick={this.changeTabToSignup}\n                  style={this.state.signin ? null : style}\n                >\n                  SIGN UP\n                </a>\n              </nav>\n              {this.state.signin ? <Signin /> : null}\n              {this.state.signup ? (\n                <Signup otpSent={this.showVerifyOtp} />\n              ) : null}\n              {this.state.showVerifyOtp ? (\n                <VerifyOtp otpVerified={this.otpVerified} />\n              ) : null}\n              {this.state.showSetPassword ? <SetPassword /> : null}\n              {this.state.googleSignup ? <GoogleSignup /> : null}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(Login));\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\ui-elements\\navBar\\NavBar.js",["248","249","250"],"import { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"./NavBar.css\";\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <div id=\"navBar\">\n        <div\n          className=\"d-flex flex-row justify-content-between align-items-center\"\n          id=\"navBarContainer\"\n        >\n          <div id=\"left\">{this.props.children.left}</div>\n          <div id=\"center\">{this.props.children.center}</div>\n          <div id=\"right\">{this.props.children.right}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NavBar;\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\ui-elements\\ListItem\\ListItem.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\ui-elements\\TabView\\TabView.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\teacher\\newExam\\NewExam.js",["251","252","253","254","255","256","257","258","259","260"],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Message\\Messagecontent.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\student\\components\\examguidelines\\ExamGuidlines.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\student\\components\\startexam\\StartExam.js",["261"],"import React, { Component } from \"react\";\r\nimport NavBar from \"../../../ui-elements/navBar/NavBar\";\r\nimport ListItem from \"../../../ui-elements/ListItem/ListItem\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { AiOutlineCheck } from \"react-icons/ai\";\r\nimport $ from \"jquery\";\r\nexport class StartExam extends Component {\r\n  render() {\r\n    $(document).ready(function () {\r\n      // Disables ctrl+v, ctrl+x, ctrl+c.\r\n      $(\"textarea\").on(\"cut\", function (e) {\r\n        $(\"#d2\").text(\"cut. not allowed!\");\r\n        e.preventDefault();\r\n      });\r\n      $(\"textarea\").on(\"copy\", function (e) {\r\n        $(\"#d2\").text(\"copy. not allowed!\");\r\n        e.preventDefault();\r\n      });\r\n      $(\"textarea\").on(\"paste\", function (e) {\r\n        $(\"#d2\").text(\"paste. not allowed!\");\r\n        e.preventDefault();\r\n      });\r\n\r\n      // Above all three can be combined into one, above is\r\n      // executed separately for understanding purposes.\r\n      /* $('textarea').on(\"cut copy paste\", function(e) { \r\n        $(\"#d2\").text('right-click is disabled!'); \r\n        e.preventDefault(); \r\n        }); */\r\n\r\n      // Disables right-click.\r\n      $(\"textarea\").mousedown(function (e) {\r\n        if (e.button == 2) {\r\n          e.preventDefault();\r\n          alert(\"right-click is disabled!\");\r\n        }\r\n      });\r\n    });\r\n    return (\r\n      <div className=\"root\">\r\n        <NavBar>\r\n          {{\r\n            left: (\r\n              <div>\r\n                <h5>TIME LEFT:HH:MM:SS</h5>\r\n              </div>\r\n            ),\r\n            right: (\r\n              <div>\r\n                <Button className=\"btn btn-success\">\r\n                  <AiOutlineCheck />\r\n                </Button>\r\n              </div>\r\n            ),\r\n          }}\r\n        </NavBar>\r\n        <ListItem height=\"100px\">\r\n          {{\r\n            left: (\r\n              <div id=\"leftListItem\">\r\n                <p>DATE:DD-MM-YYYY</p>\r\n                <p>TIME:HH:MM:SS</p>\r\n                <p>Name of Examination:</p>\r\n              </div>\r\n            ),\r\n            right: (\r\n              <div id=\"rightListItem\">\r\n                <p>Subject:</p>\r\n                <p>MARK:80</p>\r\n              </div>\r\n            ),\r\n          }}\r\n        </ListItem>\r\n        <ListItem height=\"150px\">\r\n          {{\r\n            left: (\r\n              <div id=\"leftListItem\">\r\n                <p>What is computer</p>\r\n                <p>\r\n                  <textarea\r\n                    cols=\"150\"\r\n                    rows=\"5\"\r\n                    type=\"textbox\"\r\n                    id=\"ans\"\r\n                    oncut=\"return false\"\r\n                    oncopy=\"return false\"\r\n                    onpaste=\"return false\"\r\n                  ></textarea>{\" \"}\r\n                  <p id=\"d1\"></p>\r\n                  <p id=\"d2\"></p>\r\n                  <Button className=\"btn btn-secondary ml-3\">canavs</Button>\r\n                </p>\r\n              </div>\r\n            ),\r\n            right: (\r\n              <div id=\"rightListItem\">\r\n                <p></p>\r\n              </div>\r\n            ),\r\n          }}\r\n        </ListItem>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StartExam;\r\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\UserManagment\\Teachers.js",["262","263","264","265","266","267","268"],"import React, { Component } from \"react\";\nimport ListItem from \"../../../ui-elements/ListItem/ListItem\";\nimport { Button } from \"react-bootstrap\";\nimport http from \"../../../../shared/http\";\nimport $ from \"jquery\";\nimport Search from \"../../../ui-elements/Search/Search\";\n\nexport default class Teachers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userData: [],\n    };\n  }\n\n  //Delete a user account\n  deleteClickListener = (item) => {\n    let confirmation = window.confirm(\"Are you sure to want to delete?\");\n\n    if (confirmation) {\n      http(\n        \"POST\",\n        \"/admin/usermanagement/delete\",\n        { userId: item.id },\n        (res) => {\n          if (res.status == 200) {\n            alert(\"Teacher account deleted successfully\");\n\n            document.getElementById(item.id).style.display = \"none\";\n          } else {\n            alert(res.data);\n          }\n        }\n      );\n    }\n  };\n\n  //Disable / Enable account\n  disableClickListener = (event, item) => {\n    if (event.target.value == \"Disable\") {\n      let confirmation = window.confirm(\"Are sure to Disable account?\");\n\n      if (confirmation) {\n        http(\n          \"POST\",\n          \"/admin/usermanagement/disable\",\n          { userId: item.id },\n          (res) => {\n            if (res.status == 200) {\n              alert(\"Teacher Account disabled Successfully\");\n              this.changeToEnable(item);\n            } else {\n              alert(res.data);\n            }\n          }\n        );\n      }\n    } else {\n      let confirmation = window.confirm(\"Are you sure to Enable account?\");\n\n      if (confirmation) {\n        http(\n          \"POST\",\n          \"/admin/usermanagement/enable\",\n          { userId: item.id },\n          (res) => {\n            if (res.status == 200) {\n              alert(\"Teacher Account enabled Successfully\");\n              this.changeToDisable(item);\n            } else {\n              alert(res.data);\n            }\n          }\n        );\n      }\n    }\n  };\n\n  //Change style of button\n  changeToDisable = (teacher) => {\n    let button = $(\"#\" + teacher.id + \" input[name='changestatus']\");\n    button.attr(\"value\", \"Disable\");\n    button.removeClass(\"btn-success\");\n    button.addClass(\"btn-warning\");\n  };\n\n  changeToEnable = (teacher) => {\n    let button = $(\"#\" + teacher.id + \" input[name='changestatus']\");\n    button.attr(\"value\", \"Enable\");\n    button.removeClass(\"btn-warning\");\n    button.addClass(\"btn-success\");\n  };\n\n  //Return jsx to render the list of teachers\n  getTeacherList = () => {\n    let teachers = this.state.userData.map((item) => {\n      return (\n        <div className=\" mt-1 \" id={item.id}>\n          <ListItem height=\"180px\">\n            {{\n              left: (\n                <div>\n                  <span>\n                    <p class=\"text-left\">Name: {item.name}</p>\n\n                    <p class=\"text-left\">Email: {item.email}</p>\n                    <p class=\"text-left\">Department: {item.department}</p>\n                  </span>{\" \"}\n                  <Button\n                    type=\"submit\"\n                    className=\" mr-3 btn btn-danger\"\n                    onClick={() => this.deleteClickListener(item)}\n                  >\n                    Delete\n                  </Button>\n                </div>\n              ),\n              right: (\n                <div class=\"text-right\">\n                  <p class=\"text-right\">\n                    Register Number: {item.registerNumber}\n                  </p>\n                  <br />\n                  <br />\n                  <br />\n                  <input\n                    type=\"button\"\n                    name=\"changestatus\"\n                    className={\n                      item.accountStatus == \"disabled\"\n                        ? \"mr-3 btn btn-success\"\n                        : \"mr-3 btn btn-warning\"\n                    }\n                    onClick={(event) => this.disableClickListener(event, item)}\n                    value={\n                      item.accountStatus == \"disabled\" ? \"Enable\" : \"Disable\"\n                    }\n                  ></input>\n                </div>\n              ),\n            }}\n          </ListItem>\n        </div>\n      );\n    });\n\n    return teachers;\n  };\n\n  //Get teacher user info from server\n  getUserData = () => {\n    http(\"GET\", \"/admin/usermanagement/teacher\", null, (res) => {\n      if (res.status == 200) {\n        this.setState({ userData: res.data });\n      } else {\n        alert(\"Error during fetching teacher data from server\");\n      }\n    });\n  };\n\n  //Search\n  search = (searchText) => {\n    if (searchText) {\n      http(\n        \"POST\",\n        \"/admin/usermanagement/teacher/search\",\n        { searchString: searchText },\n        (res) => {\n          this.setState({ userData: res.data });\n        }\n      );\n    } else {\n      //Return all users without filtering\n      this.getUserData();\n    }\n  };\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  render() {\n    return (\n      <>\n        <Search click={this.search} />\n        {this.getTeacherList()}\n      </>\n    );\n  }\n}\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\UserManagment\\Students.js",["269","270","271","272","273","274","275"],"import React, { Component } from \"react\";\nimport ListItem from \"../../../ui-elements/ListItem/ListItem\";\nimport { Button } from \"react-bootstrap\";\nimport http from \"../../../../shared/http\";\nimport $ from \"jquery\";\nimport Search from \"../../../ui-elements/Search/Search\";\n\nexport default class Students extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userData: [],\n    };\n  }\n\n  //Delete a user account\n  deleteClickListener = (item) => {\n    let confirmation = window.confirm(\"Are you sure to want to delete?\");\n\n    if (confirmation) {\n      http(\n        \"POST\",\n        \"/admin/usermanagement/delete\",\n        { userId: item.id },\n        (res) => {\n          if (res.status == 200) {\n            alert(\"Student account deleted successfully\");\n\n            document.getElementById(item.id).style.display = \"none\";\n          } else {\n            alert(res.data);\n          }\n        }\n      );\n    }\n  };\n\n  //Disable / Enable account\n  disableClickListener = (event, item) => {\n    if (event.target.value == \"Disable\") {\n      let confirmation = window.confirm(\"Are sure to Disable account?\");\n\n      if (confirmation) {\n        http(\n          \"POST\",\n          \"/admin/usermanagement/disable\",\n          { userId: item.id },\n          (res) => {\n            if (res.status == 200) {\n              alert(\"Student Account disabled Successfully\");\n              this.changeToEnable(item);\n            } else {\n              alert(res.data);\n            }\n          }\n        );\n      }\n    } else {\n      let confirmation = window.confirm(\"Are you sure to Enable account?\");\n\n      if (confirmation) {\n        http(\n          \"POST\",\n          \"/admin/usermanagement/enable\",\n          { userId: item.id },\n          (res) => {\n            if (res.status == 200) {\n              alert(\"Student Account enabled Successfully\");\n              this.changeToDisable(item);\n            } else {\n              alert(res.data);\n            }\n          }\n        );\n      }\n    }\n  };\n\n  //Change style of button\n  changeToDisable = (student) => {\n    let button = $(\"#\" + student.id + \" input[name='changestatus']\");\n    button.attr(\"value\", \"Disable\");\n    button.removeClass(\"btn-success\");\n    button.addClass(\"btn-warning\");\n  };\n\n  changeToEnable = (student) => {\n    let button = $(\"#\" + student.id + \" input[name='changestatus']\");\n    button.attr(\"value\", \"Enable\");\n    button.removeClass(\"btn-warning\");\n    button.addClass(\"btn-success\");\n  };\n\n  getStudentList = () => {\n    let students = this.state.userData.map((item) => {\n      console.log(item);\n      return (\n        <div className=\"mt-1\" id={item.id}>\n          <ListItem height=\"180px\">\n            {{\n              left: (\n                <div>\n                  <p>Name: {item.name}</p>\n\n                  <p>Email: {item.email}</p>\n                  <p>Parent Email: {item.parentEmail}</p>\n                  <p>Register Number: {item.registerNumber}</p>\n\n                  <Button\n                    type=\"submit\"\n                    className=\" mr-3 btn btn-danger\"\n                    onClick={() => this.deleteClickListener(item)}\n                  >\n                    Delete\n                  </Button>\n                </div>\n              ),\n              right: (\n                <div class=\"text-right\">\n                  <p>Class: {item.class}</p>\n                  <p>Batch: {item.batch}</p>\n                  <br />\n                  <br />\n                  <input\n                    type=\"button\"\n                    className={\n                      item.accountStatus == \"disabled\"\n                        ? \"mr-3 btn btn-success\"\n                        : \"mr-3 btn btn-warning\"\n                    }\n                    onClick={(event) => this.disableClickListener(event, item)}\n                    value={\n                      item.accountStatus == \"disabled\" ? \"Enable\" : \"Disable\"\n                    }\n                  ></input>\n                </div>\n              ),\n            }}\n          </ListItem>\n        </div>\n      );\n    });\n    return students;\n  };\n\n  getUserData = () => {\n    http(\"GET\", \"/admin/usermanagement/student\", null, (res) => {\n      if (res.status == 200) {\n        this.setState({ userData: res.data });\n      } else {\n        alert(\"Error during fetching student data from server\");\n      }\n    });\n  };\n\n  //Search\n  search = (searchText) => {\n    if (searchText) {\n      http(\n        \"POST\",\n        \"/admin/usermanagement/student/search\",\n        { searchString: searchText },\n        (res) => {\n          this.setState({ userData: res.data });\n        }\n      );\n    } else {\n      //Return all users without filtering\n      this.getUserData();\n    }\n  };\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  render() {\n    return (\n      <>\n        <Search click={this.search} />\n        {this.getStudentList()}\n      </>\n    );\n  }\n}\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Institutionstructure\\Subjects.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Institutionstructure\\ClassBatch.js",["276","277","278","279","280","281","282","283"],"import React, { Component } from \"react\";\r\nimport { Button, Row, Form, Col, Modal } from \"react-bootstrap\";\r\n\r\nimport { FaMinus, FaPencilAlt, FaPlus } from \"react-icons/fa\";\r\nimport ListItem from \"../../../ui-elements/ListItem/ListItem\";\r\nimport configureDialogBox from \"../../../../shared/dailogBox\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport http from \"../../../../shared/http\";\r\n\r\nclass ClassBatch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { classList: null };\r\n  }\r\n\r\n  //Global member variables\r\n  classToEdit = \"\";\r\n\r\n  //Creating necessary ref objects\r\n  newClassName = React.createRef();\r\n  newBatchName = React.createRef();\r\n  classNewName = React.createRef(); //for editing class name\r\n  batchNewName = React.createRef();\r\n\r\n  getClasses = () => {\r\n    //getting class data from db\r\n    http(\r\n      \"POST\",\r\n      \"/admin/institutionstructure/class\",\r\n      { department: this.props.match.params.departmentId },\r\n      async (res) => {\r\n        let classes = [...res.data];\r\n\r\n        //This will return options for the <select> to select HOD for each department\r\n        let getTeacherOptions = (cls) => {\r\n          //Get teachers in department options\r\n          let teacherOptions = [];\r\n          if (cls.teachers) {\r\n            teacherOptions = cls.teachers.map((teacher, index, array) => {\r\n              return <option value={teacher._id}>{teacher.name}</option>;\r\n            });\r\n          }\r\n\r\n          return (\r\n            <>\r\n              {/* //Setting Mentor option */}\r\n              {cls.assignedMentor ? (\r\n                <option value={cls.assignedMentor._id} selected>\r\n                  {cls.assignedMentor.name}\r\n                </option>\r\n              ) : (\r\n                <option selected>NO MENTOR</option>\r\n              )}\r\n              {teacherOptions}\r\n            </>\r\n          );\r\n        };\r\n\r\n        let classList = classes.map((Class, index) => {\r\n          // let Class = classes[key];\r\n\r\n          return (\r\n            <ListItem height=\"120px\">\r\n              {{\r\n                left: (\r\n                  <div className=\"p-1 \">\r\n                    <Form className=\"md-6\">\r\n                      <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Row>\r\n                          <Col>\r\n                            <Form.Label className=\"text-dark\">\r\n                              {Class.name}\r\n                            </Form.Label>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Form.Label className=\"text-dark\">\r\n                              {Class.batch}\r\n                            </Form.Label>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Form.Label className=\"text-dark\">\r\n                              Mentor:\r\n                            </Form.Label>\r\n                          </Col>\r\n                          <Col>\r\n                            <Form.Control\r\n                              as=\"select\"\r\n                              defaultValue=\"Class Mentor\"\r\n                              placeholder=\"Class Mentor\"\r\n                              style={{ width: \"200px\" }}\r\n                              onChange={(event) => {\r\n                                this.changeMentor(event, Class.id);\r\n                              }}\r\n                            >\r\n                              {getTeacherOptions(Class)}\r\n                            </Form.Control>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form.Group>\r\n                    </Form>\r\n                  </div>\r\n                ),\r\n                right: (\r\n                  <div>\r\n                    <Button\r\n                      className=\"mr-4 btn btn-danger\"\r\n                      onClick={() => {\r\n                        this.removeClass(Class.id);\r\n                      }}\r\n                    >\r\n                      <FaMinus />\r\n                    </Button>\r\n\r\n                    <a\r\n                      href=\"#\"\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#editclass\"\r\n                      style={{ color: \"white\" }}\r\n                    >\r\n                      <Button\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={() => {\r\n                          this.setEditingClass(Class.id);\r\n                        }}\r\n                      >\r\n                        <FaPencilAlt />\r\n                      </Button>{\" \"}\r\n                    </a>\r\n                  </div>\r\n                ),\r\n              }}\r\n            </ListItem>\r\n          );\r\n        });\r\n        this.setState({ classList });\r\n      }\r\n    );\r\n  };\r\n\r\n  //To add a new class\r\n  addClass = () => {\r\n    let className = this.newClassName.current.value;\r\n    let batchName = this.newBatchName.current.value;\r\n\r\n    if (className == \"\" || batchName == \"\") {\r\n      alert(\"Please fill all data\");\r\n    } else {\r\n      http(\r\n        \"POST\",\r\n        \"/admin/institutionstructure/class/add\",\r\n        {\r\n          className,\r\n          batchName,\r\n          department: this.props.match.params.departmentId,\r\n        },\r\n        (res) => {\r\n          if (res.status == 200) {\r\n            alert(\"Class addedd successfully\");\r\n          } else {\r\n            alert(res.data);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  setEditingClass = (classId) => {\r\n    this.classToEdit = classId;\r\n  };\r\n\r\n  //Edit an existing class\r\n  editClass = () => {\r\n    let newName = this.classNewName.current.value; //Getting new name\r\n    let newBatch = this.batchNewName.current.value;\r\n\r\n    if (newName == \"\" || newBatch == \"\") {\r\n      alert(\"Please enter all data\");\r\n    } else {\r\n      http(\r\n        \"POST\",\r\n        \"/admin/institutionstructure/class/edit\",\r\n        { classId: this.classToEdit, newName, newBatch },\r\n        (res) => {\r\n          alert(res.data);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  //Remove a class\r\n  removeClass = (classId) => {\r\n    http(\r\n      \"POST\",\r\n      \"/admin/institutionstructure/class/remove\",\r\n      { classId },\r\n      (res) => {\r\n        alert(res.data);\r\n      }\r\n    );\r\n  };\r\n\r\n  //Change Mentor of a department\r\n  changeMentor = (event, classId) => {\r\n    http(\r\n      \"POST\",\r\n      \"/admin/institutionstructure/class/changementor\",\r\n      {\r\n        classId,\r\n        mentor: event.target.value,\r\n      },\r\n      (res) => {\r\n        alert(res.data);\r\n      }\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getClasses();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          {/* Configuring The add department */}\r\n          {configureDialogBox(\r\n            \"addclass\",\r\n            \"ADD CLASS\",\r\n            <>\r\n              <form>\r\n                <label className=\"black\" for=\"class\">\r\n                  Class Name:{\" \"}\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"class\"\r\n                  id=\"class\"\r\n                  ref={this.newClassName}\r\n                ></input>\r\n                <label className=\"black\" for=\"batch\">\r\n                  Batch:{\" \"}\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"batch\"\r\n                  id=\"batch\"\r\n                  ref={this.newBatchName}\r\n                ></input>\r\n              </form>\r\n            </>,\r\n            <>\r\n              <button className=\"btn btn-primary\" onClick={this.addClass}>\r\n                OK\r\n              </button>\r\n            </>\r\n          )}\r\n          {/* Configuring The edit class */}\r\n          {configureDialogBox(\r\n            \"editclass\",\r\n            \"EDIT CLASS\",\r\n            <>\r\n              <form>\r\n                <label className=\"black\" for=\"className\">\r\n                  Class Name:{\" \"}\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"className\"\r\n                  id=\"className\"\r\n                  ref={this.classNewName}\r\n                ></input>\r\n                <label className=\"black\" for=\"batch\">\r\n                  Batch:{\" \"}\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"batch\"\r\n                  id=\"batch\"\r\n                  ref={this.batchNewName}\r\n                ></input>\r\n              </form>\r\n            </>,\r\n            <>\r\n              <button className=\"btn btn-primary\" onClick={this.editClass}>\r\n                EDIT\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n        {this.state.classList}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ClassBatch);\r\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Institutionstructure\\Department.js",["284","285","286","287","288","289"],"import React from \"react\";\r\nimport { Button, Form, Col, Row } from \"react-bootstrap\";\r\nimport { FaMinus, FaPencilAlt } from \"react-icons/fa\";\r\nimport ListItem from \"../../../ui-elements/ListItem/ListItem\";\r\nimport configureDialogBox from \"../../../../shared/dailogBox\";\r\nimport \"./Department.css\";\r\nimport http from \"../../../../shared/http\";\r\nimport $ from \"jquery\";\r\n\r\nclass Departments extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      departmentList: null,\r\n    };\r\n  }\r\n\r\n  //Global member variables\r\n  departmentToEdit = \"\";\r\n\r\n  //Creating necessary ref objects\r\n  newDepartmentName = React.createRef();\r\n  departmentNewName = React.createRef(); //for editing department name\r\n\r\n  getDepartments = () => {\r\n    //getting department data from db\r\n    http(\"GET\", \"/admin/institutionstructure/department\", {}, async (res) => {\r\n      let departments = { ...res.data };\r\n\r\n      //This will return options for the <select> to select HOD for each department\r\n      let getHodOptions = (department) => {\r\n        //Get teachers in department options\r\n        let teacherOptions = [];\r\n        if (department.teachers) {\r\n          teacherOptions = department.teachers.map((teacher, index, array) => {\r\n            return <option value={teacher._id}>{teacher.name}</option>;\r\n          });\r\n        }\r\n\r\n        return (\r\n          <>\r\n            {/* //Setting HOD option */}\r\n            {department.assignedHod ? (\r\n              <option value={department.assignedHod._id} selected>\r\n                {department.assignedHod.name}\r\n              </option>\r\n            ) : (\r\n              <option selected>NO HOD</option>\r\n            )}\r\n            {teacherOptions}\r\n          </>\r\n        );\r\n      };\r\n\r\n      let departmentList = Object.keys(departments).map((key, index) => {\r\n        let department = departments[key];\r\n\r\n        return (\r\n          <div\r\n            onClick={(event) => {\r\n              if (event.target.id == \"list-item-container\")\r\n                this.props.departmentSelected(department.id);\r\n            }}\r\n          >\r\n            <ListItem height=\"90px\">\r\n              {{\r\n                left: (\r\n                  <Form className=\"md-6\">\r\n                    <Form.Group controlId=\"formBasicCheckbox\">\r\n                      <Row>\r\n                        <Col>\r\n                          <Form.Label className=\"text-dark\">{key}</Form.Label>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <Form.Label className=\"text-dark\">\r\n                            Head of the department:\r\n                          </Form.Label>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            defaultValue=\"Department\"\r\n                            placeholder=\"Department\"\r\n                            style={{ width: \"200px\" }}\r\n                            onChange={(e) => {\r\n                              this.changeHod(e, department.id);\r\n                            }}\r\n                          >\r\n                            {getHodOptions(department)}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form.Group>\r\n                  </Form>\r\n                ),\r\n                right: (\r\n                  <div>\r\n                    <Button\r\n                      className=\"btn btn-danger mr-3\"\r\n                      data-id={department.id}\r\n                      onClick={() => {\r\n                        this.removeDepartment(department.id);\r\n                      }}\r\n                    >\r\n                      <FaMinus />\r\n                    </Button>\r\n                    <a\r\n                      href=\"#\"\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#editdept\"\r\n                      style={{ color: \"white\" }}\r\n                    >\r\n                      <Button\r\n                        className=\"btn btn-secondary\"\r\n                        data-id={department.id}\r\n                        onClick={() => {\r\n                          this.setEditingDepartment(department.id);\r\n                        }}\r\n                      >\r\n                        <FaPencilAlt />\r\n                      </Button>\r\n                    </a>\r\n                  </div>\r\n                ),\r\n              }}\r\n            </ListItem>\r\n          </div>\r\n        );\r\n      });\r\n      this.setState({ departmentList });\r\n    });\r\n  };\r\n\r\n  //To add a new department\r\n  addDepartment = () => {\r\n    let departmentName = this.newDepartmentName.current.value;\r\n\r\n    if (departmentName == \"\") {\r\n      alert(\"Please fill department name\");\r\n    } else {\r\n      http(\r\n        \"POST\",\r\n        \"/admin/institutionstructure/department/add\",\r\n        { departmentName },\r\n        (res) => {\r\n          if (res.status == 200) {\r\n            alert(\"Department addedd successfully\");\r\n          } else {\r\n            alert(res.data);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  setEditingDepartment = (departmentID) => {\r\n    this.departmentToEdit = departmentID;\r\n  };\r\n\r\n  //Edit an existing department\r\n  editDepartment = () => {\r\n    let newName = this.departmentNewName.current.value; //Getting new name\r\n\r\n    if (newName == \"\") {\r\n      alert(\"Please enter a new name for the department\");\r\n    } else {\r\n      http(\r\n        \"POST\",\r\n        \"/admin/institutionstructure/department/edit\",\r\n        { departmentId: this.departmentToEdit, newName },\r\n        (res) => {\r\n          alert(res.data);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  //Remove a department\r\n  removeDepartment = (departmentId) => {\r\n    http(\r\n      \"POST\",\r\n      \"/admin/institutionstructure/department/remove\",\r\n      { departmentId },\r\n      (res) => {\r\n        alert(res.data);\r\n      }\r\n    );\r\n  };\r\n\r\n  //Change HOD of a department\r\n  changeHod = (event, departmentId) => {\r\n    http(\r\n      \"POST\",\r\n      \"/admin/institutionstructure/department/changehod\",\r\n      {\r\n        departmentId,\r\n        hod: event.target.value,\r\n      },\r\n      (res) => {\r\n        alert(res.data);\r\n      }\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    //get department data from server\r\n    this.getDepartments();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"departmentList\">\r\n        <div>\r\n          {/* Configuring The add department */}\r\n          {configureDialogBox(\r\n            \"adddept\",\r\n            \"ADD DEPARTMENT\",\r\n            <>\r\n              <label className=\"black\" for=\"dept\">\r\n                Name of department:{\" \"}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"dept\"\r\n                id=\"dept\"\r\n                ref={this.newDepartmentName}\r\n              ></input>\r\n            </>,\r\n            <>\r\n              <button className=\"btn btn-primary\" onClick={this.addDepartment}>\r\n                ADD\r\n              </button>\r\n            </>\r\n          )}\r\n          {/* Configuring The edit department */}\r\n          {configureDialogBox(\r\n            \"editdept\",\r\n            \"EDIT DEPARTMENT\",\r\n            <>\r\n              <form>\r\n                <label className=\"black\" for=\"dept\">\r\n                  Name of department:{\" \"}\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"dept\"\r\n                  id=\"dept\"\r\n                  ref={this.departmentNewName}\r\n                ></input>\r\n                <br />\r\n              </form>\r\n            </>,\r\n            <>\r\n              <button className=\"btn btn-primary\" onClick={this.editDepartment}>\r\n                OK\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        {this.state.departmentList}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Departments;\r\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\setPassword\\SetPassword.js",["290","291"],"import { Component } from \"react\";\nimport \"./SetPassword.css\";\n\nimport http from \"../../../shared/http\";\nclass SetPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: \"\",\n      confirm: \"\",\n      errorMessage: null,\n    };\n  }\n\n  validatePassword = () => {\n    if (this.state.password.length > 0 && this.state.confirm.length > 0) {\n      if (this.state.password === this.state.confirm) {\n        console.log(\"Password Validation Success\");\n        this.setState({ errorMessage: null });\n\n        http(\n          \"POST\",\n          \"/register/finish\",\n          { password: this.state.password },\n          (res) => {\n            if (res.status === 200) {\n              alert(\"Signup Completed\");\n              window.location.href = \"http://localhost:3000/signin\";\n            } else {\n              alert(\"Error: \" + res.data);\n            }\n          }\n        );\n      } else {\n        this.setState({ errorMessage: <p>Passwords do not match</p> });\n      }\n    } else {\n      this.setState({ errorMessage: \"No password entered\" });\n    }\n  };\n\n  onValueChange = (event) => {\n    let newSate = {};\n    newSate[event.target.name] = event.target.value;\n    this.setState(newSate);\n  };\n\n  showPassword = () => {\n    let password = document.getElementById(\"password\");\n    let confirm = document.getElementById(\"confirm\");\n\n    if (password.type == \"password\" && confirm.type == \"password\") {\n      password.type = \"text\";\n      confirm.type = \"text\";\n    } else {\n      password.type = \"password\";\n      confirm.type = \"password\";\n    }\n  };\n\n  render() {\n    return (\n      <form>\n        <center>\n          <p id=\"info-text\">Setup a new Password</p>\n        </center>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            value={this.state.password}\n            onChange={this.onValueChange}\n            placeholder=\"Password\"\n            className=\"form-control mt-3\"\n          />\n          <input\n            type=\"password\"\n            name=\"confirm\"\n            id=\"confirm\"\n            value={this.state.confirm}\n            onChange={this.onValueChange}\n            placeholder=\"Confirm Password\"\n            className=\"form-control mt-3\"\n          />\n          {this.state.errorMessage}\n          <br />\n          <div className=\"form-check\">\n            <input\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              id=\"showPassword\"\n              name=\"showPassword\"\n              onClick={this.showPassword}\n            />\n            <label className=\"form-check-label\" for=\"showPassword\">\n              Show Password\n            </label>\n          </div>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-success\"\n            id=\"finish\"\n            onClick={this.validatePassword}\n          >\n            FINISH\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default SetPassword;\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\sigup\\googleSignup\\GoogleSignup.js",["292","293","294","295"],"import { Component } from \"react\";\nimport { withRouter, useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport \"./GoogleSignup.css\";\n\nimport Student from \"../student/student\";\nimport Teacher from \"../teacher/teacher\";\n\nimport http from \"../../../../shared/http\";\n\nconst mapStateToProps = (state) => {\n  return {\n    signupData: state.login.signupData,\n    validSignupData: state.login.validSignupData,\n  };\n};\n\nlet GOOGLE_DATA = {};\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accountType: \"student\",\n      googleData: {},\n    };\n  }\n\n  query = null;\n\n  selectAccountType = (event) => {\n    this.setState({ accountType: event.target.value });\n  };\n\n  finishSignup = () => {\n    console.log(this.props.signupData, GOOGLE_DATA);\n    http(\n      \"POST\",\n      \"/register/googlesignup\",\n      { ...this.props.signupData, ...GOOGLE_DATA },\n      (res) => {\n        if (res.status == 200) {\n          alert(\"Signup Completed\");\n          document.location.href = \"http://localhost:3000/signin\";\n        } else {\n          alert(res.data);\n        }\n      }\n    );\n  };\n\n  useQuery = () => {\n    let query = new URLSearchParams(this.props.location.search);\n    return query;\n  };\n\n  getGoogleData = () => {\n    this.query = this.useQuery();\n\n    if (this.query.get(\"name\")) GOOGLE_DATA.name = this.query.get(\"name\");\n    if (this.query.get(\"email\")) GOOGLE_DATA.email = this.query.get(\"email\");\n    if (this.query.get(\"id\")) GOOGLE_DATA.googleId = this.query.get(\"id\");\n  };\n\n  render() {\n    this.getGoogleData();\n    return (\n      <form>\n        <div className=\"form-group\">\n          <label for=\"account-type\">Select Account Type</label>\n          <br />\n          <select\n            className=\"form-select\"\n            aria-label=\"Default select example\"\n            id=\"account-type\"\n            onChange={this.selectAccountType}\n          >\n            <option value=\"student\" selected>\n              Student\n            </option>\n            <option value=\"teacher\">Teacher</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label>Enter your details</label>\n          {this.state.accountType == \"student\" ? (\n            <Student\n              google\n              data={{\n                name: GOOGLE_DATA.name,\n                email: GOOGLE_DATA.email,\n                id: GOOGLE_DATA.id,\n              }}\n            />\n          ) : null}\n          {this.state.accountType == \"teacher\" ? (\n            <Teacher\n              google\n              data={{\n                name: GOOGLE_DATA.name,\n                email: GOOGLE_DATA.email,\n                id: GOOGLE_DATA.id,\n              }}\n            />\n          ) : null}\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-success\"\n            id=\"login-btn\"\n            onClick={this.finishSignup}\n            disabled={!this.props.validSignupData}\n          >\n            FINISH\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(Signup));\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\sigup\\signup.js",["296","297"],"import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./signup.css\";\n\nimport Student from \"./student/student\";\nimport Teacher from \"./teacher/teacher\";\n\nimport http from \"../../../shared/http\";\n\nconst mapStateToProps = (state) => {\n  return {\n    signupData: state.login.signupData,\n    validSignupData: state.login.validSignupData,\n  };\n};\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accountType: \"student\",\n    };\n  }\n\n  selectAccountType = (event) => {\n    this.setState({ accountType: event.target.value });\n  };\n\n  verifyEmail = () => {\n    if (this.props.validSignupData) {\n      http(\"POST\", \"/register\", this.props.signupData, (res) => {\n        if (res.status === 200) {\n          this.props.otpSent();\n        } else {\n          alert(res.data);\n\n          //TEST DATA\n        }\n      });\n    }\n  };\n\n  googleSignup = () => {\n    document.location.href = \"http://localhost:4000/register/google\";\n  };\n\n  render() {\n    return (\n      <form>\n        <div className=\"form-group\">\n          <label for=\"account-type\">Select Account Type</label>\n          <br />\n          <select\n            className=\"form-select\"\n            aria-label=\"Default select example\"\n            id=\"account-type\"\n            onChange={this.selectAccountType}\n          >\n            <option value=\"student\" selected>\n              Student\n            </option>\n            <option value=\"teacher\">Teacher</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label>Enter your details</label>\n          {this.state.accountType == \"student\" ? <Student /> : null}\n          {this.state.accountType == \"teacher\" ? <Teacher /> : null}\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-success\"\n            id=\"login-btn\"\n            onClick={this.verifyEmail}\n            disabled={!this.props.validSignupData}\n          >\n            VERIFY EMAIL\n          </button>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            id=\"google-login-btn\"\n            onClick={this.googleSignup}\n          >\n            SIGN UP WITH GOOGLE\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(Signup));\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\verifyOtp\\verifyOtp.js",["298","299","300","301"],"import { Component } from \"react\";\nimport \"./verifyOtp.css\";\n\nimport http from \"../../../shared/http\";\nclass VerifyOtp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: {},\n      seconds: 60 * 5,\n      resendEnable: false,\n      otp: \"\",\n      otpError: null,\n    };\n    this.timer = 0;\n    this.startTimer = this.startTimer.bind(this);\n    this.countDown = this.countDown.bind(this);\n  }\n\n  secondsToTime(secs) {\n    let hours = Math.floor(secs / (60 * 60));\n\n    let divisor_for_minutes = secs % (60 * 60);\n    let minutes = Math.floor(divisor_for_minutes / 60);\n\n    let divisor_for_seconds = divisor_for_minutes % 60;\n    let seconds = Math.ceil(divisor_for_seconds);\n\n    let obj = {\n      h: hours,\n      m: minutes,\n      s: seconds,\n    };\n    return obj;\n  }\n\n  componentDidMount() {\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\n    this.setState({ time: timeLeftVar });\n  }\n\n  startTimer() {\n    if (this.timer == 0 && this.state.seconds > 0) {\n      this.timer = setInterval(this.countDown, 1000);\n    }\n  }\n\n  countDown() {\n    // Remove one second, set state so a re-render happens.\n    let seconds = this.state.seconds - 1;\n    this.setState({\n      time: this.secondsToTime(seconds),\n      seconds: seconds,\n    });\n\n    // Check if we're at zero.\n    if (seconds == 0) {\n      clearInterval(this.timer);\n      this.setState({ resendEnable: true });\n    }\n  }\n\n  resendOtp = () => {\n    http(\"POST\", \"/register/resendotp\", {}, (res) => {\n      if (res.status == 200) {\n        console.log(\"OTP resend\");\n      } else {\n        alert(\n          `Error ${res.status} during otp resend\\nError message logged in console.`\n        );\n        console.log(res);\n      }\n    });\n  };\n\n  showAlert = () => {};\n\n  proceed = () => {\n    if (this.state.otp.length > 0) {\n      this.setState({ otpError: null });\n\n      http(\n        \"POST\",\n        \"/register/otp\",\n        {\n          otp: this.state.otp,\n        },\n        (res) => {\n          console.log(\"OTP Sent to server\");\n          if (res.status == 203) {\n            console.log(res.data);\n            alert(\"OTP Not verified: \" + res.data);\n          } else {\n            console.log(\"OTP verification Success\");\n            this.props.otpVerified();\n          }\n        }\n      );\n    } else {\n      this.setState({ otpError: <p>Please enter OTP</p> });\n    }\n  };\n\n  otpChange = (event) => {\n    if (this.state.otp.length > 0) {\n      this.setState({ otpError: null });\n    }\n    this.setState({ otp: event.target.value });\n  };\n\n  render() {\n    this.startTimer();\n\n    return (\n      <form>\n        <center>\n          <p id=\"info-text\">An OTP has been sent to your email</p>\n        </center>\n        <div className=\"form-group\">\n          <label for=\"otp\">Enter OTP</label>\n          <br />\n          <input\n            type=\"text\"\n            name=\"otp\"\n            id=\"otp\"\n            placeholder=\"OTP\"\n            className=\"form-control mt-3\"\n            value={this.state.otp}\n            onChange={this.otpChange}\n          />\n          {this.state.otpError}\n          <p>\n            Resend OTP: {this.state.time.m}:{this.state.time.s}\n          </p>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            id=\"resend-otp\"\n            disabled={!this.state.resendEnable}\n            onClick={this.resendOtp}\n          >\n            RESEND OTP\n          </button>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-success\"\n            id=\"proceed\"\n            onClick={this.proceed}\n          >\n            PROCEED\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default VerifyOtp;\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\shared\\http.js",["302"],"import axios from \"axios\";\nimport { serverDomain } from \"../config\";\nimport parseCookie from \"./parseCookie\";\n\nlet http = (\n  method = \"GET\",\n  url = \"/\",\n  body = null,\n  callback = null,\n  errorCallback = null\n) => {\n  //Variable for storing response from server\n  let responseFromServer;\n\n  if (method == \"POST\") {\n    body = { ...body, cookies: parseCookie() };\n  }\n\n  axios({\n    method: method,\n    url: serverDomain + url,\n    data: body,\n    withCredentials: true,\n  })\n    .then((response) => {\n      console.log(`${method} request send to ${serverDomain + url}`);\n      console.log(\"Response from server: \", response);\n      responseFromServer = response;\n\n      if (callback) callback(response);\n    })\n    .catch((err) => {\n      alert(\"Error occured during http request. \\n Check console for log data\");\n      console.log(err);\n      if (errorCallback) errorCallback(err);\n    });\n\n  return responseFromServer;\n};\n\nexport default http;\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\signin\\signin.js",["303","304","305","306"],"/**\n * CONTENT OF THE SIGNIN TAB\n */\n\nimport { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./signin.css\";\n\nimport http from \"../../../shared/http\";\nimport configureDialogBox from \"../../../shared/dailogBox\";\n\nclass Signin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\", //USERNAME entered in the login form\n      password: \"\", //PASSWORD entered in the login form\n      erroMessage: null, //Error messsage if any (These are displayed bottom side of the login form)\n      reportEmail: \"\", //Email id of the user (REPORT form)\n      reportContent: \"\", //Content of the report (REPORT from)\n      reportError: null,\n    };\n  }\n\n  showPassword = () => {\n    let password = document.getElementById(\"password\");\n\n    if (password.type == \"password\") {\n      password.type = \"text\";\n    } else {\n      password.type = \"password\";\n    }\n  };\n\n  //Setting form data into the component state\n  inputChange = (event) => {\n    let newState = {};\n    newState[event.target.name] = event.target.value;\n\n    this.setState(newState);\n  };\n\n  /**\n   * When LOGIN button clicked\n   */\n\n  login = () => {\n    if (this.state.username.length > 0 && this.state.password.length > 0) {\n      this.setState({ erroMessage: null });\n      http(\n        \"POST\",\n        \"/login\",\n        { username: this.state.username, password: this.state.password },\n        (res) => {\n          if (res.status == 200) {\n            alert(\"Login Successful\");\n          } else {\n            this.setState({\n              erroMessage: <p>{res.data}</p>,\n            });\n          }\n        }\n      );\n    } else {\n      this.setState({ erroMessage: <p>Please fill all fields</p> });\n    }\n  };\n\n  // When googleSignin button clicked\n  googleSignin = () => {\n    document.location.href = \"http://localhost:4000/register/google\";\n  };\n\n  //Validate Email ID\n  validateEmail = (email) => {\n    if (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  reportFormChange = (e) => {\n    let newState = {};\n\n    newState[e.target.name] = e.target.value;\n    this.setState(newState);\n\n    this.validateReportForm();\n  };\n\n  validateReportForm = () => {\n    if (this.validateEmail(this.state.reportEmail)) {\n      if (this.state.reportContent === \"\") {\n        this.setState({ reportError: \"Content is empty\" });\n        return false;\n      } else {\n        this.setState({ reportError: null });\n        return true;\n      }\n    } else {\n      this.setState({ reportError: \"Email not valid\" });\n      return false;\n    }\n  };\n\n  //When clicking Send in report form\n  sendReport = (e) => {\n    e.preventDefault();\n    if (this.validateReportForm()) {\n      http(\n        \"POST\",\n        \"/login/report\",\n        {\n          email: this.state.reportEmail,\n          message: this.state.reportContent,\n        },\n        (res) => {\n          if (res.status == 200) {\n            alert(\"Report sent successfully\");\n          } else {\n            alert(res.data);\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    return (\n      <form>\n        {/* Configuring The reportModal */}\n        {configureDialogBox(\n          \"reportModal\",\n          \"Report an Issue\",\n          <>\n            <form>\n              <label className=\"black\" for=\"email\">\n                Enter your email:{\" \"}\n              </label>\n              <input\n                onChange={this.reportFormChange}\n                type=\"email\"\n                name=\"reportEmail\"\n                id=\"email\"\n                className=\"m-3\"\n                value={this.state.reportEmail}\n              ></input>\n              <br />\n\n              <label className=\"black\" for=\"content\">\n                Enter content:{\" \"}\n              </label>\n              <textarea\n                onChange={this.reportFormChange}\n                rows=\"10\"\n                name=\"reportContent\"\n                id=\"content\"\n                className=\"m-3\"\n              ></textarea>\n            </form>\n            {this.state.reportError ? <p>{this.state.reportError}</p> : null}\n          </>,\n          <>\n            <button className=\"btn btn-primary\" onClick={this.sendReport}>\n              Send\n            </button>\n          </>\n        )}\n\n        <div className=\"form-group\">\n          <label for=\"username\">Username</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"username\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.inputChange}\n            placeholder=\"Username\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label for=\"password\">Password</label>\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            id=\"password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.inputChange}\n            placeholder=\"Password\"\n          />\n        </div>\n        {this.state.erroMessage}\n        <div className=\"form-check\">\n          <input\n            type=\"checkbox\"\n            className=\"form-check-input\"\n            id=\"showPassword\"\n            name=\"showPassword\"\n            onClick={this.showPassword}\n          />\n          <label className=\"form-check-label\" for=\"showPassword\">\n            Show Password\n          </label>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-success\"\n            id=\"login-btn\"\n            onClick={this.login}\n          >\n            LOGIN\n          </button>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            id=\"google-login-btn\"\n            onClick={this.googleSignin}\n          >\n            SIGN IN WITH GOOGLE\n          </button>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <p style={{ \"margin-top\": \"8px\", color: \"white\" }}>\n            Need help?{\" \"}\n            <a\n              href=\"#\"\n              data-toggle=\"modal\"\n              data-target=\"#reportModal\"\n              style={{ color: \"white\" }}\n            >\n              Report\n            </a>\n          </p>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(Signin);\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Message\\Message.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\sigup\\teacher\\teacher.js",["307"],"import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport http from \"../../../../shared/http\";\n\nimport \"./teacher.css\";\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateData: (payload) => dispatch({ type: \"updateSignupData\", payload }),\n    clearData: () => dispatch({ type: \"clearSignupData\" }),\n  };\n};\nclass Teacher extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      emailValidation: null,\n      departmentList: null,\n      departments: null,\n    };\n  }\n\n  inputValues = {};\n\n  validateForm = () => {\n    if (\n      this.inputValues.name &&\n      this.inputValues.registerNumber &&\n      this.inputValues.department &&\n      this.inputValues.email\n    ) {\n      this.setState({ error: null });\n      if (\n        /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(this.inputValues.email)\n      ) {\n        this.setState({ emailValidation: null });\n\n        //Successful validation\n        return true;\n      } else {\n        this.setState({ emailValidation: <p>Enter a valid email address</p> });\n        return false;\n      }\n    } else {\n      this.setState({\n        error: <p style={{ color: \"black\" }}>PLEASE FILL ALL DATA</p>,\n      });\n      return false;\n    }\n  };\n\n  onValueChange = (event) => {\n    this.inputValues[event.target.name] = event.target.value;\n    let valid = this.validateForm();\n\n    if (valid) {\n      this.props.updateData({ accountType: \"teacher\", ...this.inputValues });\n    } else {\n      this.props.clearData();\n    }\n  };\n\n  setView = () => {\n    if (this.props.google) {\n      document\n        .getElementById(\"email\")\n        .setAttribute(\"value\", this.props.data.email);\n      document\n        .getElementById(\"name\")\n        .setAttribute(\"value\", this.props.data.name);\n\n      document.getElementById(\"email\").setAttribute(\"disabled\", \"true\");\n      document.getElementById(\"name\").setAttribute(\"disabled\", \"true\");\n    }\n  };\n\n  //Get department details from db\n  getDepartmentList = () => {\n    http(\"GET\", \"/login/departments\", null, (res) => {\n      if (res.status == 200) {\n        this.setState({ departments: res.data });\n        this.setupDepartmentList();\n      } else {\n        alert(\"Error returning department list\");\n      }\n    });\n  };\n\n  //Setup JSX element to show the department list using <option> tag\n  setupDepartmentList = () => {\n    let departmentList = this.state.departments.map(\n      (department, index, array) => {\n        return <option value={department._id}>{department.name}</option>;\n      }\n    );\n\n    this.setState({ departmentList });\n  };\n\n  componentDidMount() {\n    this.props.clearData();\n    this.setView();\n    this.getDepartmentList();\n  }\n\n  render() {\n    if (this.props.google) {\n      this.inputValues.name = this.props.data.name;\n      this.inputValues.email = this.props.data.email;\n    }\n\n    return (\n      <div>\n        {this.state.error}\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"name\"\n          placeholder=\"Name\"\n          name=\"name\"\n          onChange={this.onValueChange}\n        />\n        <input\n          type=\"text\"\n          className=\"form-control mt-3\"\n          id=\"id-number\"\n          name=\"registerNumber\"\n          onChange={this.onValueChange}\n          placeholder=\"ID Number\"\n        />\n        <select\n          className=\"form-select mt-3\"\n          aria-label=\"Default select example\"\n          name=\"department\"\n          onChange={this.onValueChange}\n          id=\"department\"\n        >\n          <option selected value=\"\">\n            --SELECT DEPARTMENT--\n          </option>\n          {this.state.departmentList}\n        </select>\n        <input\n          type=\"email\"\n          className=\"form-control mt-3\"\n          id=\"email\"\n          name=\"email\"\n          onChange={this.onValueChange}\n          placeholder=\"Email\"\n        />\n        {this.state.emailValidation}\n      </div>\n    );\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Teacher);\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\config.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\shared\\parseCookie.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\login\\sigup\\student\\student.js",["308","309"],"import { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport http from \"../../../../shared/http\";\n\nimport \"./student.css\";\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateData: (payload) => dispatch({ type: \"updateSignupData\", payload }),\n    clearData: () => dispatch({ type: \"clearSignupData\" }),\n  };\n};\nclass Student extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      parentEmailError: null,\n      emailError: null,\n      classList: null,\n      classOptions: null,\n      batchOptions: null,\n    };\n  }\n\n  inputValues = {};\n\n  validateEmail = (email) => {\n    if (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  validateForm = () => {\n    if (\n      this.inputValues.name &&\n      this.inputValues.registerNumber &&\n      this.inputValues.class &&\n      this.inputValues.batch &&\n      this.inputValues.email &&\n      this.inputValues.parentEmail\n    ) {\n      this.setState({ error: null });\n      if (this.validateEmail(this.inputValues.email)) {\n        this.setState({ emailError: null });\n      } else {\n        this.setState({ emailError: <p>Enter a valid email address</p> });\n      }\n\n      if (this.validateEmail(this.inputValues.parentEmail)) {\n        this.setState({ parentEmailError: null });\n      } else {\n        this.setState({ parentEmailError: <p>Enter a valid email address</p> });\n      }\n\n      if (\n        this.validateEmail(this.inputValues.email) &&\n        this.validateEmail(this.inputValues.parentEmail)\n      ) {\n        //Successful validation\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      this.setState({\n        error: <p style={{ color: \"black\" }}>PLEASE FILL ALL DATA</p>,\n      });\n      return false;\n    }\n  };\n\n  onValueChange = (event) => {\n    this.inputValues[event.target.name] = event.target.value;\n    let valid = this.validateForm();\n\n    if (valid) {\n      this.props.updateData({ accountType: \"student\", ...this.inputValues });\n    } else {\n      this.props.clearData();\n    }\n\n    if (event.target.name == \"class\") {\n      //Setup batch details based on the selected class\n      this.setupBatchOptions();\n    }\n  };\n\n  setView = () => {\n    if (this.props.google) {\n      document\n        .getElementById(\"email\")\n        .setAttribute(\"value\", this.props.data.email);\n      document\n        .getElementById(\"name\")\n        .setAttribute(\"value\", this.props.data.name);\n\n      document.getElementById(\"email\").setAttribute(\"disabled\", \"true\");\n      document.getElementById(\"name\").setAttribute(\"disabled\", \"true\");\n    }\n  };\n\n  //Get Class data from the database\n  getClasses = () => {\n    http(\"GET\", \"/login/getclasses\", {}, (res) => {\n      if (res.status == 200) {\n        this.setState({ classList: res.data });\n        this.setupClassOptions();\n      }\n    });\n  };\n\n  //Setup the options for the <select> for classes\n  setupClassOptions = () => {\n    //Options JSX\n    let options = [];\n\n    options = Object.keys(this.state.classList).map((key, array) => {\n      return (\n        <>\n          <option value={key}>{key}</option>\n        </>\n      );\n    });\n\n    //Setting class list options to display\n    this.setState({ classOptions: options });\n  };\n\n  //Setup the options for the <select> for batches based on the selected Class\n  setupBatchOptions = () => {\n    //Currently selected class\n    let Class = this.inputValues.class;\n\n    //Getting batches of the selected class\n    let batches = this.state.classList[Class].batches;\n\n    let options = batches.map((batch, index, array) => {\n      return (\n        <>\n          <option value={batch}>{batch}</option>\n        </>\n      );\n    });\n\n    //Setting options as state to diaplay it in screen\n    this.setState({ batchOptions: options });\n  };\n\n  componentDidMount() {\n    this.props.clearData();\n    this.setView();\n\n    //Get class info\n    this.getClasses();\n  }\n\n  render() {\n    if (this.props.google) {\n      this.inputValues.name = this.props.data.name;\n      this.inputValues.email = this.props.data.email;\n    }\n\n    return (\n      <div>\n        {this.state.error}\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"name\"\n          name=\"name\"\n          placeholder=\"Name\"\n          onChange={this.onValueChange}\n        />\n        <input\n          type=\"text\"\n          className=\"form-control mt-3\"\n          id=\"admission-number\"\n          name=\"registerNumber\"\n          placeholder=\"Admission Number\"\n          onChange={this.onValueChange}\n        />\n        <select\n          className=\"form-select mt-3\"\n          aria-label=\"Default select example\"\n          id=\"class\"\n          name=\"class\"\n          onChange={this.onValueChange}\n        >\n          <option value=\"\" selected>\n            --CLASS--\n          </option>\n          {this.state.classOptions}\n        </select>\n        <select\n          className=\"form-select mt-3\"\n          aria-label=\"Default select example\"\n          id=\"batch\"\n          onChange={this.onValueChange}\n          name=\"batch\"\n        >\n          <option value=\"\" selected>\n            --BATCH--\n          </option>\n          {this.state.batchOptions}\n        </select>\n        <input\n          type=\"email\"\n          className=\"form-control mt-3\"\n          id=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          onChange={this.onValueChange}\n        />\n        {this.state.emailError}\n        <input\n          type=\"email\"\n          className=\"form-control mt-3\"\n          id=\"parent-email\"\n          name=\"parentEmail\"\n          placeholder=\"Parent Email\"\n          onChange={this.onValueChange}\n        />\n        {this.state.parentEmailError}\n      </div>\n    );\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Student);\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\shared\\dailogBox.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Report\\Report.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\VerifyAccounts\\VerifyAccounts.js",["310","311","312","313"],"import React, { Component } from \"react\";\nimport ListItem from \"../../../ui-elements/ListItem/ListItem\";\nimport { Button, Row, Col, Form } from \"react-bootstrap\";\n\nimport http from \"../../../../shared/http\";\nexport default class VerifyAccounts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userData: [],\n    };\n  }\n\n  //Get users data from the server\n  getUserData = () => {\n    http(\"GET\", \"/admin/verifyaccount\", null, (res) => {\n      if (res.status == 200) {\n        this.setState({ userData: res.data });\n      } else {\n        alert(\"Users data return failed\");\n      }\n    });\n  };\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  acceptUser = (item) => {\n    let confirmation = window.confirm(\"Are you sure you want to accept?\");\n\n    if (confirmation) {\n      http(\n        \"POST\",\n        \"/admin/verifyaccount/accept\",\n        { userId: item.id },\n        (res) => {\n          if (res.status == 200) {\n            alert(\"Account Verified Successfully\");\n            document.getElementById(item.id).style.display = \"none\";\n          } else {\n            alert(\"Error during account verification\");\n          }\n        }\n      );\n    }\n  };\n\n  rejectUser = (item) => {\n    let confirmation = window.confirm(\"Are you sure you want to reject?\");\n\n    if (confirmation) {\n      http(\n        \"POST\",\n        \"/admin/verifyaccount/reject\",\n        { userId: item.id },\n        (res) => {\n          if (res.status == 200) {\n            alert(\"Account Rejected Successfully\");\n            document.getElementById(item.id).style.display = \"none\";\n          } else {\n            alert(\"Error during account rejection\");\n          }\n        }\n      );\n    }\n  };\n\n  getTeacherList = () => {\n    let teachers = this.state.userData.map((item) => {\n      return (\n        <div className=\" mt-1 \" id={item.id}>\n          <ListItem height=\"180px\">\n            {{\n              left: (\n                <div>\n                  <span>\n                    <Row>\n                      <Col>\n                        <p class=\"text-left\">Name: {item.name}</p>\n                      </Col>\n                    </Row>\n                    <p class=\"text-left\">Email: {item.email}</p>\n                    <p class=\"text-left\">Department: {item.department}</p>\n                  </span>{\" \"}\n                  <Col className=\"text-left\">\n                    <Button\n                      type=\"submit\"\n                      className=\" mr-3 btn btn-danger\"\n                      onClick={() => this.rejectUser(item)}\n                    >\n                      Reject\n                    </Button>\n                  </Col>\n                </div>\n              ),\n              right: (\n                <div>\n                  <p class=\"text-right\">\n                    RegisterNumber: {item.registerNumber}\n                  </p>\n                  <br />\n                  <br />\n                  <br />\n                  <Button\n                    type=\"submit\"\n                    className=\" mr-3 btn btn-success\"\n                    onClick={() => this.acceptUser(item)}\n                  >\n                    Accept\n                  </Button>\n                </div>\n              ),\n            }}\n          </ListItem>\n        </div>\n      );\n    });\n\n    return teachers;\n  };\n\n  render() {\n    return <>{this.getTeacherList()}</>;\n  }\n}\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\pages\\Home\\Home.js",["314","315","316"],"import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Row, Col, Form } from \"react-bootstrap\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nimport http from \"../../../../shared/http\";\n\nimport \"./Home.css\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  //Creating ref to the form input\n  password = React.createRef();\n  confirm = React.createRef();\n\n  changePassword = () => {\n    //Getting the form values\n    let passwordValue = this.password.current.value;\n    let confirmValue = this.confirm.current.value;\n\n    //Validating password\n    if (passwordValue != \"\" && confirmValue != \"\") {\n      if (passwordValue === confirmValue)\n        http(\n          \"POST\",\n          \"/admin/changepassword\",\n          { password: passwordValue },\n          (res) => {\n            if (res.status === 200) {\n              alert(\"Password changed successfully\");\n            } else {\n              alert(res.data);\n            }\n          }\n        );\n      else alert(\"Password does not match\");\n    } else {\n      alert(\"Please fill all data\");\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"container mt-5\">\n          <Jumbotron className=\"bg-secondary\" id=\"changePasswordDiv\">\n            <h1 className=\"text-light\">Change password</h1>\n            <Form>\n              <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                <Form.Label column>New Password</Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    ref={this.password}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                <Form.Label column>Confirm Password</Form.Label>\n                <Col sm=\"10\">\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Confirm\"\n                    ref={this.confirm}\n                  />\n                </Col>\n              </Form.Group>\n            </Form>\n\n            <p className=\"ml-2 text-right\">\n              <Button\n                className=\"ml-7\"\n                variant=\"primary\"\n                onClick={this.changePassword}\n              >\n                Save\n              </Button>\n            </p>\n          </Jumbotron>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\AdminMain.js",["317"],"import React, { Component } from \"react\";\r\nimport Admin from \"./Admin\";\r\nimport AdminLogin from \"./AdminLogin/AdminLogin\";\r\nimport http from \"../../shared/http\";\r\n\r\nexport default class AdminMain extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { component: null };\r\n  }\r\n\r\n  checkAuthentication = () => {\r\n    http(\r\n      \"POST\",\r\n      \"/login/checkAdmin\",\r\n      null,\r\n      (res) => {\r\n        if (res.status == 200) {\r\n          this.setState({ component: <Admin /> });\r\n        } else {\r\n          alert(res.data);\r\n          this.setState({ component: null });\r\n        }\r\n      },\r\n      (err) => {\r\n        alert(\"Authentication Failed! Please login again\");\r\n        this.setState({ component: null });\r\n      }\r\n    );\r\n  };\r\n  componentDidMount() {\r\n    this.checkAuthentication();\r\n  }\r\n\r\n  render() {\r\n    return <>{this.state.component ? this.state.component : <AdminLogin />}</>;\r\n  }\r\n}\r\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\admin\\AdminLogin\\AdminLogin.js",["318","319","320"],"import React, { Component } from \"react\";\r\nimport \"./AdminLogin.css\";\r\nimport http from \"../../../shared/http\";\r\n\r\nclass AdminLogin extends Component {\r\n  //Creating ref for the input fields\r\n  username = React.createRef();\r\n  password = React.createRef();\r\n\r\n  //Login button Click listener\r\n  login = (e) => {\r\n    e.preventDefault();\r\n\r\n    //Getting form values\r\n    let username = this.username.current.value;\r\n    let password = this.password.current.value;\r\n\r\n    if (password != \"\" && username != \"\") {\r\n      http(\r\n        \"POST\",\r\n        \"/login/admin\",\r\n        { username, password, adminLogin: true },\r\n        (res) => {\r\n          if (res.status == 200) {\r\n            alert(\"Login Success\");\r\n            //Refresh the page\r\n            window.location.href = \"http://localhost:3000/admin/home\";\r\n          } else {\r\n            alert(res.data);\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      alert(\"Please fill all data\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"container col-md-3 mt-5 p-3\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            border: \"2px solid grey\",\r\n            borderRadius: \"10px\",\r\n          }}\r\n        >\r\n          <form>\r\n            <div class=\"form-group\">\r\n              <h4>ADMIN LOGIN</h4>\r\n              <label for=\"username\">Username</label>\r\n              <input\r\n                ref={this.username}\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                id=\"username\"\r\n                placeholder=\"Enter username\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"password\">Password</label>\r\n              <input\r\n                ref={this.password}\r\n                type=\"password\"\r\n                class=\"form-control\"\r\n                id=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n            <button type=\"submit\" class=\" btn-success\" onClick={this.login}>\r\n              LOGIN\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminLogin;\r\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\ui-elements\\Search\\Search.js",[],"D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\teacher\\TeacherMain.js",["321"],"import React, { Component } from \"react\";\r\nimport Teacher from \"./Teacher\";\r\nimport http from \"../../shared/http\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass TeacherMain extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { component: null };\r\n  }\r\n\r\n  checkAuthentication = () => {\r\n    http(\r\n      \"POST\",\r\n      \"/login/checkTeacher\",\r\n      null,\r\n      (res) => {\r\n        if (res.status == 200) {\r\n          this.setState({ component: <Teacher user={res.data} /> });\r\n        } else {\r\n          alert(res.data);\r\n          this.setState({ component: null });\r\n          this.props.history.push(\"/\");\r\n        }\r\n      },\r\n      (err) => {\r\n        alert(\"Authentication Failed! Please login again\");\r\n        this.setState({ component: null });\r\n        this.props.history.push(\"/\");\r\n      }\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.checkAuthentication();\r\n  }\r\n\r\n  render() {\r\n    return <>{this.state.component ? this.state.component : null}</>;\r\n  }\r\n}\r\n\r\nexport default withRouter(TeacherMain);\r\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\teacher\\TeacherProfile\\TeacherProfile.js",["322","323"],"import React, { Component } from \"react\";\r\nimport NavBar from \"../../ui-elements/navBar/NavBar\";\r\nimport { Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport http from \"../../../shared/http\";\r\nimport $ from \"jquery\";\r\n\r\nimport \"./TeacherProfile.css\";\r\n\r\nexport class TeacherProfile extends Component {\r\n  //Creating required refs\r\n  emailRef = React.createRef();\r\n  passwordRef = React.createRef();\r\n  confirmRef = React.createRef();\r\n\r\n  //Set initial Value of the form\r\n  setFormaData = () => {\r\n    $(this.emailRef.current).attr(\"value\", this.props.user.email);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setFormaData();\r\n  }\r\n\r\n  //Logout user\r\n  logout = () => {\r\n    http(\"GET\", \"/login/logout\", {}, (res) => {\r\n      alert(res.data);\r\n      if (res.status == 200) {\r\n        window.location.href = \"http://localhost:3000/\";\r\n      }\r\n    });\r\n  };\r\n\r\n  //email validation\r\n  validateEmail = (email) => {\r\n    if (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  //Save changes to user account\r\n  saveUserAccount = () => {\r\n    let email = this.emailRef.current.value;\r\n    let password = this.passwordRef.current.value;\r\n    let confirm = this.confirmRef.current.value;\r\n\r\n    if (this.validateEmail(email)) {\r\n      if (password == confirm) {\r\n        http(\"POST\", \"/teacher/profile/save\", { password, email }, (res) => {\r\n          alert(res.data);\r\n        });\r\n      } else {\r\n        alert(\"Passwords does not match\");\r\n      }\r\n    } else {\r\n      alert(\"Email is invalid\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar>\r\n          {{\r\n            left: (\r\n              <h5>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  className=\"btn btn-primary mr-3\"\r\n                  size=\"sm\"\r\n                  onClick={() => {\r\n                    window.history.back();\r\n                  }}\r\n                >\r\n                  {\"<\"}\r\n                </Button>\r\n                <span id=\"username\">{this.props.user.name}</span>\r\n              </h5>\r\n            ),\r\n            right: (\r\n              <h5>\r\n                <Row className=\"mt-2\">\r\n                  <Col>\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      ClassName=\"btn bg-light\"\r\n                      size=\"sm\"\r\n                    >\r\n                      Verify Accounts\r\n                    </Button>\r\n                  </Col>\r\n                  <Col>\r\n                    {\" \"}\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      lassName=\"btn bg-danger\"\r\n                      size=\"md\"\r\n                      onClick={this.logout}\r\n                    >\r\n                      Logout\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </h5>\r\n            ),\r\n          }}\r\n        </NavBar>\r\n        <div\r\n          className=\"d-flex align-items-center justify-content-center\"\r\n          id=\"userProfileBody\"\r\n        >\r\n          {/* <img src=\"...\" alt=\"...\" class=\"rounded-circle mt-5\"></img> */}\r\n\r\n          <Form className=\"col-sm-4\" id=\"userProfileForm\">\r\n            <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n              <Form.Label column sm=\"12\">\r\n                Email\r\n              </Form.Label>\r\n              <Col sm=\"10\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                  ref={this.emailRef}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n              <Form.Label column sm=\"12\">\r\n                New Password\r\n              </Form.Label>\r\n              <Col sm=\"10\">\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  ref={this.passwordRef}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n              <Form.Label column sm=\"12\">\r\n                Confirm Password\r\n              </Form.Label>\r\n              <Col sm=\"10\">\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  ref={this.confirmRef}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n            <p className=\"ml-2 text-right\">\r\n              <Button\r\n                className=\"ml-7\"\r\n                variant=\"primary\"\r\n                onClick={this.saveUserAccount}\r\n              >\r\n                Save\r\n              </Button>\r\n            </p>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TeacherProfile;\r\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\teacher\\Question\\Question.js",["324"],"import React, { Component } from \"react\";\r\nimport \"./Question.css\";\r\nimport Text from \"./Text\";\r\n\r\nexport default class Question extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      component: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Selecting question type\r\n    if (this.props.question.type == \"text\") {\r\n      this.setState({ component: <Text question={this.props.question} /> });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id={this.props.question.id}\r\n        onClick={this.props.click}\r\n        className=\"question list-group-item list-group-item-action\"\r\n        data-toggle=\"list\"\r\n      >\r\n        {this.state.component}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\WORKSPACE\\PROJECT\\yuvashiksha\\src\\components\\teacher\\Question\\Text.js",[],{"ruleId":"325","replacedBy":"326"},{"ruleId":"327","replacedBy":"328"},{"ruleId":"329","severity":1,"message":"330","line":2,"column":25,"nodeType":"331","messageId":"332","endLine":2,"endColumn":33},{"ruleId":"333","severity":1,"message":"334","line":52,"column":22,"nodeType":"335","messageId":"336","endLine":52,"endColumn":24},{"ruleId":"333","severity":1,"message":"334","line":75,"column":14,"nodeType":"335","messageId":"336","endLine":75,"endColumn":16},{"ruleId":"337","severity":1,"message":"338","line":108,"column":15,"nodeType":"339","endLine":108,"endColumn":80},{"ruleId":"337","severity":1,"message":"338","line":111,"column":15,"nodeType":"339","endLine":115,"endColumn":16},{"ruleId":"337","severity":1,"message":"338","line":118,"column":15,"nodeType":"339","endLine":122,"endColumn":16},{"ruleId":"337","severity":1,"message":"338","line":125,"column":15,"nodeType":"339","endLine":129,"endColumn":16},{"ruleId":"337","severity":1,"message":"338","line":132,"column":15,"nodeType":"339","endLine":136,"endColumn":16},{"ruleId":"337","severity":1,"message":"338","line":139,"column":15,"nodeType":"339","endLine":143,"endColumn":16},{"ruleId":"329","severity":1,"message":"340","line":7,"column":3,"nodeType":"331","messageId":"332","endLine":7,"endColumn":16},{"ruleId":"341","severity":1,"message":"342","line":46,"column":25,"nodeType":"343","messageId":"344","endLine":46,"endColumn":27},{"ruleId":"329","severity":1,"message":"345","line":4,"column":8,"nodeType":"331","messageId":"332","endLine":4,"endColumn":21},{"ruleId":"329","severity":1,"message":"346","line":6,"column":8,"nodeType":"331","messageId":"332","endLine":6,"endColumn":17},{"ruleId":"329","severity":1,"message":"347","line":7,"column":10,"nodeType":"331","messageId":"332","endLine":7,"endColumn":14},{"ruleId":"341","severity":1,"message":"342","line":44,"column":25,"nodeType":"343","messageId":"344","endLine":44,"endColumn":27},{"ruleId":"348","severity":1,"message":"349","line":9,"column":7,"nodeType":"350","messageId":"351","endLine":9,"endColumn":13},{"ruleId":"348","severity":1,"message":"349","line":8,"column":7,"nodeType":"350","messageId":"351","endLine":8,"endColumn":13},{"ruleId":"329","severity":1,"message":"352","line":4,"column":8,"nodeType":"331","messageId":"332","endLine":4,"endColumn":15},{"ruleId":"333","severity":1,"message":"334","line":18,"column":22,"nodeType":"335","messageId":"336","endLine":18,"endColumn":24},{"ruleId":"333","severity":1,"message":"353","line":25,"column":46,"nodeType":"335","messageId":"336","endLine":25,"endColumn":48},{"ruleId":"329","severity":1,"message":"340","line":12,"column":10,"nodeType":"331","messageId":"332","endLine":12,"endColumn":23},{"ruleId":"329","severity":1,"message":"354","line":12,"column":25,"nodeType":"331","messageId":"332","endLine":12,"endColumn":30},{"ruleId":"337","severity":1,"message":"355","line":116,"column":17,"nodeType":"339","endLine":122,"endColumn":18},{"ruleId":"337","severity":1,"message":"355","line":125,"column":17,"nodeType":"339","endLine":131,"endColumn":18},{"ruleId":"329","severity":1,"message":"356","line":2,"column":10,"nodeType":"331","messageId":"332","endLine":2,"endColumn":19},{"ruleId":"329","severity":1,"message":"357","line":2,"column":21,"nodeType":"331","messageId":"332","endLine":2,"endColumn":24},{"ruleId":"329","severity":1,"message":"358","line":2,"column":26,"nodeType":"331","messageId":"332","endLine":2,"endColumn":29},{"ruleId":"329","severity":1,"message":"359","line":51,"column":18,"nodeType":"331","messageId":"332","endLine":51,"endColumn":23},{"ruleId":"333","severity":1,"message":"334","line":131,"column":29,"nodeType":"335","messageId":"336","endLine":131,"endColumn":31},{"ruleId":"333","severity":1,"message":"334","line":180,"column":27,"nodeType":"335","messageId":"336","endLine":180,"endColumn":29},{"ruleId":"360","severity":1,"message":"361","line":186,"column":5,"nodeType":"362","endLine":186,"endColumn":15},{"ruleId":"333","severity":1,"message":"334","line":196,"column":27,"nodeType":"335","messageId":"336","endLine":196,"endColumn":29},{"ruleId":"333","severity":1,"message":"334","line":215,"column":27,"nodeType":"335","messageId":"336","endLine":215,"endColumn":29},{"ruleId":"333","severity":1,"message":"334","line":237,"column":23,"nodeType":"335","messageId":"336","endLine":237,"endColumn":25},{"ruleId":"333","severity":1,"message":"334","line":245,"column":22,"nodeType":"335","messageId":"336","endLine":245,"endColumn":24},{"ruleId":"337","severity":1,"message":"355","line":615,"column":19,"nodeType":"339","endLine":620,"endColumn":20},{"ruleId":"333","severity":1,"message":"334","line":631,"column":40,"nodeType":"335","messageId":"336","endLine":631,"endColumn":42},{"ruleId":"333","severity":1,"message":"334","line":33,"column":22,"nodeType":"335","messageId":"336","endLine":33,"endColumn":24},{"ruleId":"333","severity":1,"message":"334","line":26,"column":26,"nodeType":"335","messageId":"336","endLine":26,"endColumn":28},{"ruleId":"333","severity":1,"message":"334","line":40,"column":28,"nodeType":"335","messageId":"336","endLine":40,"endColumn":30},{"ruleId":"333","severity":1,"message":"334","line":49,"column":28,"nodeType":"335","messageId":"336","endLine":49,"endColumn":30},{"ruleId":"333","severity":1,"message":"334","line":67,"column":28,"nodeType":"335","messageId":"336","endLine":67,"endColumn":30},{"ruleId":"333","severity":1,"message":"334","line":130,"column":42,"nodeType":"335","messageId":"336","endLine":130,"endColumn":44},{"ruleId":"333","severity":1,"message":"334","line":136,"column":42,"nodeType":"335","messageId":"336","endLine":136,"endColumn":44},{"ruleId":"333","severity":1,"message":"334","line":153,"column":22,"nodeType":"335","messageId":"336","endLine":153,"endColumn":24},{"ruleId":"333","severity":1,"message":"334","line":26,"column":26,"nodeType":"335","messageId":"336","endLine":26,"endColumn":28},{"ruleId":"333","severity":1,"message":"334","line":40,"column":28,"nodeType":"335","messageId":"336","endLine":40,"endColumn":30},{"ruleId":"333","severity":1,"message":"334","line":49,"column":28,"nodeType":"335","messageId":"336","endLine":49,"endColumn":30},{"ruleId":"333","severity":1,"message":"334","line":67,"column":28,"nodeType":"335","messageId":"336","endLine":67,"endColumn":30},{"ruleId":"333","severity":1,"message":"334","line":127,"column":42,"nodeType":"335","messageId":"336","endLine":127,"endColumn":44},{"ruleId":"333","severity":1,"message":"334","line":133,"column":42,"nodeType":"335","messageId":"336","endLine":133,"endColumn":44},{"ruleId":"333","severity":1,"message":"334","line":148,"column":22,"nodeType":"335","messageId":"336","endLine":148,"endColumn":24},{"ruleId":"329","severity":1,"message":"359","line":2,"column":34,"nodeType":"331","messageId":"332","endLine":2,"endColumn":39},{"ruleId":"329","severity":1,"message":"363","line":4,"column":32,"nodeType":"331","messageId":"332","endLine":4,"endColumn":38},{"ruleId":"337","severity":1,"message":"355","line":119,"column":21,"nodeType":"339","endLine":124,"endColumn":22},{"ruleId":"333","severity":1,"message":"334","line":150,"column":19,"nodeType":"335","messageId":"336","endLine":150,"endColumn":21},{"ruleId":"333","severity":1,"message":"334","line":150,"column":38,"nodeType":"335","messageId":"336","endLine":150,"endColumn":40},{"ruleId":"333","severity":1,"message":"334","line":162,"column":26,"nodeType":"335","messageId":"336","endLine":162,"endColumn":28},{"ruleId":"333","severity":1,"message":"334","line":181,"column":17,"nodeType":"335","messageId":"336","endLine":181,"endColumn":19},{"ruleId":"333","severity":1,"message":"334","line":181,"column":35,"nodeType":"335","messageId":"336","endLine":181,"endColumn":37},{"ruleId":"329","severity":1,"message":"364","line":8,"column":8,"nodeType":"331","messageId":"332","endLine":8,"endColumn":9},{"ruleId":"333","severity":1,"message":"334","line":61,"column":35,"nodeType":"335","messageId":"336","endLine":61,"endColumn":37},{"ruleId":"337","severity":1,"message":"355","line":109,"column":21,"nodeType":"339","endLine":114,"endColumn":22},{"ruleId":"333","severity":1,"message":"334","line":140,"column":24,"nodeType":"335","messageId":"336","endLine":140,"endColumn":26},{"ruleId":"333","severity":1,"message":"334","line":148,"column":26,"nodeType":"335","messageId":"336","endLine":148,"endColumn":28},{"ruleId":"333","severity":1,"message":"334","line":166,"column":17,"nodeType":"335","messageId":"336","endLine":166,"endColumn":19},{"ruleId":"333","severity":1,"message":"334","line":52,"column":23,"nodeType":"335","messageId":"336","endLine":52,"endColumn":25},{"ruleId":"333","severity":1,"message":"334","line":52,"column":53,"nodeType":"335","messageId":"336","endLine":52,"endColumn":55},{"ruleId":"329","severity":1,"message":"365","line":2,"column":22,"nodeType":"331","messageId":"332","endLine":2,"endColumn":33},{"ruleId":"333","severity":1,"message":"334","line":42,"column":24,"nodeType":"335","messageId":"336","endLine":42,"endColumn":26},{"ruleId":"333","severity":1,"message":"334","line":86,"column":35,"nodeType":"335","messageId":"336","endLine":86,"endColumn":37},{"ruleId":"333","severity":1,"message":"334","line":96,"column":35,"nodeType":"335","messageId":"336","endLine":96,"endColumn":37},{"ruleId":"333","severity":1,"message":"334","line":67,"column":35,"nodeType":"335","messageId":"336","endLine":67,"endColumn":37},{"ruleId":"333","severity":1,"message":"334","line":68,"column":35,"nodeType":"335","messageId":"336","endLine":68,"endColumn":37},{"ruleId":"333","severity":1,"message":"334","line":43,"column":20,"nodeType":"335","messageId":"336","endLine":43,"endColumn":22},{"ruleId":"333","severity":1,"message":"334","line":57,"column":17,"nodeType":"335","messageId":"336","endLine":57,"endColumn":19},{"ruleId":"333","severity":1,"message":"334","line":65,"column":22,"nodeType":"335","messageId":"336","endLine":65,"endColumn":24},{"ruleId":"333","severity":1,"message":"334","line":90,"column":26,"nodeType":"335","messageId":"336","endLine":90,"endColumn":28},{"ruleId":"333","severity":1,"message":"334","line":15,"column":14,"nodeType":"335","messageId":"336","endLine":15,"endColumn":16},{"ruleId":"333","severity":1,"message":"334","line":29,"column":23,"nodeType":"335","messageId":"336","endLine":29,"endColumn":25},{"ruleId":"333","severity":1,"message":"334","line":56,"column":26,"nodeType":"335","messageId":"336","endLine":56,"endColumn":28},{"ruleId":"333","severity":1,"message":"334","line":120,"column":26,"nodeType":"335","messageId":"336","endLine":120,"endColumn":28},{"ruleId":"337","severity":1,"message":"355","line":232,"column":13,"nodeType":"339","endLine":237,"endColumn":14},{"ruleId":"333","severity":1,"message":"334","line":81,"column":22,"nodeType":"335","messageId":"336","endLine":81,"endColumn":24},{"ruleId":"333","severity":1,"message":"334","line":86,"column":27,"nodeType":"335","messageId":"336","endLine":86,"endColumn":29},{"ruleId":"333","severity":1,"message":"334","line":109,"column":22,"nodeType":"335","messageId":"336","endLine":109,"endColumn":24},{"ruleId":"329","severity":1,"message":"366","line":3,"column":28,"nodeType":"331","messageId":"332","endLine":3,"endColumn":32},{"ruleId":"333","severity":1,"message":"334","line":17,"column":22,"nodeType":"335","messageId":"336","endLine":17,"endColumn":24},{"ruleId":"333","severity":1,"message":"334","line":38,"column":26,"nodeType":"335","messageId":"336","endLine":38,"endColumn":28},{"ruleId":"333","severity":1,"message":"334","line":58,"column":26,"nodeType":"335","messageId":"336","endLine":58,"endColumn":28},{"ruleId":"367","severity":1,"message":"368","line":11,"column":3,"nodeType":"369","messageId":"370","endLine":13,"endColumn":4},{"ruleId":"333","severity":1,"message":"353","line":25,"column":23,"nodeType":"335","messageId":"336","endLine":25,"endColumn":25},{"ruleId":"333","severity":1,"message":"353","line":25,"column":45,"nodeType":"335","messageId":"336","endLine":25,"endColumn":47},{"ruleId":"333","severity":1,"message":"334","line":19,"column":24,"nodeType":"335","messageId":"336","endLine":19,"endColumn":26},{"ruleId":"333","severity":1,"message":"353","line":18,"column":18,"nodeType":"335","messageId":"336","endLine":18,"endColumn":20},{"ruleId":"333","severity":1,"message":"353","line":18,"column":36,"nodeType":"335","messageId":"336","endLine":18,"endColumn":38},{"ruleId":"333","severity":1,"message":"334","line":24,"column":26,"nodeType":"335","messageId":"336","endLine":24,"endColumn":28},{"ruleId":"333","severity":1,"message":"334","line":19,"column":24,"nodeType":"335","messageId":"336","endLine":19,"endColumn":26},{"ruleId":"333","severity":1,"message":"334","line":28,"column":22,"nodeType":"335","messageId":"336","endLine":28,"endColumn":24},{"ruleId":"333","severity":1,"message":"334","line":50,"column":20,"nodeType":"335","messageId":"336","endLine":50,"endColumn":22},{"ruleId":"333","severity":1,"message":"334","line":17,"column":34,"nodeType":"335","messageId":"336","endLine":17,"endColumn":36},"no-native-reassign",["371"],"no-negated-in-lhs",["372"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'BrowserRouter' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ExamGuidlines' is defined but never used.","'StartExam' is defined but never used.","'Link' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'Subject' is defined but never used.","Expected '!==' and instead saw '!='.","'Route' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Modal' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'FaPlus' is defined but never used.","'$' is defined but never used.","'useLocation' is defined but never used.","'Form' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]